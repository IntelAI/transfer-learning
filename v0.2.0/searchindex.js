Search.setIndex({"docnames": ["_autosummary/tlt.datasets.dataset.BaseDataset", "_autosummary/tlt.datasets.hf_dataset.HFDataset", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "_autosummary/tlt.datasets.tf_dataset.TFDataset", "_autosummary/tlt.models.hf_model.HFModel", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "_autosummary/tlt.models.model.BaseModel", "_autosummary/tlt.models.pytorch_model.PyTorchModel", "_autosummary/tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "_autosummary/tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel", "_autosummary/tlt.models.tf_model.TFModel", "api", "cli", "examples/cli/image_classification", "examples/cli/text_classification", "index", "notebooks", "notebooks/Medical_Imaging_Classification", "notebooks/Remote_Sensing_Image_Scene_Classification", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning", "notebooks/TLT_TF_Image_Classification_Transfer_Learning", "notebooks/TLT_TF_Text_Classification_Transfer_Learning", "quickstart"], "filenames": ["_autosummary/tlt.datasets.dataset.BaseDataset.rst", "_autosummary/tlt.datasets.hf_dataset.HFDataset.rst", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.rst", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.rst", "_autosummary/tlt.datasets.tf_dataset.TFDataset.rst", "_autosummary/tlt.models.hf_model.HFModel.rst", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.rst", "_autosummary/tlt.models.model.BaseModel.rst", "_autosummary/tlt.models.pytorch_model.PyTorchModel.rst", "_autosummary/tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel.rst", "_autosummary/tlt.models.tf_model.TFModel.rst", "api.rst", "cli.rst", "examples/cli/image_classification.rst", "examples/cli/text_classification.rst", "index.rst", "notebooks.rst", "notebooks/Medical_Imaging_Classification.nblink", "notebooks/Remote_Sensing_Image_Scene_Classification.nblink", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Text_Classification_Transfer_Learning.nblink", "quickstart.rst"], "titles": ["tlt.datasets.dataset.BaseDataset", "tlt.datasets.hf_dataset.HFDataset", "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset", "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "tlt.datasets.pytorch_dataset.PyTorchDataset", "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "tlt.datasets.tf_dataset.TFDataset", "tlt.models.hf_model.HFModel", "tlt.models.image_classification.image_classification_model.ImageClassificationModel", "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "tlt.models.model.BaseModel", "tlt.models.pytorch_model.PyTorchModel", "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel", "tlt.models.text_classification.text_classification_model.TextClassificationModel", "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel", "tlt.models.tf_model.TFModel", "API Reference", "CLI Reference", "Image Classification TLT CLI Examples", "Text Classification TLT CLI Examples", "Intel\u00ae Transfer Learning Tool", "Example Notebooks", "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Intel\u00ae Transfer Learning Tool Quick Start"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 36, 37, 38], "dataset_dir": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "dataset_nam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28, 29, 30, 33, 35, 36, 37], "none": [0, 3, 4, 8, 11, 16, 17, 22, 24, 27, 33, 34, 36, 37, 38], "dataset_catalog": [0, 1, 2, 7, 10, 13, 27, 28, 33, 35, 36, 37], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 38], "abstract": [0, 20], "base": [0, 1, 2, 7, 10, 13, 14, 15, 20, 21, 26, 31, 33, 34, 35, 36, 37], "us": [0, 3, 4, 8, 11, 20, 22, 24, 25, 27, 28, 31, 32, 38], "train": [0, 5, 6, 9, 12, 29, 30, 33, 34, 35, 37, 38], "evalu": [0, 28, 29, 30, 35, 36, 37, 38], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "constructor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 37], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "repres": [1, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 35, 36, 37], "hug": [1, 9, 14, 22, 31, 38], "face": [1, 9, 14, 22, 31, 38], "an": [2, 5, 6, 27, 28, 32, 33, 34, 35, 36, 37, 38], "imag": [2, 3, 4, 5, 6, 15, 16, 17, 18, 19, 31, 32, 37, 38], "classif": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 28, 31, 32, 38], "num_work": [3, 6, 8, 9], "0": [3, 6, 8, 9, 28, 30, 32, 33, 34, 35, 36, 37, 38], "shuffle_fil": [3, 4, 5, 6, 8, 9, 11, 12, 37], "true": [3, 4, 5, 6, 8, 9, 11, 12, 27, 28, 33, 34, 35, 36, 37, 38], "A": [3, 4, 8, 9, 11, 12, 27, 28, 30], "custom": [3, 4, 8, 11, 17, 27, 28, 33, 34, 35, 36, 38], "can": [3, 4, 8, 11, 20, 22, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38], "pytorch": [3, 7, 16, 21, 27, 28, 31, 38], "model": [3, 4, 8, 11, 29, 30, 32, 38], "note": [3, 4, 11, 29, 30, 33, 34, 35, 36, 37], "directori": [3, 4, 8, 11, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "i": [3, 4, 8, 11, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "expect": [3, 4, 11, 27, 29, 30, 37], "organ": [3, 4, 27, 29, 35, 36], "subfold": [3, 4, 27, 29, 35, 36], "each": [3, 4, 11, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38], "should": [3, 4, 11, 27, 28, 29, 35, 36, 37], "contain": [3, 4, 8, 11, 27, 28, 29, 33, 34, 35, 36], "jpg": [3, 4, 27, 29, 35, 36], "The": [3, 4, 8, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "name": [3, 4, 8, 11, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38], "label": [3, 4, 8, 11, 27, 29, 30, 35, 36, 37], "class_a": [3, 4, 11, 27], "class_b": [3, 4, 11, 27], "class_c": [3, 4, 27], "paramet": [3, 4, 8, 11, 27], "str": [3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37], "where": [3, 4, 11, 28, 30, 37], "data": [3, 4, 8, 11, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38], "locat": [3, 4, 27, 28, 30, 34], "It": [3, 4, 33, 34, 36, 37], "subdirectori": [3, 4, 35, 36], "option": [3, 4, 8, 11, 27, 28, 38], "If": [3, 4, 8, 11, 27, 28, 30, 32, 33, 34, 35, 36, 37], "given": [3, 4, 8, 11, 27, 28], "folder": [3, 4, 11, 28, 29, 32, 33, 34, 35, 36], "int": [3, 4, 8, 11, 15, 35, 36, 37], "number": [3, 8, 28, 33, 34, 35, 36, 37], "process": [3, 28, 31, 36], "load": [3, 8, 11, 27, 28, 30, 35, 36, 37, 38], "default": [3, 4, 8, 11, 27, 28, 30, 32, 33, 34, 35, 36, 37], "bool": [3, 4, 8, 11, 15, 27, 28, 35, 36, 37], "whether": [3, 4, 8, 11], "shuffl": [3, 4, 8, 11], "rais": [3, 4, 8, 11, 27], "filenotfounderror": [3, 4, 8, 11], "doe": [3, 4, 33, 34, 36, 37], "exist": [3, 4, 27, 35, 36, 37], "color_mod": 4, "rgb": [4, 35], "seed": [4, 11], "tensorflow": [4, 5, 11, 12, 27, 28, 29, 30, 31, 35, 38], "specifi": [4, 8, 11, 28, 30, 33, 34, 35, 36, 37, 38], "color": [4, 35, 36], "mode": [4, 28, 38], "greyscal": 4, "rgba": 4, "random": [4, 11], "split": [5, 6, 9, 12, 33, 34, 35, 36, 37], "as_supervis": 5, "from": [5, 6, 8, 9, 11, 12, 27, 28, 31, 32, 33, 34, 37, 38], "catalog": [5, 6, 9, 12, 27, 28, 33, 34, 38], "download": [6, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "torchvis": [6, 19, 27, 28, 31, 38], "file_nam": 8, "class_nam": [8, 11, 27, 28, 33, 34, 35, 36, 37], "list": [8, 11, 27, 30, 33, 34, 35, 36, 37, 38], "column_nam": 8, "label_map_func": [8, 11, 37], "callabl": [8, 11], "type": [8, 27, 33, 34, 36, 37, 38], "ani": [8, 32, 35, 36, 38], "header": [8, 11, 37], "union": 8, "infer": [8, 36, 38], "delimit": [8, 11, 28, 30, 37], "usecol": 8, "text": [8, 9, 10, 11, 12, 22, 23, 24, 25, 28, 31, 32, 38], "transform": [8, 11], "huggingfac": [8, 27, 28], "file": [8, 11, 27, 28, 30, 34, 35, 36, 37, 38], "comma": [8, 11, 28, 30, 37], "separ": [8, 11, 28, 30, 37], "tab": [8, 30, 37], "": [8, 11, 27, 28, 30, 31, 33, 34, 36, 37, 38], "column": [8, 11, 27, 30, 37], "includ": [8, 27], "function": [8, 11, 27, 30, 33, 34, 35, 36, 37, 38], "map": [8, 11, 30, 35, 36, 37], "row": [8, 11, 37], "start": [8, 31, 32], "defualt": 8, "string": [8, 11, 28, 30, 35, 37], "charact": [8, 11, 30], "eaxh": 8, "boolean": [8, 11, 27], "worker": 8, "requir": [8, 28, 32, 33, 34, 38], "when": [8, 27, 28, 33, 34, 35, 36, 37, 38], "creat": [8, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "loader": 8, "integ": [8, 35, 36, 37], "index": [8, 31, 37], "found": [8, 11, 27, 28, 35, 37, 38], "typeerror": [8, 11], "mismatch": 8, "valueerror": [8, 11], "empti": [8, 11, 32], "csv_file_nam": [11, 37], "tf": [11, 13, 17, 18, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37], "fals": [11, 27, 35, 36, 37], "select_col": [11, 37], "exclude_col": [11, 37], "thi": [11, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "csv": [11, 27, 28, 30, 37, 38], "two": [11, 27, 30, 33, 34, 35, 36, 37], "first": [11, 30, 33, 34, 35, 36, 37], "second": [11, 28, 30, 33, 34, 35, 36, 37, 38], "sentenc": [11, 27, 30, 37], "classifi": [11, 27, 30, 31, 37], "For": [11, 28, 33, 34, 35, 36, 37], "exampl": [11, 27, 28, 31, 33, 34, 35, 36, 37], "valu": [11, 28, 30, 37], "look": [11, 37], "similar": [11, 37], "snippet": 11, "below": [11, 29, 30, 32, 33, 34], "ha": [11, 28, 29, 30, 36, 37], "more": [11, 30, 33, 34, 35, 36, 37, 38], "filter": [11, 27, 28, 30, 37], "out": [11, 35, 36, 37], "which": [11, 27, 29, 30, 33, 34, 35, 36, 37, 38], "pars": [11, 37], "order": 11, "across": 11, "appli": [11, 28, 33, 34, 35, 36, 37], "element": 11, "instead": [11, 35, 36], "numer": [11, 30, 35, 36, 37], "provid": [11, 27, 28, 30, 35, 36, 37], "field": 11, "indic": 11, "line": [11, 35, 36], "skip": [11, 32, 35, 36, 37], "sort": [11, 27], "all": [11, 27, 31, 35, 36, 37], "At": 11, "most": 11, "one": [11, 33, 34, 35, 36, 37], "exclud": 11, "model_nam": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38], "framework": [14, 15, 20, 21, 23, 26, 27, 32, 33, 34, 35, 36, 37, 38], "frameworktyp": [14, 15, 20, 21, 23, 26, 27, 33, 34, 38], "use_cas": [14, 15, 20, 21, 23, 26, 27, 33, 34, 35, 36, 37, 38], "usecasetyp": [14, 15, 20, 21, 23, 26, 27, 33, 34, 38], "image_s": [15, 27, 33, 34, 35, 36, 38], "do_fine_tun": 15, "dropout_layer_r": [15, 23], "pretrain": [15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 31, 35, 36, 37], "optim": [16, 17, 22, 24, 27, 31, 36, 38], "loss": [16, 17, 22, 24, 27, 28, 33, 34, 35, 36, 37, 38], "kwarg": [16, 17, 18, 19, 22, 24, 25, 27], "hub": [18, 25, 31, 33, 34, 36, 37], "transfer": 20, "learn": [20, 28, 30], "multi": [22, 30, 33, 34, 35, 36, 37], "fine": [22, 24, 25, 28, 31, 35, 36], "tune": [22, 24, 25, 28, 31, 35, 36, 38], "float": [23, 33, 34, 36, 37], "binari": [24, 25, 31, 38], "simplest": 27, "wai": 27, "load_dataset": [27, 34, 35, 36, 37, 38], "get_dataset": [27, 33, 35, 36, 37], "third": [27, 33, 34, 36, 37, 38], "parti": 27, "tlt": [27, 31, 32, 33, 34, 35, 36, 37, 38], "dataset_factori": [27, 33, 34, 35, 36, 37, 38], "ar": [27, 28, 30, 32, 33, 34, 35, 36, 37], "see": [27, 33, 34, 35, 36, 37, 38], "tfcustomtextclassificationdataset": 27, "document": [27, 28, 35, 36, 37], "addit": [27, 33, 34, 35, 36, 37], "case": [27, 28, 31, 32, 35, 36, 37, 38], "task": [27, 30, 37], "inform": [27, 28, 33, 34, 35, 36, 37, 38], "purpos": [27, 35, 36], "keyword": 27, "argument": [27, 30, 33, 34], "depend": [27, 32], "being": [27, 28, 29, 30, 37], "return": [27, 33, 34, 35, 36, 37], "notimplementederror": 27, "support": [27, 28, 30, 33, 34, 35, 36, 37], "import": [27, 38], "tmp": [27, 28, 29, 30, 38], "flower_photo": [27, 29, 35, 36, 38], "image_classif": [27, 33, 34, 35, 36, 38], "3670": [27, 38], "belong": [27, 29, 38], "5": [27, 29, 31, 38], "daisi": [27, 29, 35, 36], "dandelion": [27, 29, 35, 36], "rose": [27, 29, 35, 36], "sunflow": [27, 29, 35, 36], "tulip": [27, 29, 35, 36], "tf_dataset": [27, 28, 33, 36, 37], "cv": [27, 28], "nlp": 27, "request": [27, 35], "yet": [27, 35, 36], "tf_flower": [27, 29, 36], "user": [27, 33, 34], "rare": 27, "need": [27, 35, 37], "interact": 27, "directli": 27, "discov": 27, "work": [27, 35, 36], "avail": [27, 28, 31, 33, 34, 35, 36, 37, 38], "get_model": [27, 33, 34, 35, 36, 37, 38], "while": [27, 28, 35, 36, 37], "load_model": [27, 33, 34], "either": [27, 30, 37, 38], "path": [27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "object": [27, 31, 33, 34, 35, 36, 37, 38], "memori": [27, 33, 34, 36, 37], "discoveri": 27, "inspect": 27, "get_supported_model": 27, "print_supported_model": [27, 33, 34, 35, 36, 37], "model_factori": [27, 33, 34, 35, 36, 37, 38], "saved_model": [27, 28, 33, 34, 35, 36, 37, 38], "pb": [27, 28, 33, 34, 35, 36, 37, 38], "pt": [27, 28], "configur": [27, 36], "set": [27, 29, 32, 33, 34, 35, 36, 37], "kera": [27, 36], "adam": 27, "torch": [27, 35], "nn": 27, "crossentropyloss": 27, "those": 27, "initi": 27, "further": 27, "thei": 27, "amsgrad": 27, "you": [27, 32, 33, 34, 35, 36, 37], "want": [27, 35, 36], "sequenti": [27, 38], "input": [27, 35, 36, 37], "layer": [27, 33, 34, 35, 36, 37, 38], "dens": [27, 33, 34, 35, 36, 37, 38], "my_model": 27, "shape": [27, 38], "3": [27, 31, 32, 38], "4": [27, 31, 38], "activ": [27, 32, 38], "relu": 27, "softmax": 27, "efficientnet_b0": [27, 28, 31, 35, 38], "224": [27, 35], "dictionari": 27, "leaf": 27, "item": 27, "about": [27, 28, 33, 34, 35, 36, 37], "nameerror": 27, "config": [27, 28, 36, 38], "unknown": 27, "miss": 27, "verbos": [27, 28, 33, 34, 35, 36, 37], "print": [27, 33, 34, 35, 36, 37, 38], "categor": 27, "result": [27, 35, 36, 37, 38], "onli": [27, 30, 32, 33, 34, 36], "show": [27, 29, 30, 33, 34, 35, 36, 37], "command": [28, 38], "arg": 28, "intel": 28, "neural": [28, 36, 38], "compressor": [28, 36, 38], "dir": [28, 29, 30, 38], "model_dir": 28, "reload": 28, "dataset": [28, 32, 38], "time": [28, 33, 34, 35, 36, 37, 38], "inc": [28, 36, 38], "inc_config": [28, 36, 38], "yaml": [28, 36, 38], "http": [28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "github": [28, 32, 35, 36, 38], "com": [28, 29, 32, 34, 35, 36, 38], "blob": 28, "master": 28, "doc": 28, "md": 28, "gener": [28, 33, 34, 35, 36, 37, 38], "perform": [28, 33, 34, 36, 37, 38], "accuraci": [28, 33, 34, 35, 36, 37, 38], "batch": [28, 33, 34, 35, 36, 37, 38], "size": [28, 33, 34, 35, 36, 37, 38], "batch_siz": [28, 33, 34, 35, 36, 37, 38], "32": [28, 33, 34, 35, 36, 37, 38], "output": [28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "output_dir": [28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "writeabl": [28, 35, 36, 37], "write": [28, 36], "temporari": 28, "delet": 28, "after": [28, 29, 30, 35, 36, 37], "complet": [28, 35], "alreadi": [28, 29, 35, 36, 37], "been": [28, 36, 37], "previous": 28, "export": [28, 29, 30, 32, 38], "try": 28, "get": [28, 32], "10": [28, 32, 33, 34, 35, 37, 38], "dataset_fil": [28, 30], "f": [28, 29, 30, 33, 35, 36, 38], "singl": [28, 35, 36, 37], "extra": 28, "graph": [28, 38], "save": [28, 32, 33, 34, 35, 36, 38], "post": [28, 38], "tree": 28, "dure": [28, 30], "criterion": [28, 36, 38], "accuracy_criterion": 28, "rel": [28, 36], "allow": [28, 30, 33, 34, 35, 36, 37], "01": [28, 36, 38], "1": [28, 29, 30, 31, 38], "timeout": [28, 36, 38], "finish": [28, 36], "max": [28, 36, 38], "trial": [28, 36, 38], "reach": [28, 35, 36, 37, 38], "mean": [28, 35, 36], "phase": [28, 36], "stop": [28, 35, 36, 37], "met": [28, 36], "max_trial": [28, 36], "maximum": [28, 37], "50": [28, 33, 34, 38], "workspac": [28, 36], "deep": 28, "log": 28, "checkpoint": [28, 35, 36, 37, 38], "etc": [28, 33, 34, 35, 36, 37], "epoch": [28, 29, 30, 33, 34, 35, 36, 37, 38], "init": 28, "init_checkpoint": 28, "weight": [28, 35, 36, 37], "resum": 28, "latest": [28, 33, 34, 35, 36, 37], "add": [28, 33, 34, 35, 36], "aug": 28, "add_aug": [28, 33, 34, 35, 36], "choic": 28, "augment": [28, 33, 34, 35, 36], "hvflip": [28, 33, 34, 36], "hflip": [28, 33, 34, 35, 36], "vflip": [28, 33, 34, 36], "rotat": [28, 33, 34, 35, 36], "zoom": [28, 33, 34, 36], "earli": [28, 35, 36, 37], "early_stop": [28, 33, 34, 35, 36, 37], "enabl": [28, 33, 34, 35, 36, 37], "converg": [28, 35, 36, 37], "lr": 28, "decai": [28, 35, 36, 37], "lr_decai": [28, 35, 36, 37], "do_ev": [28, 35, 36, 37], "rate": [28, 35, 36, 37], "valid": [28, 33, 34, 35, 36, 37], "end": [28, 35, 36, 37], "how": [29, 30, 33, 34, 35, 36, 37], "flower": [29, 35, 36], "photo": 29, "extract": [29, 30, 35, 36, 37], "format": [29, 30, 33, 34, 35, 36, 37, 38], "mkdir": [29, 30, 32], "p": [29, 30, 32, 38], "wget": [29, 30], "storag": [29, 35, 36], "googleapi": [29, 35, 36], "org": [29, 30, 33, 34, 35, 36, 37], "example_imag": [29, 35, 36], "tgz": [29, 35, 36], "tar": 29, "xzf": 29, "resnet_v1_50": [29, 31, 33, 34, 36, 38], "2": [29, 30, 31, 32, 38], "mai": [29, 30, 36], "vari": [29, 30], "sinc": [29, 30, 35, 36], "run": [29, 30, 33, 34, 35, 36, 37, 38], "new": [29, 30, 32, 33, 34, 35, 36, 37], "eval": [29, 30, 38], "onlin": [29, 35, 36], "tfflower": [29, 35, 36], "author": [29, 30, 33, 34, 35, 36, 37], "team": [29, 35, 36], "titl": [29, 30, 33, 34, 35, 36, 37], "month": [29, 30, 34, 35, 36, 37], "jan": [29, 35, 36], "year": [29, 30, 33, 34, 35, 36, 37], "2019": [29, 30, 35, 36, 37], "url": [29, 30, 32, 34, 35, 36, 37], "have": [30, 33, 34, 35, 36, 37], "although": 30, "api": [30, 31, 32], "flexibl": 30, "translat": [30, 37], "sm": [30, 37], "spam": [30, 37], "collect": [30, 33, 37], "zip": [30, 37, 38], "messag": [30, 37], "ham": [30, 37], "mesag": [30, 37], "replac": 30, "befor": 30, "archiv": [30, 37], "ic": [30, 37], "uci": [30, 37], "edu": [30, 35, 37], "ml": [30, 37], "machin": [30, 37], "databas": [30, 37], "00228": [30, 37], "smsspamcollect": [30, 37], "unzip": [30, 34], "make": [30, 31, 33, 34, 36, 37], "copi": [30, 32], "smsspamcollection_numer": 30, "cp": 30, "pass": [30, 35, 36, 37, 38], "sed": 30, "g": [30, 33], "small_bert": [30, 31, 37], "bert_en_uncased_l": [30, 31, 37], "2_h": [30, 31, 37], "128_a": [30, 31, 37], "our": [30, 33, 34, 35, 36, 37], "t": [30, 33, 35, 36, 37], "demonstr": [30, 35, 36], "follow": [30, 32, 33, 34, 35, 36, 37], "imdb_review": [30, 37, 38], "glue": [30, 37, 38], "sst2": [30, 37, 38], "cola": [30, 37, 38], "inproceed": [30, 37], "maa": [30, 37], "etal": [30, 37], "2011": [30, 37], "acl": [30, 37], "hlt2011": [30, 37], "andrew": [30, 37], "l": [30, 33, 35, 36, 37], "dali": [30, 37], "raymond": [30, 37], "e": [30, 37], "pham": [30, 37], "peter": [30, 37], "huang": [30, 37], "dan": [30, 37], "ng": [30, 37], "y": [30, 33, 34, 37], "pott": [30, 37], "christoph": [30, 37], "word": [30, 37], "vector": [30, 33, 34, 35, 36, 37], "sentiment": [30, 37], "analysi": [30, 33, 37], "booktitl": [30, 37], "proceed": [30, 34, 37], "49th": [30, 37], "annual": [30, 37], "meet": [30, 37, 38], "associ": [30, 37], "comput": [30, 31, 37], "linguist": [30, 37], "human": [30, 37], "languag": [30, 31, 37], "technologi": [30, 37], "june": [30, 37], "address": [30, 36, 37], "portland": [30, 37], "oregon": [30, 37], "usa": [30, 37], "publish": [30, 33, 34, 37], "page": [30, 31, 33, 34, 37], "142": [30, 37], "150": [30, 37], "www": [30, 34, 35, 37], "aclweb": [30, 37], "anthologi": [30, 37], "p11": [30, 37], "1015": [30, 37], "wang2019glu": [30, 37], "benchmark": [30, 34, 36, 37, 38], "platform": [30, 33, 34, 36, 37], "natur": [30, 31, 33, 37], "understand": [30, 37], "wang": [30, 37], "alex": [30, 35, 37], "singh": [30, 37], "amanpreet": [30, 37], "michael": [30, 37], "julian": [30, 37], "hill": [30, 37], "felix": [30, 37], "levi": [30, 37], "omer": [30, 37], "bowman": [30, 37], "samuel": [30, 37], "r": [30, 32, 33, 36, 37], "In": [30, 33, 34, 35, 36, 37], "iclr": [30, 37], "misc": [30, 37], "misc_sms_spam_collection_228": [30, 37], "almeida": [30, 37], "tiago": [30, 37], "2012": [30, 37], "howpublish": [30, 37], "repositori": [30, 32, 37], "To": [31, 33, 34, 35, 36, 38], "workflow": [31, 33, 34], "easier": 31, "scientist": 31, "varieti": [31, 35], "ai": [31, 32, 38], "public": [31, 35, 36], "incorpor": 31, "best": [31, 38], "practic": 31, "xpu": 31, "low": [31, 36], "code": 31, "cli": 31, "9": [31, 32, 38], "19": 31, "tfhub": [31, 33, 34, 35, 36, 37], "26": [31, 38], "11": 31, "60": 31, "jupyt": [31, 32], "vision": 31, "detect": 31, "bert": [31, 37], "squad": 31, "question": 31, "answer": 31, "video": 31, "medic": [31, 32], "remot": [31, 32], "sens": [31, 32], "12_h": 31, "768_a": 31, "12": [31, 38], "alexnet": [31, 38], "bert_en_wwm_uncased_l": 31, "24_h": 31, "1024_a": 31, "16": [31, 33, 34, 35, 36, 37], "convnext_tini": [31, 38], "convnext_smal": [31, 38], "efficientnet_b1": [31, 38], "convnext_bas": [31, 38], "efficientnet_b2": [31, 38], "convnext_larg": [31, 38], "efficientnet_b3": [31, 38], "densenet121": [31, 38], "efficientnet_b4": [31, 38], "densenet161": [31, 38], "efficientnet_b5": [31, 38], "densenet169": [31, 38], "efficientnet_b6": [31, 38], "densenet201": [31, 38], "efficientnet_b7": [31, 38], "efficientnetv2": [31, 38], "b0": [31, 38], "b1": [31, 38], "b2": [31, 38], "b3": [31, 38], "inception_v3": [31, 38], "mobilenet_v2_100_224": [31, 38], "nasnet_larg": 31, "googlenet": [31, 38], "mnasnet0_5": [31, 38], "resnet_v2_101": 31, "mnasnet1_0": [31, 38], "resnet_v2_50": 31, "mobilenet_v2": [31, 38], "10_h": 31, "mobilenet_v3_smal": 31, "256_a": 31, "mobilenet_v3_larg": [31, 38], "512_a": 31, "8": [31, 32, 37, 38], "resnet18": 31, "resnet34": 31, "resnet50": 31, "resnet101": 31, "resnet152": 31, "resnext50_32x4d": 31, "resnext101_32x8d": 31, "regnet_x_400mf": 31, "regnet_x_800mf": 31, "regnet_x_1_6gf": 31, "4_h": 31, "regnet_x_3_2gf": 31, "regnet_x_8gf": 31, "regnet_x_16gf": 31, "regnet_x_32gf": 31, "6_h": 31, "regnet_y_400mf": 31, "regnet_y_800mf": 31, "regnet_y_1_6gf": 31, "regnet_y_3_2gf": 31, "8_h": 31, "regnet_y_8gf": 31, "regnet_y_16gf": 31, "regnet_y_32gf": 31, "shufflenet_v2_x0_5": 31, "shufflenet_v2_x1_0": 31, "vgg11": 31, "vgg11_bn": 31, "vgg13": 31, "vgg13_bn": 31, "vgg16": 31, "vgg16_bn": 31, "vgg19": 31, "vgg19_bn": 31, "vit_b_16": 31, "vit_b_32": 31, "vit_l_16": 31, "vit_l_32": 31, "wide_resnet50_2": 31, "wide_resnet101_2": 31, "distilbert": 31, "uncas": 31, "clinic": 31, "quick": 31, "refer": [31, 35, 36, 37], "modul": [31, 35], "search": [31, 36], "colorect": 32, "histologi": 32, "scene": 32, "resisc": 32, "instruct": [32, 35, 36, 37], "system": [32, 38], "ubuntu": 32, "20": [32, 35, 36], "04": 32, "python3": [32, 38], "7": [32, 38], "pip": [32, 38], "conda": [32, 38], "virtualenv": [32, 38], "git": [32, 38], "main": 32, "readm": 32, "step": [32, 33, 34, 35, 36, 37, 38], "nativ": 32, "clone": [32, 38], "innersourc": [32, 38], "transfer_learn": 32, "tlt_repo": 32, "pwd": 32, "virtual": [32, 38], "packag": 32, "pyt": 32, "venv": 32, "bin": [32, 38], "Or": [32, 38], "anaconda": 32, "n": [32, 33, 35, 36], "python": [32, 38], "Then": [32, 35, 36], "insid": [32, 35], "upgrad": 32, "pytorch_requir": 32, "txt": [32, 35, 36], "variabl": [32, 35, 36, 37], "subsequ": [32, 35], "reus": [32, 35], "defin": [32, 36], "navig": [32, 38], "your": [32, 33, 34], "repo": [32, 38], "server": 32, "cd": [32, 38], "pythonpath": 32, "port": 32, "8888": 32, "past": 32, "termin": 32, "browser": 32, "view": 32, "tensorflow_requir": 32, "notebook": [33, 34, 35, 36, 37], "facilit": [33, 34], "implement": [33, 34, 36], "toolkit": [33, 34], "textur": 33, "cancer": 33, "sota": [33, 34], "resnet": [33, 34], "v1": [33, 34], "knowledg": [33, 34], "domain": [33, 34], "differ": [33, 34, 36], "achiev": [33, 34], "numpi": [33, 34, 35, 36, 37], "np": [33, 34, 35, 36], "o": [33, 34, 35, 36, 37], "pickl": [33, 34], "sklearn": [33, 34], "metric": [33, 34, 35, 36, 37, 38], "classification_report": [33, 34], "util": [33, 34, 35, 36, 37, 38], "plot_util": [33, 34], "plot_curv": [33, 34], "environ": [33, 34, 35, 36, 37, 38], "els": [33, 34, 35, 36, 37], "join": [33, 34, 35, 36, 37], "home": [33, 34, 35, 36, 37], "we": [33, 34, 35, 36, 37], "call": [33, 34, 35, 36, 37], "factori": [33, 34, 35, 36, 37], "test": [33, 34, 35, 36, 37], "ad": [33, 34, 35, 36, 37], "link": [33, 34, 36, 37], "origin": [33, 34, 37], "next": [33, 34, 35, 36, 37], "previou": [33, 34, 35, 36, 37], "cell": [33, 34, 35, 36, 37], "later": [33, 34, 35, 36, 37, 38], "By": [33, 34], "continu": [33, 34, 35, 36, 37], "same": [33, 34, 35, 36], "saved_model_dir": [33, 34, 36, 37, 38], "colorectal_histologi": 33, "info": [33, 35, 36, 37, 38], "nclass": [33, 36, 37], "onc": [33, 34, 35, 36, 37], "abov": [33, 34, 35, 36, 37], "preprocess": [33, 34, 35, 36, 37, 38], "resiz": [33, 34, 35, 36, 37], "match": [33, 34, 35, 36, 37], "select": [33, 34, 35, 36, 37], "them": [33, 34, 35, 36, 37], "subset": [33, 34, 35, 36, 37], "randomhorizontalandverticalflip": [33, 34, 36], "randomhorizontalflip": [33, 34, 35, 36], "randomverticalflip": [33, 34, 36], "randomrot": [33, 34, 35, 36], "randomzoom": [33, 34, 36], "shuffle_split": [33, 34, 35, 36, 37, 38], "train_pct": [33, 34, 35, 36, 37, 38], "80": [33, 34], "val_pct": [33, 34, 35, 36, 37, 38], "test_pct": [33, 34], "wa": [33, 34, 35, 36, 37], "just": [33, 34, 35, 36, 37], "featur": [33, 34, 35, 36], "compil": [33, 34, 35, 36], "also": [33, 34, 35, 36, 37], "extra_lay": [33, 34, 35, 36, 37], "insert": [33, 34, 35, 36, 37], "between": [33, 34, 35, 36, 37], "1024": [33, 34, 35, 36, 37], "512": [33, 34, 35, 36, 37, 38], "neuron": [33, 34, 35, 36, 37], "mix": [33, 34, 36, 37, 38], "precis": [33, 34, 36, 37, 38], "both": [33, 34, 36, 37], "bit": [33, 34, 36, 37], "point": [33, 34, 35, 36, 37], "faster": [33, 34, 36, 37], "less": [33, 34, 36, 37], "recommend": [33, 34, 36, 37], "auto": [33, 34, 36, 37, 38], "bfloat16": [33, 34, 36, 37], "fourth": [33, 34, 36, 37, 38], "xeon": [33, 34, 36, 37, 38], "processor": [33, 34, 36, 37, 38], "detriment": [33, 34, 36, 37], "enable_auto_mixed_precis": [33, 34, 36, 37], "automat": [33, 34, 36, 37], "disabl": [33, 34, 36, 37], "other": [33, 34, 36, 37], "histori": [33, 34, 35, 36, 37, 38], "calcul": [33, 34, 35, 36, 37], "val_loss": [33, 34], "val_acc": [33, 34], "_checkpoint": [33, 34], "dump": [33, 34], "open": [33, 34, 35, 36], "hist": 33, "pkl": [33, 34], "wb": [33, 34], "readi": [33, 34, 36, 37], "serv": [33, 34, 35, 36, 37], "pick": [33, 34, 35, 36, 37], "up": [33, 34, 35, 36, 37], "execut": [33, 34], "appropri": [33, 34], "rb": [33, 34], "use_test_set": [33, 34], "predict": [33, 34], "actual_label": [33, 34, 37], "concaten": [33, 34], "x": [33, 34, 37], "_test_subset": [33, 34], "axi": [33, 34, 35, 36, 37], "predicted_label": [33, 34], "report": [33, 34], "articl": [33, 34, 35, 36], "kather2016multi": 33, "kather": 33, "jakob": 33, "nikola": 33, "wei": 33, "cleo": 33, "aron": 33, "bianconi": 33, "francesco": 33, "melcher": 33, "susann": 33, "m": [33, 38], "schad": 33, "lothar": 33, "gaiser": 33, "timo": 33, "marx": 33, "alexand": 33, "z": 33, "llner": 33, "frank": 33, "gerrit": 33, "journal": [33, 34, 35, 36], "scientif": 33, "volum": [33, 34], "27988": 33, "2016": [33, 35, 36], "group": 33, "j": 33, "z\u00f6llner": 33, "c": [33, 35], "zenodo": 33, "doi": [33, 34], "5281": 33, "53169": 33, "resisc45": 34, "detail": [34, 38], "rar": 34, "onedr": 34, "live": 34, "authkei": 34, "21ahhnahilzp": 34, "5fixj": 34, "cid": 34, "5c5e061130630a68": 34, "id": [34, 35, 36], "21107": 34, "parid": 34, "21112": 34, "action": 34, "custom_dataset_path": [34, 35, 36], "256": 34, "resisc45_hist": 34, "cheng_2017": 34, "state": 34, "art": 34, "105": 34, "issn": 34, "1558": 34, "2256": 34, "dx": 34, "1109": 34, "jproc": 34, "2017": 34, "2675998": 34, "ieee": 34, "institut": 34, "electr": 34, "electron": 34, "engin": 34, "cheng": 34, "gong": 34, "han": 34, "junwei": 34, "lu": 34, "xiaoqiang": 34, "oct": 34, "1865": 34, "1883": 34, "librari": [35, 36, 37], "do": [35, 36, 38], "classfic": [35, 36], "assum": [35, 36, 37], "matplotlib": [35, 36], "pyplot": [35, 36], "plt": [35, 36], "panda": [35, 36, 37], "pd": [35, 36, 37], "pil": [35, 36], "io": 35, "bytesio": 35, "file_util": [35, 36, 37], "download_and_extract_tar_fil": [35, 36], "download_fil": [35, 36], "rest": [35, 36], "correct": [35, 36], "layout": [35, 36], "speci": [35, 36], "ensur": [35, 36], "similarli": [35, 36], "chang": [35, 36], "comment": [35, 36], "download_url": [35, 36], "cifar10": [35, 38], "choos": 35, "These": 35, "current": [35, 36, 37], "cifar100": [35, 38], "country211": [35, 38], "dtd": [35, 38], "food101": [35, 38], "fgvcaircraft": [35, 38], "renderedsst2": [35, 38], "apppli": 35, "75": [35, 36, 37, 38], "25": [35, 36, 37, 38], "haven": [35, 36], "done": [35, 36, 38], "give": [35, 36], "u": [35, 36], "imagenet": [35, 36], "get_batch": [35, 36, 37], "labels_fil": [35, 36], "imagenetlabel": [35, 36], "labels_file_path": 35, "basenam": [35, 36], "imagenet_label": [35, 36], "readlin": [35, 36], "imagenet_class": [35, 36], "strip": [35, 36], "displai": [35, 36, 37], "figur": [35, 36], "figsiz": [35, 36], "18": [35, 36], "14": [35, 36], "subplots_adjust": [35, 36], "hspace": [35, 36], "rang": [35, 36], "min": [35, 36], "30": [35, 36], "subplot": [35, 36], "inp": 35, "transpos": 35, "arrai": [35, 36], "485": 35, "456": 35, "406": 35, "std": 35, "229": 35, "225": 35, "clip": 35, "imshow": [35, 36], "correct_predict": [35, 36], "darkgreen": [35, 36], "crimson": [35, 36], "fontsiz": [35, 36], "off": [35, 36], "_": [35, 36], "suptitl": [35, 36], "shown": [35, 36], "green": [35, 36], "incorrect": [35, 36], "red": [35, 36], "actual": [35, 36, 37], "parenthesi": [35, 36], "With": [35, 36, 37], "paramt": [35, 36, 37], "imageclassificationdataset": [35, 36, 37], "initial_checkpoint": [35, 36, 37], "help": [35, 36, 37, 38], "increas": [35, 36, 37], "releas": [35, 36, 37], "date": [35, 36, 37], "descript": [35, 36, 37], "summari": 35, "unfrozen": 35, "ls_modul": 35, "frozen": 35, "freez": 35, "unfreez": 35, "lastli": [35, 37], "earlier": [35, 36], "visual": [35, 36], "wasn": [35, 36], "part": [35, 36], "web": [35, 36], "image_url": [35, 36], "c8": [35, 36], "staticflickr": [35, 36], "7095": [35, 36], "7210797228_c7fe51c3cb_z": [35, 36], "image_shap": [35, 36], "content": [35, 37], "dimens": [35, 36], "scale": [35, 36], "normal": 35, "255": [35, 36], "arrang": 35, "channel": 35, "newaxi": [35, 36], "moveaxi": 35, "tensor": 35, "krizhevski": 35, "cifar": 35, "2009": 35, "toronto": 35, "kriz": 35, "html": 35, "openimag": [35, 36], "larg": [35, 36], "krasin": [35, 36], "ivan": [35, 36], "duerig": [35, 36], "tom": [35, 36], "alldrin": [35, 36], "neil": [35, 36], "veit": [35, 36], "andrea": [35, 36], "abu": [35, 36], "el": [35, 36], "haija": [35, 36], "sami": [35, 36], "belongi": [35, 36], "serg": [35, 36], "cai": [35, 36], "david": [35, 36], "feng": [35, 36], "zheyun": [35, 36], "ferrari": [35, 36], "vittorio": [35, 36], "gome": [35, 36], "victor": [35, 36], "gupta": [35, 36], "abhinav": [35, 36], "narayanan": [35, 36], "dhyanesh": [35, 36], "sun": [35, 36], "chen": [35, 36], "chechik": [35, 36], "gal": [35, 36], "murphi": [35, 36], "kevin": [35, 36], "sampl": 36, "downloaded_fil": 36, "get_fil": 36, "let": 36, "section": 36, "control": 36, "over": 36, "inc_config_fil": [36, 38], "write_inc_config_fil": [36, 38], "quantization_output_dir": 36, "quantized_model": [36, 38], "nc_workspac": [36, 38], "relative_accuracy_criterion": 36, "exit": [36, 38], "polici": [36, 38], "15": 36, "overwrit": [36, 38], "accuracy_criterion_rel": [36, 38], "exit_policy_timeout": [36, 38], "exit_policy_max_tri": [36, 38], "tuning_workspac": [36, 38], "written": [36, 38], "read": 36, "full": 36, "baselin": [36, 38], "known": 36, "issu": 36, "sometim": 36, "error": 36, "zmq": 36, "zmqerror": 36, "rerun": 36, "again": 36, "recip": 36, "within": 36, "constrain": 36, "take": 36, "sever": 36, "minut": 36, "hardwar": 36, "so": 36, "compar": 36, "download_and_extract_zip_fil": 37, "text_classif": 37, "encod": 37, "model_url": 37, "preprocessor": 37, "_hub_preprocessor": 37, "updat": 37, "well": 37, "properti": 37, "like": [37, 38], "zip_file_url": 37, "sms_data_directori": 37, "sms_spam_collect": 37, "listdir": 37, "def": 37, "along": 37, "data_batch": 37, "batch_predict": 37, "frame": 37, "max_item": 37, "score": 37, "prediction_list": 37, "enumer": 37, "decod": 37, "utf": 37, "append": 37, "get_static_valu": 37, "get_str_label": 37, "break": 37, "result_df": 37, "datafram": 37, "style": 37, "hide": 37, "raw": 37, "awesom": 37, "movi": 37, "extens": 38, "quantiz": 38, "fp32": 38, "linux": 38, "wsl2": 38, "window": 38, "apt": 38, "essenti": 38, "dev": 38, "libgl1": 38, "libglib2": 38, "tlt_env": 38, "wheel": 38, "setup": 38, "py": 38, "bdist_wheel": 38, "univers": 38, "dist": 38, "intel_transfer_learning_tool": 38, "py3": 38, "whl": 38, "develop": 38, "edit": 38, "_________________________________________________________________": 38, "param": 38, "keras_lay": 38, "keraslay": 38, "2048": 38, "23561152": 38, "10245": 38, "total": 38, "23": 38, "571": 38, "397": 38, "trainabl": 38, "245": 38, "non": 38, "561": 38, "152": 38, "resnet_v1_50_checkpoint": 38, "86": 38, "24": 38, "248m": 38, "4600": 38, "acc": 38, "8438": 38, "28": 38, "236m": 38, "2528": 38, "9163": 38, "2022": 38, "06": 38, "22": 38, "latenc": 38, "031": 38, "throughput": 38, "329": 38, "878": 38, "sec": 38, "58": 38, "statist": 38, "op": 38, "int8": 38, "conv2d": 38, "53": 38, "matmul": 38, "maxpool": 38, "quantizev2": 38, "dequant": 38, "elaps": 38, "32164": 38, "27": 38, "13921": 38, "64": 38, "9008": 38, "9022": 38, "durat": 38, "13": 38, "9226": 38, "17": 38, "3321": 38, "snapshot": 38, "goal": 38, "savedmodel": 38, "33": 38, "946": 38, "1056": 38, "940": 38, "51": 38, "21": 38, "metric_nam": 38, "metric_valu": 38, "_model": 38, "metrics_nam": 38, "quantization_output": 38, "optimization_output": 38, "optimized_model": 38, "optimize_graph": 38}, "objects": {"tlt.datasets.dataset": [[0, 0, 1, "", "BaseDataset"]], "tlt.datasets.dataset.BaseDataset": [[0, 1, 1, "", "__init__"]], "tlt.datasets": [[27, 2, 0, "-", "dataset_factory"]], "tlt.datasets.dataset_factory": [[27, 3, 1, "", "get_dataset"], [27, 3, 1, "", "load_dataset"]], "tlt.datasets.hf_dataset": [[1, 0, 1, "", "HFDataset"]], "tlt.datasets.hf_dataset.HFDataset": [[1, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.image_classification_dataset": [[2, 0, 1, "", "ImageClassificationDataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[2, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset": [[3, 0, 1, "", "PyTorchCustomImageClassificationDataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[3, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset": [[4, 0, 1, "", "TFCustomImageClassificationDataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[4, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tf_image_classification_dataset": [[5, 0, 1, "", "TFImageClassificationDataset"]], "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset": [[5, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset": [[6, 0, 1, "", "TorchvisionImageClassificationDataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[6, 1, 1, "", "__init__"]], "tlt.datasets.pytorch_dataset": [[7, 0, 1, "", "PyTorchDataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[7, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset": [[8, 0, 1, "", "HFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[8, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_text_classification_dataset": [[9, 0, 1, "", "HFTextClassificationDataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[9, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.text_classification_dataset": [[10, 0, 1, "", "TextClassificationDataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[10, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset": [[11, 0, 1, "", "TFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[11, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tfds_text_classification_dataset": [[12, 0, 1, "", "TFDSTextClassificationDataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[12, 1, 1, "", "__init__"]], "tlt.datasets.tf_dataset": [[13, 0, 1, "", "TFDataset"]], "tlt.datasets.tf_dataset.TFDataset": [[13, 1, 1, "", "__init__"]], "tlt.models.hf_model": [[14, 0, 1, "", "HFModel"]], "tlt.models.hf_model.HFModel": [[14, 1, 1, "", "__init__"]], "tlt.models.image_classification.image_classification_model": [[15, 0, 1, "", "ImageClassificationModel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[15, 1, 1, "", "__init__"]], "tlt.models.image_classification.pytorch_image_classification_model": [[16, 0, 1, "", "PyTorchImageClassificationModel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[16, 1, 1, "", "__init__"]], "tlt.models.image_classification.tf_image_classification_model": [[17, 0, 1, "", "TFImageClassificationModel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[17, 1, 1, "", "__init__"]], "tlt.models.image_classification.tfhub_image_classification_model": [[18, 0, 1, "", "TFHubImageClassificationModel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[18, 1, 1, "", "__init__"]], "tlt.models.image_classification.torchvision_image_classification_model": [[19, 0, 1, "", "TorchvisionImageClassificationModel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[19, 1, 1, "", "__init__"]], "tlt.models.model": [[20, 0, 1, "", "BaseModel"]], "tlt.models.model.BaseModel": [[20, 1, 1, "", "__init__"]], "tlt.models": [[27, 2, 0, "-", "model_factory"]], "tlt.models.model_factory": [[27, 3, 1, "", "get_model"], [27, 3, 1, "", "get_supported_models"], [27, 3, 1, "", "load_model"], [27, 3, 1, "", "print_supported_models"]], "tlt.models.pytorch_model": [[21, 0, 1, "", "PyTorchModel"]], "tlt.models.pytorch_model.PyTorchModel": [[21, 1, 1, "", "__init__"]], "tlt.models.text_classification.hf_text_classification_model": [[22, 0, 1, "", "HFTextClassificationModel"]], "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel": [[22, 1, 1, "", "__init__"]], "tlt.models.text_classification.text_classification_model": [[23, 0, 1, "", "TextClassificationModel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[23, 1, 1, "", "__init__"]], "tlt.models.text_classification.tf_text_classification_model": [[24, 0, 1, "", "TFTextClassificationModel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[24, 1, 1, "", "__init__"]], "tlt.models.text_classification.tfhub_text_classification_model": [[25, 0, 1, "", "TFHubTextClassificationModel"]], "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel": [[25, 1, 1, "", "__init__"]], "tlt.models.tf_model": [[26, 0, 1, "", "TFModel"]], "tlt.models.tf_model.TFModel": [[26, 1, 1, "", "__init__"]], "tlt-benchmark": [[28, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch-size"], [28, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch_size"], [28, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset-dir"], [28, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset_dir"], [28, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc-config"], [28, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc_config"], [28, 4, 1, "cmdoption-tlt-benchmark-mode", "--mode"], [28, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model-dir"], [28, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model_dir"], [28, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output-dir"], [28, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output_dir"]], "tlt-eval": [[28, 4, 1, "cmdoption-tlt-eval-class-names", "--class-names"], [28, 4, 1, "cmdoption-tlt-eval-class-names", "--class_names"], [28, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset-catalog"], [28, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset-dir"], [28, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset-file"], [28, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset-name"], [28, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset_catalog"], [28, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset_dir"], [28, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset_file"], [28, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset_name"], [28, 4, 1, "cmdoption-tlt-eval-delimiter", "--delimiter"], [28, 4, 1, "cmdoption-tlt-eval-model-dir", "--model-dir"], [28, 4, 1, "cmdoption-tlt-eval-model-name", "--model-name"], [28, 4, 1, "cmdoption-tlt-eval-model-dir", "--model_dir"], [28, 4, 1, "cmdoption-tlt-eval-model-name", "--model_name"]], "tlt-list-models": [[28, 4, 1, "cmdoption-tlt-list-models-f", "--framework"], [28, 4, 1, "cmdoption-tlt-list-models-use-case", "--use-case"], [28, 4, 1, "cmdoption-tlt-list-models-use-case", "--use_case"], [28, 4, 1, "cmdoption-tlt-list-models-verbose", "--verbose"], [28, 4, 1, "cmdoption-tlt-list-models-f", "-f"]], "tlt-optimize": [[28, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model-dir"], [28, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model_dir"], [28, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output-dir"], [28, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output_dir"]], "tlt-quantize": [[28, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy-criterion"], [28, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy_criterion"], [28, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch-size"], [28, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch_size"], [28, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset-dir"], [28, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset_dir"], [28, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc-config"], [28, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc_config"], [28, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max-trials"], [28, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max_trials"], [28, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model-dir"], [28, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model_dir"], [28, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output-dir"], [28, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output_dir"], [28, 4, 1, "cmdoption-tlt-quantize-timeout", "--timeout"]], "tlt-train": [[28, 4, 1, "cmdoption-tlt-train-add-aug", "--add-aug"], [28, 4, 1, "cmdoption-tlt-train-add-aug", "--add_aug"], [28, 4, 1, "cmdoption-tlt-train-class-names", "--class-names"], [28, 4, 1, "cmdoption-tlt-train-class-names", "--class_names"], [28, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset-catalog"], [28, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset-dir"], [28, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset-file"], [28, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset-name"], [28, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset_catalog"], [28, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset_dir"], [28, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset_file"], [28, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset_name"], [28, 4, 1, "cmdoption-tlt-train-delimiter", "--delimiter"], [28, 4, 1, "cmdoption-tlt-train-early-stopping", "--early-stopping"], [28, 4, 1, "cmdoption-tlt-train-early-stopping", "--early_stopping"], [28, 4, 1, "cmdoption-tlt-train-epochs", "--epochs"], [28, 4, 1, "cmdoption-tlt-train-f", "--framework"], [28, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init-checkpoints"], [28, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init_checkpoints"], [28, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr-decay"], [28, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr_decay"], [28, 4, 1, "cmdoption-tlt-train-model-name", "--model-name"], [28, 4, 1, "cmdoption-tlt-train-model-name", "--model_name"], [28, 4, 1, "cmdoption-tlt-train-output-dir", "--output-dir"], [28, 4, 1, "cmdoption-tlt-train-output-dir", "--output_dir"], [28, 4, 1, "cmdoption-tlt-train-f", "-f"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "std:cmdoption"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["std", "cmdoption", "program option"]}, "titleterms": {"tlt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30], "dataset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 29, 30, 33, 34, 35, 36, 37], "basedataset": 0, "hf_dataset": 1, "hfdataset": 1, "image_classif": [2, 3, 4, 5, 6, 15, 16, 17, 18, 19], "image_classification_dataset": 2, "imageclassificationdataset": 2, "pytorch_custom_image_classification_dataset": 3, "pytorchcustomimageclassificationdataset": 3, "tf_custom_image_classification_dataset": 4, "tfcustomimageclassificationdataset": 4, "tf_image_classification_dataset": 5, "tfimageclassificationdataset": 5, "torchvision_image_classification_dataset": 6, "torchvisionimageclassificationdataset": 6, "pytorch_dataset": 7, "pytorchdataset": 7, "text_classif": [8, 9, 10, 11, 12, 22, 23, 24, 25], "hf_custom_text_classification_dataset": 8, "hfcustomtextclassificationdataset": 8, "hf_text_classification_dataset": 9, "hftextclassificationdataset": 9, "text_classification_dataset": 10, "textclassificationdataset": 10, "tf_custom_text_classification_dataset": 11, "tfcustomtextclassificationdataset": 11, "tfds_text_classification_dataset": 12, "tfdstextclassificationdataset": 12, "tf_dataset": 13, "tfdataset": 13, "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37], "hf_model": 14, "hfmodel": 14, "image_classification_model": 15, "imageclassificationmodel": 15, "pytorch_image_classification_model": 16, "pytorchimageclassificationmodel": 16, "tf_image_classification_model": 17, "tfimageclassificationmodel": 17, "tfhub_image_classification_model": 18, "tfhubimageclassificationmodel": 18, "torchvision_image_classification_model": 19, "torchvisionimageclassificationmodel": 19, "basemodel": 20, "pytorch_model": 21, "pytorchmodel": 21, "hf_text_classification_model": 22, "hftextclassificationmodel": 22, "text_classification_model": 23, "textclassificationmodel": 23, "tf_text_classification_model": 24, "tftextclassificationmodel": 24, "tfhub_text_classification_model": 25, "tfhubtextclassificationmodel": 25, "tf_model": 26, "tfmodel": 26, "api": [27, 33, 34, 35, 36, 37, 38], "refer": [27, 28], "factori": 27, "method": 27, "class": 27, "imag": [27, 29, 33, 34, 35, 36], "classif": [27, 29, 30, 33, 34, 35, 36, 37], "text": [27, 30, 37], "base": 27, "cli": [28, 29, 30, 38], "benchmark": 28, "eval": 28, "list": 28, "framework": [28, 31], "use_cas": 28, "optim": 28, "quantiz": [28, 36], "train": [28, 36], "exampl": [29, 30, 32], "transfer": [29, 31, 32, 33, 34, 35, 36, 37, 38], "learn": [29, 31, 32, 33, 34, 35, 36, 37, 38], "us": [29, 30, 33, 34, 35, 36, 37], "your": [29, 30, 35, 36, 37], "own": [29, 30, 35, 36, 37], "from": [29, 30, 35, 36], "tfd": [29, 30, 37], "catalog": [29, 30, 35, 36, 37], "citat": [29, 30, 33, 34, 35, 36, 37], "fine": [30, 37], "tune": [30, 37], "intel": [31, 32, 33, 34, 35, 36, 37, 38], "tool": [31, 32, 33, 34, 35, 36, 37, 38], "goal": 31, "featur": [31, 38], "tutori": [31, 32], "notebook": [31, 32], "nativ": 31, "end": [31, 32], "pipelin": [31, 32], "content": 31, "indic": 31, "tabl": 31, "environ": 32, "setup": [32, 33, 34, 35, 36, 37], "run": 32, "build": [32, 38], "instal": [32, 38], "pytorch": [32, 35], "tensorflow": [32, 33, 34, 36, 37], "medic": 33, "colorect": 33, "histologi": 33, "1": [33, 34, 35, 36, 37], "import": [33, 34, 35, 36, 37], "depend": [33, 34, 35, 36, 37], "paramet": [33, 34, 35, 36, 37], "2": [33, 34, 35, 36, 37], "get": [33, 34, 35, 36, 37, 38], "option": [33, 34, 35, 36, 37], "A": [33, 34, 35, 36, 37], "load": [33, 34], "b": [33, 34, 35, 36, 37], "pretrain": [33, 34], "checkpoint": [33, 34], "3": [33, 34, 35, 36, 37], "4": [33, 34, 35, 36, 37], "prepar": [33, 34, 35, 36, 37], "5": [33, 34, 35, 36, 37], "6": [33, 34, 35, 36, 37], "evalu": [33, 34], "7": [33, 34, 35, 36, 37], "export": [33, 34, 35, 36, 37], "8": [33, 34, 35, 36], "infer": [33, 34], "remot": 34, "sens": 34, "scene": 34, "resisc": 34, "": 35, "torchvis": 35, "predict": [35, 36, 37], "origin": [35, 36], "argument": [35, 36, 37], "requir": [35, 36, 37], "9": 36, "post": 36, "save": 37, "quick": 38, "start": 38}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"tlt.datasets.dataset.BaseDataset": [[0, "tlt-datasets-dataset-basedataset"]], "tlt.datasets.hf_dataset.HFDataset": [[1, "tlt-datasets-hf-dataset-hfdataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[2, "tlt-datasets-image-classification-image-classification-dataset-imageclassificationdataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[3, "tlt-datasets-image-classification-pytorch-custom-image-classification-dataset-pytorchcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[4, "tlt-datasets-image-classification-tf-custom-image-classification-dataset-tfcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset": [[5, "tlt-datasets-image-classification-tf-image-classification-dataset-tfimageclassificationdataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[6, "tlt-datasets-image-classification-torchvision-image-classification-dataset-torchvisionimageclassificationdataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[7, "tlt-datasets-pytorch-dataset-pytorchdataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[8, "tlt-datasets-text-classification-hf-custom-text-classification-dataset-hfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[9, "tlt-datasets-text-classification-hf-text-classification-dataset-hftextclassificationdataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[10, "tlt-datasets-text-classification-text-classification-dataset-textclassificationdataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[11, "tlt-datasets-text-classification-tf-custom-text-classification-dataset-tfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[12, "tlt-datasets-text-classification-tfds-text-classification-dataset-tfdstextclassificationdataset"]], "tlt.datasets.tf_dataset.TFDataset": [[13, "tlt-datasets-tf-dataset-tfdataset"]], "tlt.models.hf_model.HFModel": [[14, "tlt-models-hf-model-hfmodel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[15, "tlt-models-image-classification-image-classification-model-imageclassificationmodel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[16, "tlt-models-image-classification-pytorch-image-classification-model-pytorchimageclassificationmodel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[17, "tlt-models-image-classification-tf-image-classification-model-tfimageclassificationmodel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[18, "tlt-models-image-classification-tfhub-image-classification-model-tfhubimageclassificationmodel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[19, "tlt-models-image-classification-torchvision-image-classification-model-torchvisionimageclassificationmodel"]], "tlt.models.model.BaseModel": [[20, "tlt-models-model-basemodel"]], "tlt.models.pytorch_model.PyTorchModel": [[21, "tlt-models-pytorch-model-pytorchmodel"]], "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel": [[22, "tlt-models-text-classification-hf-text-classification-model-hftextclassificationmodel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[23, "tlt-models-text-classification-text-classification-model-textclassificationmodel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[24, "tlt-models-text-classification-tf-text-classification-model-tftextclassificationmodel"]], "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel": [[25, "tlt-models-text-classification-tfhub-text-classification-model-tfhubtextclassificationmodel"]], "tlt.models.tf_model.TFModel": [[26, "tlt-models-tf-model-tfmodel"]], "API Reference": [[27, "api-reference"]], "Datasets": [[27, "datasets"]], "Factory Methods": [[27, "module-tlt.datasets.dataset_factory"], [27, "id1"]], "Class Reference": [[27, "class-reference"], [27, "id2"]], "Image Classification": [[27, "image-classification"], [27, "id3"]], "Text Classification": [[27, "text-classification"], [27, "id4"]], "Base Classes": [[27, "base-classes"], [27, "id5"]], "Models": [[27, "models"], [31, "models"]], "CLI Reference": [[28, "cli-reference"]], "tlt": [[28, "tlt"]], "benchmark": [[28, "tlt-benchmark"]], "eval": [[28, "tlt-eval"]], "list": [[28, "tlt-list"]], "frameworks": [[28, "tlt-list-frameworks"]], "models": [[28, "tlt-list-models"]], "use_cases": [[28, "tlt-list-use-cases"]], "optimize": [[28, "tlt-optimize"]], "quantize": [[28, "tlt-quantize"]], "train": [[28, "tlt-train"]], "Image Classification TLT CLI Examples": [[29, "image-classification-tlt-cli-examples"]], "Transfer learning using your own dataset": [[29, "transfer-learning-using-your-own-dataset"]], "Transfer learning using a dataset from the TFDS catalog": [[29, "transfer-learning-using-a-dataset-from-the-tfds-catalog"]], "Citations": [[29, "citations"], [30, "citations"], [37, "Citations"]], "Text Classification TLT CLI Examples": [[30, "text-classification-tlt-cli-examples"]], "Fine tuning using your own dataset": [[30, "fine-tuning-using-your-own-dataset"]], "Fine tuning using a dataset from the TFDS catalog": [[30, "fine-tuning-using-a-dataset-from-the-tfds-catalog"]], "Intel\u00ae Transfer Learning Tool": [[31, "intel-transfer-learning-tool"]], "Goals": [[31, "goals"]], "Features": [[31, "features"], [38, "features"]], "Transfer Learning Tool Tutorial Notebooks": [[31, "id1"], [32, "id1"]], "Native Framework Transfer Learning Notebooks": [[31, "id2"]], "Transfer Learning Tool End-to-End Pipelines": [[31, "id3"], [32, "id2"]], "Contents": [[31, null]], "Indices and tables": [[31, "indices-and-tables"]], "Example Notebooks": [[32, "example-notebooks"]], "Environment Setup and Running the Notebooks": [[32, "environment-setup-and-running-the-notebooks"]], "Build and Install Intel\u00ae Transfer Learning Tool": [[32, "build-and-install-intel-transfer-learning-tool"]], "PyTorch Environment": [[32, "pytorch-environment"]], "TensorFlow Environment": [[32, "tensorflow-environment"]], "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[33, "Medical-Imaging-Classification-(Colorectal-histology)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "1. Import dependencies and setup parameters": [[33, "1.-Import-dependencies-and-setup-parameters"], [34, "1.-Import-dependencies-and-setup-parameters"], [35, "1.-Import-dependencies-and-setup-parameters"], [36, "1.-Import-dependencies-and-setup-parameters"], [37, "1.-Import-dependencies-and-setup-parameters"]], "2. Get the model": [[33, "2.-Get-the-model"], [34, "2.-Get-the-model"], [35, "2.-Get-the-model"], [36, "2.-Get-the-model"], [37, "2.-Get-the-model"]], "Option A: Load a model": [[33, "Option-A:-Load-a-model"], [34, "Option-A:-Load-a-model"]], "Option B: Load a pretrained checkpoint": [[33, "Option-B:-Load-a-pretrained-checkpoint"], [34, "Option-B:-Load-a-pretrained-checkpoint"]], "3. Get the dataset": [[33, "3.-Get-the-dataset"], [34, "3.-Get-the-dataset"], [35, "3.-Get-the-dataset"], [36, "3.-Get-the-dataset"], [37, "3.-Get-the-dataset"]], "4. Prepare the dataset": [[33, "4.-Prepare-the-dataset"], [34, "4.-Prepare-the-dataset"], [35, "4.-Prepare-the-dataset"], [36, "4.-Prepare-the-dataset"], [37, "4.-Prepare-the-dataset"]], "5. Transfer Learning": [[33, "5.-Transfer-Learning"], [34, "5.-Transfer-Learning"]], "6. Evaluate": [[33, "6.-Evaluate"], [34, "6.-Evaluate"]], "7. Export": [[33, "7.-Export"], [34, "7.-Export"]], "8. Inference": [[33, "8.-Inference"], [34, "8.-Inference"]], "Dataset Citations": [[33, "Dataset-Citations"], [34, "Dataset-Citations"], [35, "Dataset-Citations"], [36, "Dataset-Citations"]], "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[34, "Remote-Sensing-Image-Scene-Classification-(Resisc)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API": [[35, "Transfer-Learning-for-Image-Classification-using-PyTorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option A: Use your own dataset": [[35, "Option-A:-Use-your-own-dataset"], [36, "Option-A:-Use-your-own-dataset"], [37, "Option-A:-Use-your-own-dataset"]], "Option B: Use a dataset from the PyTorch\u2019s torchvision Datasets catalog": [[35, "Option-B:-Use-a-dataset-from-the-PyTorch\u2019s-torchvision-Datasets-catalog"]], "5. Predict using the original model": [[35, "5.-Predict-using-the-original-model"], [36, "5.-Predict-using-the-original-model"]], "6. Transfer Learning": [[35, "6.-Transfer-Learning"], [36, "6.-Transfer-Learning"]], "Arguments": [[35, "Arguments"], [36, "Arguments"], [37, "Arguments"]], "Required": [[35, "Required"], [36, "Required"], [37, "Required"]], "Optional": [[35, "Optional"], [36, "Optional"], [37, "Optional"]], "7. Predict": [[35, "7.-Predict"], [36, "7.-Predict"]], "8. Export": [[35, "8.-Export"], [36, "8.-Export"]], "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[36, "Transfer-Learning-for-Image-Classification-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use a dataset from the TensorFlow Datasets catalog": [[36, "Option-B:-Use-a-dataset-from-the-TensorFlow-Datasets-catalog"]], "9. Post-training quantization": [[36, "9.-Post-training-quantization"]], "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[37, "Text-Classification-fine-tuning-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the TFDS catalog": [[37, "Option-B:-Use-the-TFDS-catalog"]], "5. Fine tuning": [[37, "5.-Fine-tuning"]], "6. Predict": [[37, "6.-Predict"]], "7. Export the saved model": [[37, "7.-Export-the-saved-model"]], "Intel\u00ae Transfer Learning Tool Quick Start": [[38, "intel-transfer-learning-tool-quick-start"]], "Build and Install": [[38, "build-and-install"]], "Getting Started with the CLI": [[38, "getting-started-with-the-cli"]], "Getting Started with the API": [[38, "getting-started-with-the-api"]]}, "indexentries": {"basedataset (class in tlt.datasets.dataset)": [[0, "tlt.datasets.dataset.BaseDataset"]], "__init__() (tlt.datasets.dataset.basedataset method)": [[0, "tlt.datasets.dataset.BaseDataset.__init__"]], "hfdataset (class in tlt.datasets.hf_dataset)": [[1, "tlt.datasets.hf_dataset.HFDataset"]], "__init__() (tlt.datasets.hf_dataset.hfdataset method)": [[1, "tlt.datasets.hf_dataset.HFDataset.__init__"]], "imageclassificationdataset (class in tlt.datasets.image_classification.image_classification_dataset)": [[2, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.image_classification_dataset.imageclassificationdataset method)": [[2, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.__init__"]], "pytorchcustomimageclassificationdataset (class in tlt.datasets.image_classification.pytorch_custom_image_classification_dataset)": [[3, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.pytorchcustomimageclassificationdataset method)": [[3, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.__init__"]], "tfcustomimageclassificationdataset (class in tlt.datasets.image_classification.tf_custom_image_classification_dataset)": [[4, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tf_custom_image_classification_dataset.tfcustomimageclassificationdataset method)": [[4, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.__init__"]], "tfimageclassificationdataset (class in tlt.datasets.image_classification.tf_image_classification_dataset)": [[5, "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tf_image_classification_dataset.tfimageclassificationdataset method)": [[5, "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset.__init__"]], "torchvisionimageclassificationdataset (class in tlt.datasets.image_classification.torchvision_image_classification_dataset)": [[6, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.torchvision_image_classification_dataset.torchvisionimageclassificationdataset method)": [[6, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.__init__"]], "pytorchdataset (class in tlt.datasets.pytorch_dataset)": [[7, "tlt.datasets.pytorch_dataset.PyTorchDataset"]], "__init__() (tlt.datasets.pytorch_dataset.pytorchdataset method)": [[7, "tlt.datasets.pytorch_dataset.PyTorchDataset.__init__"]], "hfcustomtextclassificationdataset (class in tlt.datasets.text_classification.hf_custom_text_classification_dataset)": [[8, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_custom_text_classification_dataset.hfcustomtextclassificationdataset method)": [[8, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.__init__"]], "hftextclassificationdataset (class in tlt.datasets.text_classification.hf_text_classification_dataset)": [[9, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_text_classification_dataset.hftextclassificationdataset method)": [[9, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.__init__"]], "textclassificationdataset (class in tlt.datasets.text_classification.text_classification_dataset)": [[10, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.text_classification_dataset.textclassificationdataset method)": [[10, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.__init__"]], "tfcustomtextclassificationdataset (class in tlt.datasets.text_classification.tf_custom_text_classification_dataset)": [[11, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tf_custom_text_classification_dataset.tfcustomtextclassificationdataset method)": [[11, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.__init__"]], "tfdstextclassificationdataset (class in tlt.datasets.text_classification.tfds_text_classification_dataset)": [[12, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tfds_text_classification_dataset.tfdstextclassificationdataset method)": [[12, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.__init__"]], "tfdataset (class in tlt.datasets.tf_dataset)": [[13, "tlt.datasets.tf_dataset.TFDataset"]], "__init__() (tlt.datasets.tf_dataset.tfdataset method)": [[13, "tlt.datasets.tf_dataset.TFDataset.__init__"]], "hfmodel (class in tlt.models.hf_model)": [[14, "tlt.models.hf_model.HFModel"]], "__init__() (tlt.models.hf_model.hfmodel method)": [[14, "tlt.models.hf_model.HFModel.__init__"]], "imageclassificationmodel (class in tlt.models.image_classification.image_classification_model)": [[15, "tlt.models.image_classification.image_classification_model.ImageClassificationModel"]], "__init__() (tlt.models.image_classification.image_classification_model.imageclassificationmodel method)": [[15, "tlt.models.image_classification.image_classification_model.ImageClassificationModel.__init__"]], "pytorchimageclassificationmodel (class in tlt.models.image_classification.pytorch_image_classification_model)": [[16, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel"]], "__init__() (tlt.models.image_classification.pytorch_image_classification_model.pytorchimageclassificationmodel method)": [[16, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.__init__"]], "tfimageclassificationmodel (class in tlt.models.image_classification.tf_image_classification_model)": [[17, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel"]], "__init__() (tlt.models.image_classification.tf_image_classification_model.tfimageclassificationmodel method)": [[17, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.__init__"]], "tfhubimageclassificationmodel (class in tlt.models.image_classification.tfhub_image_classification_model)": [[18, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel"]], "__init__() (tlt.models.image_classification.tfhub_image_classification_model.tfhubimageclassificationmodel method)": [[18, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.__init__"]], "torchvisionimageclassificationmodel (class in tlt.models.image_classification.torchvision_image_classification_model)": [[19, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel"]], "__init__() (tlt.models.image_classification.torchvision_image_classification_model.torchvisionimageclassificationmodel method)": [[19, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.__init__"]], "basemodel (class in tlt.models.model)": [[20, "tlt.models.model.BaseModel"]], "__init__() (tlt.models.model.basemodel method)": [[20, "tlt.models.model.BaseModel.__init__"]], "pytorchmodel (class in tlt.models.pytorch_model)": [[21, "tlt.models.pytorch_model.PyTorchModel"]], "__init__() (tlt.models.pytorch_model.pytorchmodel method)": [[21, "tlt.models.pytorch_model.PyTorchModel.__init__"]], "hftextclassificationmodel (class in tlt.models.text_classification.hf_text_classification_model)": [[22, "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel"]], "__init__() (tlt.models.text_classification.hf_text_classification_model.hftextclassificationmodel method)": [[22, "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel.__init__"]], "textclassificationmodel (class in tlt.models.text_classification.text_classification_model)": [[23, "tlt.models.text_classification.text_classification_model.TextClassificationModel"]], "__init__() (tlt.models.text_classification.text_classification_model.textclassificationmodel method)": [[23, "tlt.models.text_classification.text_classification_model.TextClassificationModel.__init__"]], "tftextclassificationmodel (class in tlt.models.text_classification.tf_text_classification_model)": [[24, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel"]], "__init__() (tlt.models.text_classification.tf_text_classification_model.tftextclassificationmodel method)": [[24, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.__init__"]], "tfhubtextclassificationmodel (class in tlt.models.text_classification.tfhub_text_classification_model)": [[25, "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel"]], "__init__() (tlt.models.text_classification.tfhub_text_classification_model.tfhubtextclassificationmodel method)": [[25, "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel.__init__"]], "tfmodel (class in tlt.models.tf_model)": [[26, "tlt.models.tf_model.TFModel"]], "__init__() (tlt.models.tf_model.tfmodel method)": [[26, "tlt.models.tf_model.TFModel.__init__"]], "get_dataset() (in module tlt.datasets.dataset_factory)": [[27, "tlt.datasets.dataset_factory.get_dataset"]], "get_model() (in module tlt.models.model_factory)": [[27, "tlt.models.model_factory.get_model"]], "get_supported_models() (in module tlt.models.model_factory)": [[27, "tlt.models.model_factory.get_supported_models"]], "load_dataset() (in module tlt.datasets.dataset_factory)": [[27, "tlt.datasets.dataset_factory.load_dataset"]], "load_model() (in module tlt.models.model_factory)": [[27, "tlt.models.model_factory.load_model"]], "module": [[27, "module-tlt.datasets.dataset_factory"], [27, "module-tlt.models.model_factory"]], "print_supported_models() (in module tlt.models.model_factory)": [[27, "tlt.models.model_factory.print_supported_models"]], "tlt.datasets.dataset_factory": [[27, "module-tlt.datasets.dataset_factory"]], "tlt.models.model_factory": [[27, "module-tlt.models.model_factory"]], "--accuracy-criterion": [[28, "cmdoption-tlt-quantize-accuracy-criterion"]], "--accuracy_criterion": [[28, "cmdoption-tlt-quantize-accuracy-criterion"]], "--add-aug": [[28, "cmdoption-tlt-train-add-aug"]], "--add_aug": [[28, "cmdoption-tlt-train-add-aug"]], "--batch-size": [[28, "cmdoption-tlt-benchmark-batch-size"], [28, "cmdoption-tlt-quantize-batch-size"]], "--batch_size": [[28, "cmdoption-tlt-benchmark-batch-size"], [28, "cmdoption-tlt-quantize-batch-size"]], "--class-names": [[28, "cmdoption-tlt-eval-class-names"], [28, "cmdoption-tlt-train-class-names"]], "--class_names": [[28, "cmdoption-tlt-eval-class-names"], [28, "cmdoption-tlt-train-class-names"]], "--dataset-catalog": [[28, "cmdoption-tlt-eval-dataset-catalog"], [28, "cmdoption-tlt-train-dataset-catalog"]], "--dataset-dir": [[28, "cmdoption-tlt-benchmark-dataset-dir"], [28, "cmdoption-tlt-eval-dataset-dir"], [28, "cmdoption-tlt-quantize-dataset-dir"], [28, "cmdoption-tlt-train-dataset-dir"]], "--dataset-file": [[28, "cmdoption-tlt-eval-dataset-file"], [28, "cmdoption-tlt-train-dataset-file"]], "--dataset-name": [[28, "cmdoption-tlt-eval-dataset-name"], [28, "cmdoption-tlt-train-dataset-name"]], "--dataset_catalog": [[28, "cmdoption-tlt-eval-dataset-catalog"], [28, "cmdoption-tlt-train-dataset-catalog"]], "--dataset_dir": [[28, "cmdoption-tlt-benchmark-dataset-dir"], [28, "cmdoption-tlt-eval-dataset-dir"], [28, "cmdoption-tlt-quantize-dataset-dir"], [28, "cmdoption-tlt-train-dataset-dir"]], "--dataset_file": [[28, "cmdoption-tlt-eval-dataset-file"], [28, "cmdoption-tlt-train-dataset-file"]], "--dataset_name": [[28, "cmdoption-tlt-eval-dataset-name"], [28, "cmdoption-tlt-train-dataset-name"]], "--delimiter": [[28, "cmdoption-tlt-eval-delimiter"], [28, "cmdoption-tlt-train-delimiter"]], "--early-stopping": [[28, "cmdoption-tlt-train-early-stopping"]], "--early_stopping": [[28, "cmdoption-tlt-train-early-stopping"]], "--epochs": [[28, "cmdoption-tlt-train-epochs"]], "--framework": [[28, "cmdoption-tlt-list-models-f"], [28, "cmdoption-tlt-train-f"]], "--inc-config": [[28, "cmdoption-tlt-benchmark-inc-config"], [28, "cmdoption-tlt-quantize-inc-config"]], "--inc_config": [[28, "cmdoption-tlt-benchmark-inc-config"], [28, "cmdoption-tlt-quantize-inc-config"]], "--init-checkpoints": [[28, "cmdoption-tlt-train-init-checkpoints"]], "--init_checkpoints": [[28, "cmdoption-tlt-train-init-checkpoints"]], "--lr-decay": [[28, "cmdoption-tlt-train-lr-decay"]], "--lr_decay": [[28, "cmdoption-tlt-train-lr-decay"]], "--max-trials": [[28, "cmdoption-tlt-quantize-max-trials"]], "--max_trials": [[28, "cmdoption-tlt-quantize-max-trials"]], "--mode": [[28, "cmdoption-tlt-benchmark-mode"]], "--model-dir": [[28, "cmdoption-tlt-benchmark-model-dir"], [28, "cmdoption-tlt-eval-model-dir"], [28, "cmdoption-tlt-optimize-model-dir"], [28, "cmdoption-tlt-quantize-model-dir"]], "--model-name": [[28, "cmdoption-tlt-eval-model-name"], [28, "cmdoption-tlt-train-model-name"]], "--model_dir": [[28, "cmdoption-tlt-benchmark-model-dir"], [28, "cmdoption-tlt-eval-model-dir"], [28, "cmdoption-tlt-optimize-model-dir"], [28, "cmdoption-tlt-quantize-model-dir"]], "--model_name": [[28, "cmdoption-tlt-eval-model-name"], [28, "cmdoption-tlt-train-model-name"]], "--output-dir": [[28, "cmdoption-tlt-benchmark-output-dir"], [28, "cmdoption-tlt-optimize-output-dir"], [28, "cmdoption-tlt-quantize-output-dir"], [28, "cmdoption-tlt-train-output-dir"]], "--output_dir": [[28, "cmdoption-tlt-benchmark-output-dir"], [28, "cmdoption-tlt-optimize-output-dir"], [28, "cmdoption-tlt-quantize-output-dir"], [28, "cmdoption-tlt-train-output-dir"]], "--timeout": [[28, "cmdoption-tlt-quantize-timeout"]], "--use-case": [[28, "cmdoption-tlt-list-models-use-case"]], "--use_case": [[28, "cmdoption-tlt-list-models-use-case"]], "--verbose": [[28, "cmdoption-tlt-list-models-verbose"]], "-f": [[28, "cmdoption-tlt-list-models-f"], [28, "cmdoption-tlt-train-f"]], "tlt-benchmark command line option": [[28, "cmdoption-tlt-benchmark-batch-size"], [28, "cmdoption-tlt-benchmark-dataset-dir"], [28, "cmdoption-tlt-benchmark-inc-config"], [28, "cmdoption-tlt-benchmark-mode"], [28, "cmdoption-tlt-benchmark-model-dir"], [28, "cmdoption-tlt-benchmark-output-dir"]], "tlt-eval command line option": [[28, "cmdoption-tlt-eval-class-names"], [28, "cmdoption-tlt-eval-dataset-catalog"], [28, "cmdoption-tlt-eval-dataset-dir"], [28, "cmdoption-tlt-eval-dataset-file"], [28, "cmdoption-tlt-eval-dataset-name"], [28, "cmdoption-tlt-eval-delimiter"], [28, "cmdoption-tlt-eval-model-dir"], [28, "cmdoption-tlt-eval-model-name"]], "tlt-list-models command line option": [[28, "cmdoption-tlt-list-models-f"], [28, "cmdoption-tlt-list-models-use-case"], [28, "cmdoption-tlt-list-models-verbose"]], "tlt-optimize command line option": [[28, "cmdoption-tlt-optimize-model-dir"], [28, "cmdoption-tlt-optimize-output-dir"]], "tlt-quantize command line option": [[28, "cmdoption-tlt-quantize-accuracy-criterion"], [28, "cmdoption-tlt-quantize-batch-size"], [28, "cmdoption-tlt-quantize-dataset-dir"], [28, "cmdoption-tlt-quantize-inc-config"], [28, "cmdoption-tlt-quantize-max-trials"], [28, "cmdoption-tlt-quantize-model-dir"], [28, "cmdoption-tlt-quantize-output-dir"], [28, "cmdoption-tlt-quantize-timeout"]], "tlt-train command line option": [[28, "cmdoption-tlt-train-add-aug"], [28, "cmdoption-tlt-train-class-names"], [28, "cmdoption-tlt-train-dataset-catalog"], [28, "cmdoption-tlt-train-dataset-dir"], [28, "cmdoption-tlt-train-dataset-file"], [28, "cmdoption-tlt-train-dataset-name"], [28, "cmdoption-tlt-train-delimiter"], [28, "cmdoption-tlt-train-early-stopping"], [28, "cmdoption-tlt-train-epochs"], [28, "cmdoption-tlt-train-f"], [28, "cmdoption-tlt-train-init-checkpoints"], [28, "cmdoption-tlt-train-lr-decay"], [28, "cmdoption-tlt-train-model-name"], [28, "cmdoption-tlt-train-output-dir"]]}})