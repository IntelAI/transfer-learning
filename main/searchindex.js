Search.setIndex({"docnames": ["_autosummary/tlt.datasets.dataset.BaseDataset", "_autosummary/tlt.datasets.hf_dataset.HFDataset", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "_autosummary/tlt.datasets.tf_dataset.TFDataset", "_autosummary/tlt.models.hf_model.HFModel", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel", "_autosummary/tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel", "_autosummary/tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "_autosummary/tlt.models.model.BaseModel", "_autosummary/tlt.models.pytorch_model.PyTorchModel", "_autosummary/tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "_autosummary/tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel", "_autosummary/tlt.models.tf_model.TFModel", "api", "cli", "datasets", "examples/cli/general", "examples/cli/image_classification", "examples/cli/text_classification", "get_started", "how_it_works", "index", "install", "legal", "markdown/GetStarted", "markdown/HowItWorks", "markdown/Install", "markdown/Legal", "markdown/Overview", "markdown/Welcome", "models", "notebooks", "notebooks/Medical_Imaging_Classification", "notebooks/Remote_Sensing_Image_Scene_Classification", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning", "notebooks/TLT_PyTorch_Text_Classification_Transfer_Learning", "notebooks/TLT_TF_Image_Classification_Transfer_Learning", "notebooks/TLT_TF_Text_Classification_Transfer_Learning", "overview", "quickstart"], "filenames": ["_autosummary/tlt.datasets.dataset.BaseDataset.rst", "_autosummary/tlt.datasets.hf_dataset.HFDataset.rst", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.rst", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.rst", "_autosummary/tlt.datasets.tf_dataset.TFDataset.rst", "_autosummary/tlt.models.hf_model.HFModel.rst", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.rst", "_autosummary/tlt.models.model.BaseModel.rst", "_autosummary/tlt.models.pytorch_model.PyTorchModel.rst", "_autosummary/tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel.rst", "_autosummary/tlt.models.tf_model.TFModel.rst", "api.rst", "cli.rst", "datasets.rst", "examples/cli/general.rst", "examples/cli/image_classification.rst", "examples/cli/text_classification.rst", "get_started.rst", "how_it_works.rst", "index.rst", "install.rst", "legal.rst", "markdown/GetStarted.md", "markdown/HowItWorks.md", "markdown/Install.md", "markdown/Legal.md", "markdown/Overview.md", "markdown/Welcome.md", "models.rst", "notebooks.rst", "notebooks/Medical_Imaging_Classification.nblink", "notebooks/Remote_Sensing_Image_Scene_Classification.nblink", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_PyTorch_Text_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Text_Classification_Transfer_Learning.nblink", "overview.rst", "quickstart.rst"], "titles": ["tlt.datasets.dataset.BaseDataset", "tlt.datasets.hf_dataset.HFDataset", "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset", "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "tlt.datasets.pytorch_dataset.PyTorchDataset", "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "tlt.datasets.tf_dataset.TFDataset", "tlt.models.hf_model.HFModel", "tlt.models.image_classification.image_classification_model.ImageClassificationModel", "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel", "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel", "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "tlt.models.model.BaseModel", "tlt.models.pytorch_model.PyTorchModel", "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel", "tlt.models.text_classification.text_classification_model.TextClassificationModel", "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel", "tlt.models.tf_model.TFModel", "API Reference", "CLI Reference", "Datasets", "Intel\u00ae Transfer Learning Tool CLI Examples", "Image Classification Intel\u00ae Transfer Learning Tool CLI Examples", "Text Classification Intel Transfer Learning Tool CLI Examples", "Get Started", "How it Works", "Intel\u00ae Transfer Learning Tool", "Installation", "Legal Information", "Get Started", "How it Works", "Installation", "Legal Information", "Overview", "Intel\u00ae Transfer Learning Tool", "Intel\u00ae Transfer Learning Tool Supported Models", "Example Notebooks", "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using Pytorch and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Overview", "Intel\u00ae Transfer Learning Tool"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "dataset_dir": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 30, 32, 33, 34, 35, 37, 40, 45, 47, 48, 49, 50, 51, 52, 53, 55], "dataset_nam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 30, 33, 34, 48, 50, 51, 52, 53], "none": [0, 3, 4, 5, 8, 11, 18, 19, 24, 26, 29, 32, 37, 38, 42, 45, 48, 49, 51, 52, 53, 55], "dataset_catalog": [0, 1, 2, 7, 10, 13, 29, 30, 48, 50, 51, 52, 53], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 37, 38, 39, 42, 43, 45, 47, 55], "abstract": [0, 22], "base": [0, 1, 2, 7, 10, 13, 14, 15, 22, 23, 28, 46, 48, 49, 50, 51, 52, 53], "us": [0, 3, 4, 8, 11, 22, 24, 26, 27, 29, 30, 31, 32, 36, 38, 39, 41, 42, 43, 44, 47, 54], "train": [0, 3, 4, 5, 6, 9, 12, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 51, 53, 54, 55], "evalu": [0, 30, 32, 33, 34, 35, 37, 40, 44, 45, 50, 51, 52, 53, 54, 55], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "constructor": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 53], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "repres": [1, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 48, 49, 50, 51, 52, 53], "hug": [1, 9, 14, 24, 29, 31, 37, 44, 45, 46, 51, 54, 55], "face": [1, 9, 14, 24, 29, 31, 37, 44, 45, 46, 51, 54, 55], "an": [2, 5, 6, 8, 29, 30, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "imag": [2, 3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 37, 40, 44, 45, 47, 53, 54, 55], "classif": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 54, 55], "num_work": [3, 6, 8, 9], "0": [3, 6, 8, 9, 30, 32, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "shuffle_fil": [3, 4, 5, 6, 8, 9, 11, 12, 51, 53], "true": [3, 4, 5, 6, 8, 9, 11, 12, 29, 30, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "A": [3, 4, 8, 9, 11, 12, 29, 30, 32, 34, 35, 37, 40, 45, 55], "custom": [3, 4, 8, 11, 19, 29, 30, 35, 37, 40, 44, 45, 48, 49, 51, 53, 54, 55], "can": [3, 4, 8, 11, 22, 24, 26, 27, 29, 30, 32, 33, 35, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55], "pytorch": [3, 7, 17, 18, 23, 29, 30, 31, 32, 34, 35, 37, 40, 44, 45, 46, 47, 54, 55], "model": [3, 4, 8, 11, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 47, 54, 55], "note": [3, 4, 8, 11, 32, 33, 34, 48, 49, 50, 51, 52, 53], "directori": [3, 4, 8, 11, 29, 30, 32, 33, 34, 35, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55], "i": [3, 4, 8, 11, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "expect": [3, 4, 8, 11, 29, 33, 34, 51, 53], "organ": [3, 4, 29, 33, 50, 52], "subfold": [3, 4, 29, 33, 35, 37, 40, 45, 50, 52, 55], "each": [3, 4, 8, 11, 29, 30, 32, 33, 34, 35, 37, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 55], "should": [3, 4, 8, 11, 29, 30, 32, 33, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "contain": [3, 4, 8, 11, 29, 30, 33, 48, 49, 50, 52], "jpg": [3, 4, 29, 33, 50, 52], "The": [3, 4, 29, 30, 32, 33, 34, 35, 37, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55], "name": [3, 4, 8, 11, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 45, 46, 48, 49, 50, 51, 52, 53, 55], "label": [3, 4, 8, 11, 29, 33, 34, 50, 51, 52, 53], "class_a": [3, 4, 8, 11, 29], "class_b": [3, 4, 8, 11, 29], "class_c": [3, 4, 29], "For": [3, 4, 8, 11, 30, 32, 35, 37, 38, 39, 40, 42, 43, 45, 50, 51, 52, 53, 55], "user": [3, 4, 29, 48, 49], "defin": [3, 4, 47, 51, 52, 53], "split": [3, 4, 5, 6, 9, 12, 29, 37, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55], "valid": [3, 4, 29, 30, 37, 38, 42, 45, 48, 49, 50, 51, 52, 53, 55], "test": [3, 4, 29, 48, 49, 50, 51, 52, 53], "subset": [3, 4, 48, 49, 50, 51, 52, 53], "arrang": [3, 4, 50], "accordingli": [3, 4, 37, 39, 43, 45, 55], "onli": [3, 4, 29, 34, 37, 38, 42, 45, 47, 48, 49, 51, 52, 53, 55], "accept": [3, 4], "ar": [3, 4, 8, 29, 30, 32, 34, 37, 38, 39, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "paramet": [3, 4, 8, 11, 29], "str": [3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 52, 53], "where": [3, 4, 8, 11, 30, 32, 34, 35, 37, 40, 45, 51, 53, 55], "data": [3, 4, 8, 11, 29, 30, 33, 34, 37, 39, 43, 45, 48, 49, 50, 51, 52, 53, 55], "locat": [3, 4, 29, 30, 32, 34, 49], "It": [3, 4, 32, 34, 48, 49, 51, 52, 53], "subdirectori": [3, 4, 50, 52], "option": [3, 4, 8, 11, 29, 30, 35, 37, 40, 45, 55], "If": [3, 4, 8, 11, 29, 30, 34, 35, 37, 40, 45, 47, 48, 49, 50, 51, 52, 53, 55], "given": [3, 4, 8, 11, 29, 30, 50], "folder": [3, 4, 8, 11, 30, 32, 33, 35, 37, 40, 45, 47, 48, 49, 50, 52, 55], "int": [3, 4, 8, 11, 15, 48, 49, 50, 51, 52, 53], "number": [3, 8, 30, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "process": [3, 30, 34, 51, 52, 53], "load": [3, 8, 11, 29, 30, 34, 35, 37, 40, 45, 50, 51, 52, 53, 55], "default": [3, 4, 8, 11, 29, 30, 34, 47, 48, 49, 50, 51, 52, 53], "bool": [3, 4, 8, 11, 15, 29, 30, 48, 49, 50, 51, 52, 53], "whether": [3, 4, 8, 11], "shuffl": [3, 4, 8, 11], "rais": [3, 4, 8, 11, 29], "filenotfounderror": [3, 4, 8, 11], "doe": [3, 4, 8, 37, 39, 43, 45, 48, 49, 51, 52, 53, 55], "exist": [3, 4, 29, 37, 45, 50, 51, 52, 53, 55], "color_mod": 4, "rgb": [4, 50], "seed": [4, 5, 11], "kwarg": [4, 5, 6, 11, 12, 16, 17, 18, 19, 20, 21, 24, 26, 27, 29], "tensorflow": [4, 5, 11, 12, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 44, 45, 46, 47, 50, 54, 55], "specifi": [4, 8, 11, 30, 32, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "color": [4, 50, 52], "mode": [4, 30, 32], "greyscal": 4, "rgba": 4, "random": [4, 11], "as_supervis": 5, "from": [5, 6, 8, 9, 11, 12, 29, 30, 32, 35, 36, 37, 40, 41, 44, 45, 47, 48, 49, 51, 53, 54, 55], "catalog": [5, 6, 9, 12, 29, 30, 35, 37, 40, 45, 48, 49, 55], "download": [6, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 55], "torchvis": [6, 21, 29, 30, 31, 37, 44, 45, 46, 54, 55], "csv_file_nam": [8, 11, 51, 53], "class_nam": [8, 11, 29, 30, 48, 49, 50, 51, 52, 53], "list": [8, 11, 29, 31, 32, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "column_nam": [8, 51], "label_map_func": [8, 11, 53], "callabl": [8, 11], "label_col": 8, "delimit": [8, 11, 30, 34, 51, 53], "header": [8, 11, 51, 53], "fals": [8, 9, 11, 29, 48, 49, 50, 51, 52, 53], "select_col": [8, 11, 51, 53], "exclude_col": [8, 11, 51, 53], "text": [8, 9, 10, 11, 12, 24, 25, 26, 27, 30, 31, 32, 35, 37, 38, 40, 42, 44, 45, 47, 54, 55], "transform": [8, 11], "thi": [8, 11, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "csv": [8, 11, 29, 30, 34, 51, 53], "file": [8, 11, 29, 30, 32, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "two": [8, 11, 29, 34, 37, 38, 42, 45, 48, 49, 50, 51, 52, 53, 55], "column": [8, 11, 29, 34, 51, 53], "first": [8, 11, 32, 34, 48, 49, 50, 51, 52, 53], "second": [8, 11, 30, 32, 34, 48, 49, 50, 51, 52, 53], "sentenc": [8, 11, 29, 34, 51, 53], "classifi": [8, 11, 29, 34, 35, 37, 40, 45, 51, 53, 55], "exampl": [8, 11, 29, 30, 48, 49, 50, 51, 52, 53], "comma": [8, 11, 30, 34, 51, 53], "separ": [8, 11, 30, 34, 35, 37, 40, 45, 51, 53, 55], "valu": [8, 11, 30, 32, 34, 51, 53], "look": [8, 11, 51, 53], "similar": [8, 11, 51, 53], "snippet": [8, 11], "below": [8, 11, 33, 34, 47, 48, 49, 50, 51], "ha": [8, 11, 30, 32, 33, 34, 35, 37, 40, 45, 51, 52, 53, 55], "more": [8, 11, 32, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "filter": [8, 11, 29, 30, 34, 51, 53], "out": [8, 11, 35, 37, 40, 45, 50, 51, 52, 53, 55], "which": [8, 11, 29, 32, 33, 34, 37, 38, 42, 45, 48, 49, 50, 51, 52, 53, 55], "pars": [8, 11, 51, 53], "order": [8, 11], "infer": [8, 32, 35, 36, 37, 40, 41, 44, 45, 51, 52, 53, 54, 55], "must": 8, "exactli": 8, "one": [8, 11, 32, 34, 48, 49, 50, 51, 52, 53], "posit": 8, "correspond": 8, "argument": [8, 29, 34, 48, 49], "assign": 8, "text_1": 8, "text_2": 8, "rest": [8, 50, 52], "function": [8, 11, 29, 34, 48, 49, 50, 51, 52, 53], "map": [8, 11, 34, 50, 51, 52, 53], "across": [8, 11, 37, 45, 55], "appli": [8, 11, 30, 32, 48, 49, 50, 51, 52, 53], "element": [8, 11], "string": [8, 11, 30, 34, 50, 51, 53], "instead": [8, 11, 30, 37, 38, 42, 45, 50, 51, 52, 53, 55], "numer": [8, 11, 34, 50, 51, 52, 53], "you": [8, 29, 32, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "provid": [8, 11, 29, 30, 34, 37, 39, 43, 45, 48, 49, 50, 51, 52, 53, 55], "index": [8, 37, 51, 53], "integ": [8, 48, 49, 50, 51, 52, 53], "everi": 8, "uniqu": 8, "start": [8, 32, 44, 47, 54], "charact": [8, 11, 34, 53], "row": [8, 11, 51, 53], "boolean": [8, 11, 29, 30], "indic": [8, 11, 39, 43, 45, 55], "line": [8, 11, 50, 52], "skip": [8, 11, 47, 50, 51, 52, 53], "sort": [8, 11, 29], "": [8, 11, 29, 30, 32, 34, 37, 39, 43, 45, 46, 48, 49, 51, 52, 53, 55], "all": [8, 11, 29, 50, 51, 52, 53], "At": [8, 11], "most": [8, 11], "exclud": [8, 11], "worker": 8, "pass": [8, 32, 34, 50, 51, 52, 53], "dataload": 8, "found": [8, 11, 29, 30, 32, 35, 37, 40, 45, 50, 53, 55], "typeerror": [8, 11], "valueerror": [8, 11], "empti": [8, 11, 47], "mismatch": 8, "than": 8, "distribut": [9, 30, 37, 38, 42, 45, 55], "tf": [11, 13, 19, 20, 26, 27, 28, 29, 31, 35, 37, 40, 45, 47, 48, 49, 52, 53, 55], "field": 11, "model_nam": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "framework": [14, 15, 22, 23, 25, 28, 29, 31, 32, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], "frameworktyp": [14, 15, 22, 23, 25, 28, 29, 35, 37, 40, 45, 48, 49, 55], "use_cas": [14, 15, 22, 23, 25, 28, 29, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "usecasetyp": [14, 15, 22, 23, 25, 28, 29, 35, 37, 40, 45, 48, 49, 55], "image_s": [15, 29, 35, 37, 40, 45, 48, 49, 50, 52, 55], "do_fine_tun": 15, "dropout_layer_r": [15, 25], "pretrain": [15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 36, 37, 41, 45, 50, 51, 52, 53, 55], "kera": [16, 29, 46, 52], "applic": [16, 37, 39, 43, 45, 51, 52, 53, 55], "hub": [17, 20, 27, 35, 37, 40, 45, 46, 48, 49, 52, 53, 55], "optim": [18, 19, 24, 26, 29, 32, 35, 36, 37, 40, 41, 44, 45, 51, 52, 53, 54, 55], "loss": [18, 19, 24, 26, 29, 30, 32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "transfer": [22, 35, 38, 39, 40, 42, 43, 44, 54], "learn": [22, 30, 35, 38, 39, 40, 42, 43, 44, 54], "multi": [24, 34, 48, 49, 50, 52], "fine": [24, 26, 27, 30, 35, 37, 40, 45, 48, 49, 50, 52, 55], "tune": [24, 26, 27, 30, 32, 35, 37, 40, 45, 48, 49, 50, 52, 55], "float": [25, 48, 49, 51, 52, 53], "binari": [26, 27, 35, 37, 40, 45, 55], "simplest": 29, "wai": [29, 37, 38, 42, 45, 55], "creat": [29, 30, 32, 33, 34, 35, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54], "load_dataset": [29, 35, 37, 40, 45, 49, 50, 51, 52, 53, 55], "get_dataset": [29, 48, 50, 51, 52, 53], "third": [29, 37, 39, 43, 45, 48, 49, 51, 52, 53, 55], "parti": [29, 37, 39, 43, 45, 55], "tlt": [29, 32, 33, 34, 35, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55], "dataset_factori": [29, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "themselv": 29, "Or": [29, 37, 38, 42, 45, 47, 55], "see": [29, 32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "tfcustomtextclassificationdataset": 29, "document": [29, 30, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "addit": [29, 48, 49, 50, 51, 52, 53], "case": [29, 30, 31, 32, 35, 37, 40, 45, 46, 47, 50, 51, 52, 53, 55], "task": [29, 34, 51], "inform": [29, 30, 32, 35, 37, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 55], "purpos": [29, 50, 51, 52, 53], "keyword": 29, "depend": [29, 34, 47], "type": [29, 32, 35, 37, 40, 45, 48, 49, 51, 52, 53, 55], "being": [29, 30, 33, 34, 51, 53], "return": [29, 48, 49, 50, 51, 52, 53], "notimplementederror": 29, "support": [29, 30, 34, 35, 40, 44, 48, 49, 50, 51, 52, 53, 54], "import": [29, 35, 37, 40, 45, 55], "tmp": [29, 30, 32, 33, 34, 35, 37, 40, 45, 55], "flower_photo": [29, 32, 33, 35, 37, 40, 45, 50, 52, 55], "image_classif": [29, 32, 35, 37, 40, 45, 48, 49, 50, 52, 55], "3670": [29, 32, 35, 37, 40, 45, 55], "belong": [29, 32, 33, 35, 37, 40, 45, 55], "5": [29, 32, 33, 35, 37, 40, 45, 55], "daisi": [29, 33, 35, 37, 40, 45, 50, 52, 55], "dandelion": [29, 33, 35, 37, 40, 45, 50, 52, 55], "rose": [29, 33, 35, 37, 40, 45, 50, 52, 55], "sunflow": [29, 33, 35, 37, 40, 45, 50, 52, 55], "tulip": [29, 33, 35, 37, 40, 45, 50, 52, 55], "tf_dataset": [29, 30, 48, 52, 53], "cv": [29, 30], "huggingfac": [29, 30, 35, 37, 40, 45, 55], "nlp": 29, "request": [29, 37, 45, 50, 55], "yet": [29, 50, 52], "tf_flower": [29, 33, 35, 37, 40, 45, 52, 55], "rare": 29, "need": [29, 32, 50, 51, 53], "interact": 29, "directli": 29, "discov": 29, "work": [29, 32, 50, 51, 52, 53], "avail": [29, 30, 32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "get_model": [29, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "while": [29, 30, 48, 49, 50, 51, 52, 53], "load_model": [29, 48, 49], "either": [29, 34, 37, 38, 42, 45, 51, 53, 55], "path": [29, 30, 32, 33, 34, 35, 37, 40, 45, 47, 48, 49, 50, 51, 52, 53, 55], "object": [29, 48, 49, 50, 51, 52, 53], "memori": [29, 48, 49, 51, 52, 53], "discoveri": 29, "inspect": 29, "get_supported_model": 29, "print_supported_model": [29, 48, 49, 50, 51, 52, 53], "model_factori": [29, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "saved_model": [29, 30, 32, 48, 49, 50, 51, 52, 53], "pb": [29, 30, 32, 48, 49, 50, 51, 52, 53], "pt": [29, 30], "configur": [29, 34, 51, 52, 53], "set": [29, 32, 33, 34, 47, 48, 49, 50, 51, 52, 53], "adam": 29, "torch": [29, 50], "nn": 29, "crossentropyloss": 29, "those": [29, 37, 39, 43, 45, 55], "initi": 29, "further": [29, 37, 44, 45, 54, 55], "when": [29, 30, 32, 34, 48, 49, 50, 51, 52, 53], "thei": 29, "amsgrad": 29, "want": [29, 35, 37, 40, 45, 50, 51, 52, 53, 55], "sequenti": [29, 32], "input": [29, 48, 49, 50, 51, 52, 53], "layer": [29, 32, 36, 37, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55], "dens": [29, 32, 48, 49, 50, 51, 52, 53], "my_model": 29, "shape": [29, 32], "3": [29, 32, 37, 38, 42, 45, 47, 55], "4": [29, 32, 37, 38, 42, 45, 46, 55], "activ": [29, 47], "relu": 29, "softmax": 29, "efficientnet_b0": [29, 30, 32, 35, 37, 40, 45, 46, 50, 55], "224": [29, 50], "dictionari": 29, "leaf": 29, "item": 29, "about": [29, 30, 37, 38, 42, 45, 48, 49, 50, 51, 52, 53, 55], "nameerror": 29, "config": [29, 30, 35, 37, 40, 45, 51, 52, 53, 55], "unknown": 29, "miss": 29, "verbos": [29, 30, 48, 49, 50, 51, 52, 53], "markdown": 29, "print": [29, 32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "categor": 29, "result": [29, 32, 50, 51, 52, 53], "show": [29, 33, 34, 48, 49, 50, 51, 52, 53], "includ": [29, 51], "tabl": 29, "updat": [29, 51, 53], "Not": 29, "compat": 29, "command": [30, 32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 55], "arg": 30, "intel": [30, 35, 36, 38, 39, 40, 41, 42, 43, 44, 54], "neural": [30, 32, 35, 36, 37, 40, 41, 44, 45, 51, 52, 53, 54, 55], "compressor": [30, 32, 35, 36, 37, 40, 41, 44, 45, 51, 52, 53, 54, 55], "dir": [30, 32, 33, 34, 35, 37, 40, 45, 55], "model_dir": 30, "requir": [30, 47, 48, 49], "reload": 30, "dataset": [30, 32, 36, 41, 44, 47, 54], "time": [30, 32, 36, 37, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55], "inc": [30, 51, 52, 53], "inc_config": [30, 35, 37, 40, 45, 51, 52, 53, 55], "yaml": [30, 35, 37, 40, 45, 51, 52, 53, 55], "http": [30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55], "github": [30, 35, 37, 38, 40, 42, 45, 47, 50, 52, 55], "com": [30, 32, 33, 35, 37, 38, 40, 42, 45, 47, 49, 50, 52, 55], "blob": 30, "master": 30, "doc": 30, "md": 30, "gener": [30, 37, 45, 48, 49, 50, 51, 52, 53, 55], "perform": [30, 32, 35, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55], "accuraci": [30, 32, 35, 37, 39, 40, 43, 45, 48, 49, 50, 51, 52, 53, 55], "batch": [30, 32, 37, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55], "size": [30, 32, 37, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55], "batch_siz": [30, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "32": [30, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "output": [30, 32, 33, 34, 35, 37, 40, 45, 47, 48, 49, 50, 51, 52, 53, 55], "output_dir": [30, 33, 34, 35, 37, 40, 45, 47, 48, 49, 50, 51, 52, 53, 55], "writeabl": [30, 48, 49, 50, 51, 52, 53], "write": [30, 51, 52, 53], "temporari": 30, "delet": 30, "after": [30, 32, 33, 34, 35, 37, 38, 40, 42, 45, 50, 52, 53, 55], "complet": [30, 32, 35, 37, 39, 40, 43, 45, 50, 51, 55], "alreadi": [30, 33, 37, 45, 50, 51, 52, 53, 55], "been": [30, 32, 35, 37, 40, 45, 51, 52, 53, 55], "previous": 30, "export": [30, 33, 34, 35, 36, 37, 40, 41, 44, 45, 47, 54, 55], "try": 30, "get": [30, 38, 42, 44, 47, 54], "10": [30, 32, 35, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 53, 55], "dataset_fil": [30, 34], "f": [30, 32, 33, 34, 35, 37, 40, 45, 48, 50, 51, 52, 53, 55], "singl": [30, 51, 53], "extra": 30, "graph": [30, 32, 35, 37, 40, 45, 55], "save": [30, 32, 35, 36, 37, 40, 41, 45, 47, 48, 49, 50, 52, 55], "post": [30, 32, 51, 53], "repo": [30, 37, 38, 42, 45, 47, 55], "tree": 30, "dure": [30, 34], "criterion": [30, 32, 51, 52, 53], "accuracy_criterion": 30, "rel": [30, 51, 52, 53], "allow": [30, 34, 48, 49, 50, 51, 52, 53], "01": [30, 32, 35, 37, 40, 45, 51, 52, 53, 55], "1": [30, 32, 33, 34, 35, 37, 40, 45, 55], "timeout": [30, 32, 51, 52, 53], "finish": [30, 51, 52, 53], "max": [30, 32, 51, 52, 53], "trial": [30, 32, 51, 52, 53], "reach": [30, 32, 48, 49, 50, 51, 52, 53], "mean": [30, 50, 51, 52, 53], "phase": [30, 51, 52, 53], "stop": [30, 48, 49, 50, 51, 52, 53], "met": [30, 51, 52, 53], "max_trial": [30, 51, 52, 53], "maximum": [30, 51, 53], "50": [30, 32, 48, 49], "workspac": [30, 51, 52, 53], "deep": [30, 34, 37, 45, 55], "log": 30, "checkpoint": [30, 32, 37, 44, 45, 50, 51, 52, 53, 54, 55], "etc": [30, 48, 49, 50, 51, 52, 53], "epoch": [30, 32, 33, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "init": 30, "init_checkpoint": 30, "weight": [30, 48, 49, 50, 51, 52, 53], "resum": [30, 37, 44, 45, 54, 55], "latest": [30, 48, 49, 50, 51, 52, 53], "add": [30, 48, 49, 50, 52], "aug": 30, "add_aug": [30, 48, 49, 50, 52], "choic": 30, "augment": [30, 48, 49, 50, 52], "hvflip": [30, 48, 49, 52], "hflip": [30, 48, 49, 50, 52], "vflip": [30, 48, 49, 52], "rotat": [30, 48, 49, 50, 52], "zoom": [30, 48, 49, 52], "ipex_optim": [30, 51], "ipex": [30, 51], "extens": [30, 37, 44, 45, 51, 54, 55], "d": [30, 34], "trigger": 30, "job": [30, 34], "nnode": [30, 34], "node": [30, 34], "run": [30, 33, 34, 35, 36, 37, 40, 41, 45, 48, 49, 50, 51, 52, 53, 55], "nproc_per_nod": [30, 34], "nproc": 30, "per": [30, 34], "hostfil": [30, 34], "earli": [30, 48, 49, 50, 51, 52, 53], "early_stop": [30, 48, 49, 50, 51, 52, 53], "enabl": [30, 48, 49, 50, 51, 52, 53], "converg": [30, 48, 49, 50, 51, 52, 53], "lr": 30, "decai": [30, 48, 49, 50, 51, 52, 53], "lr_decai": [30, 48, 49, 50, 51, 52, 53], "do_ev": [30, 48, 49, 50, 51, 52, 53], "rate": [30, 48, 49, 50, 51, 52, 53], "end": [30, 32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "horovod": 30, "use_horovod": 30, "mpi": 30, "comprehens": 31, "public": [31, 36, 37, 39, 41, 43, 45, 50, 52, 55], "repositori": [31, 34, 37, 38, 42, 45, 47, 51, 53, 55], "link": [31, 37, 45, 48, 49, 51, 52, 53, 55], "ag": 31, "new": [31, 33, 34, 37, 45, 47, 48, 49, 50, 51, 52, 53, 55], "tfd": 31, "food101": [31, 50], "sm": [31, 34, 51, 53], "spam": [31, 34, 51, 53], "collect": [31, 34, 48, 51, 53], "flower": [31, 32, 33, 35, 37, 40, 45, 50, 52, 55], "cat": 31, "v": 31, "dog": 31, "country211": [31, 50], "dtd": [31, 50], "fgvcaircraft": [31, 50], "renderedsst2": [31, 50], "rock": 31, "paper": 31, "scissor": 31, "rotten_tomato": [31, 34, 51], "tweetev": 31, "cifar10": [31, 50], "imdb": [31, 34, 51], "review": 31, "glue": [31, 34, 53], "sst2": [31, 34, 51, 53], "cola": [31, 34, 53], "colorect": [31, 47], "histologi": [31, 47], "resisc45": [31, 49], "cdd": 31, "cesm": 31, "squad": 31, "mvtec": 31, "anomali": [31, 35, 37, 40, 45, 47, 55], "detect": [31, 35, 37, 40, 45, 47, 55], "follow": [32, 34, 35, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 55], "walk": 32, "through": 32, "full": [32, 35, 37, 40, 45, 52, 55], "workflow": [32, 35, 37, 40, 45, 48, 49, 55], "benchmark": [32, 34, 35, 37, 39, 40, 43, 44, 45, 49, 52, 54, 55], "quantiz": [32, 35, 37, 40, 44, 45, 54, 55], "same": [32, 48, 49, 50, 51, 52, 53], "concept": 32, "other": [32, 37, 45, 46, 48, 49, 51, 52, 53, 55], "help": [32, 35, 37, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 55], "detail": [32, 35, 37, 40, 45, 49, 55], "like": [32, 35, 37, 40, 45, 51, 53, 55], "flag": 32, "limit": 32, "particular": 32, "alexnet": [32, 35, 37, 40, 45, 46, 55], "convnext_bas": [32, 35, 37, 40, 45, 46, 55], "convnext_larg": [32, 35, 37, 40, 45, 46, 55], "convnext_smal": [32, 35, 37, 40, 45, 46, 55], "convnext_tini": [32, 35, 37, 40, 45, 46, 55], "densenet121": [32, 35, 37, 40, 45, 46, 55], "densenet161": [32, 35, 37, 40, 45, 46, 55], "densenet169": [32, 35, 37, 40, 45, 46, 55], "densenet201": [32, 35, 37, 40, 45, 46, 55], "efficientnet_b1": [32, 35, 37, 40, 45, 46, 55], "efficientnet_b2": [32, 46], "efficientnet_b3": [32, 46], "efficientnet_b4": [32, 46], "efficientnet_b5": [32, 46], "efficientnet_b6": [32, 46], "efficientnet_b7": [32, 46], "efficientnetv2": [32, 46], "b0": [32, 46], "b1": [32, 46], "b2": [32, 46], "b3": [32, 46], "googlenet": [32, 46], "inception_v3": [32, 46], "mnasnet0_5": [32, 46], "mnasnet1_0": [32, 46], "mobilenet_v2": [32, 46], "mobilenet_v2_100_224": [32, 46], "mobilenet_v3_larg": [32, 46], "we": [32, 37, 38, 42, 45, 48, 49, 50, 51, 52, 53, 55], "extract": [32, 33, 34, 35, 37, 40, 45, 50, 51, 52, 53, 55], "mkdir": [32, 33, 34, 47], "p": [32, 33, 34, 37, 38, 42, 45, 47, 55], "wget": [32, 33, 34], "storag": [32, 33, 35, 37, 40, 45, 50, 52, 55], "googleapi": [32, 33, 35, 37, 40, 45, 50, 52, 55], "org": [32, 33, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "example_imag": [32, 33, 35, 37, 40, 45, 50, 52, 55], "tgz": [32, 33, 35, 37, 40, 45, 50, 52, 55], "tar": [32, 33], "xzf": [32, 33], "c": [32, 33, 48, 50, 53], "readi": [32, 48, 49, 52, 53], "In": [32, 34, 48, 49, 50, 51, 52, 53], "resnet50v1": 32, "make": [32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 48, 49, 51, 52, 53, 55], "sure": [32, 35, 37, 40, 45, 55], "your": [32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55], "own": [32, 35, 36, 37, 40, 41, 44, 45, 54, 55], "point": [32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "resnet_v1_50": [32, 33, 35, 37, 40, 45, 46, 48, 49, 52, 55], "_________________________________________________________________": 32, "param": 32, "keras_lay": 32, "keraslay": 32, "2048": 32, "23561152": 32, "10245": 32, "total": 32, "23": 32, "571": 32, "397": 32, "trainabl": [32, 37, 44, 45, 54, 55], "245": 32, "non": 32, "561": 32, "152": 32, "resnet_v1_50_checkpoint": 32, "86": 32, "24": 32, "248m": 32, "step": [32, 47, 48, 49, 50, 51, 52, 53], "4600": 32, "acc": 32, "8438": 32, "toward": 32, "consol": [32, 35, 37, 40, 45, 55], "along": [32, 51, 53], "also": [32, 35, 37, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 55], "eval": [32, 33, 34, 35, 37, 40, 45, 55], "512": [32, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "2022": 32, "06": 32, "28": 32, "22": [32, 37, 38, 42, 45, 55], "info": [32, 48, 50, 51, 52, 53], "latenc": 32, "031": 32, "m": [32, 48], "throughput": 32, "329": 32, "878": 32, "sec": 32, "exit": [32, 51, 52, 53], "polici": [32, 37, 39, 43, 45, 51, 52, 53, 55], "25": [32, 35, 37, 40, 45, 50, 51, 52, 53, 55], "58": 32, "mix": [32, 37, 44, 45, 48, 49, 51, 52, 53, 54, 55], "precis": [32, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 51, 52, 53, 54, 55], "statist": 32, "op": 32, "int8": [32, 35, 37, 40, 44, 45, 54, 55], "conv2d": 32, "53": 32, "matmul": 32, "maxpool": 32, "quantizev2": 32, "dequant": 32, "elaps": 32, "32164": 32, "27": 32, "26": 32, "12": [32, 46], "13921": 32, "64": 32, "fp32": [32, 37, 38, 42, 44, 45, 54, 55], "9008": 32, "9022": 32, "durat": 32, "13": 32, "9226": 32, "17": 32, "3321": 32, "best": 32, "baselin": [32, 52], "histori": [32, 48, 49, 50, 51, 52, 53], "nc_workspac": [32, 35, 37, 40, 45, 51, 52, 53, 55], "snapshot": 32, "meet": [32, 34, 51, 53], "goal": 32, "savedmodel": 32, "written": [32, 51, 52, 53], "again": [32, 52], "compar": [32, 52], "33": 32, "946": 32, "1056": 32, "940": 32, "altern": 32, "done": [32, 37, 38, 42, 45, 50, 51, 52, 55], "part": [32, 50, 52], "flow": 32, "so": [32, 51, 52], "call": [32, 35, 36, 37, 40, 41, 45, 48, 49, 50, 51, 52, 53, 55], "51": 32, "21": 32, "here": 32, "how": [33, 34, 35, 40, 48, 49, 50, 51, 52, 53], "photo": 33, "format": [33, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "2": [33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 55], "mai": [33, 34, 37, 45, 46, 51, 52, 53, 55], "vari": [33, 34], "sinc": [33, 34, 50, 52], "onlin": [33, 50, 52], "tfflower": [33, 50, 52], "author": [33, 34, 48, 49, 50, 51, 52, 53], "team": [33, 37, 45, 50, 52, 55], "titl": [33, 34, 48, 49, 50, 51, 52, 53], "month": [33, 34, 49, 50, 51, 52, 53], "jan": [33, 50, 52], "year": [33, 34, 48, 49, 50, 51, 52, 53], "2019": [33, 34, 50, 52], "url": [33, 34, 47, 49, 50, 51, 52, 53], "have": [34, 35, 37, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 55], "although": 34, "api": [34, 36, 41, 44, 47, 54], "flexibl": 34, "translat": [34, 51, 53], "tab": [34, 51, 53], "zip": [34, 35, 37, 40, 45, 51, 53, 55], "messag": [34, 51, 53], "ham": [34, 51, 53], "mesag": [34, 51, 53], "replac": [34, 36, 37, 41, 45, 55], "befor": [34, 37, 45, 55], "archiv": [34, 51, 53], "ic": [34, 51, 53], "uci": [34, 51, 53], "edu": [34, 50, 51, 53], "ml": [34, 51, 53], "machin": [34, 35, 37, 40, 45, 51, 53, 55], "databas": [34, 51, 53], "00228": [34, 51, 53], "smsspamcollect": [34, 51, 53], "unzip": [34, 49], "copi": [34, 47], "smsspamcollection_numer": 34, "cp": 34, "sed": 34, "g": [34, 48], "small_bert": [34, 46, 53], "bert_en_uncased_l": [34, 46, 53], "2_h": [34, 46, 53], "128_a": [34, 46, 53], "our": [34, 48, 49, 50, 51, 52, 53], "t": [34, 48, 50, 51, 52, 53], "demonstr": [34, 35, 37, 40, 45, 50, 52, 55], "imdb_review": [34, 53], "level": [34, 53], "sentiment": [34, 51, 53], "analysi": [34, 48, 51, 53], "tweet_ev": [34, 51], "ag_new": [34, 51], "instruct": [34, 35, 37, 38, 40, 42, 45, 47, 50, 51, 52, 53, 55], "up": [34, 37, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55], "ensur": [34, 50, 52], "environ": [34, 35, 40, 48, 49, 50, 51, 52, 53], "right": [34, 37, 39, 43, 45, 51, 53, 55], "prerequisit": 34, "packag": [34, 37, 38, 42, 45, 47, 55], "successfulli": 34, "saniti": 34, "check": [34, 35, 37, 40, 45, 55], "bert": [34, 35, 37, 40, 45, 46, 51, 53, 55], "larg": [34, 37, 45, 46, 50, 52, 55], "uncas": [34, 46], "inproceed": [34, 51, 53], "maa": [34, 51, 53], "etal": [34, 51, 53], "2011": [34, 51, 53], "acl": [34, 51, 53], "hlt2011": [34, 51, 53], "andrew": [34, 51, 53], "l": [34, 48, 50, 51, 52, 53], "dali": [34, 51, 53], "raymond": [34, 51, 53], "e": [34, 51, 53], "pham": [34, 51, 53], "peter": [34, 51, 53], "huang": [34, 51, 53], "dan": [34, 51, 53], "ng": [34, 51, 53], "y": [34, 48, 49, 51, 53], "pott": [34, 51, 53], "christoph": [34, 51, 53], "word": [34, 51, 53], "vector": [34, 48, 49, 50, 51, 53], "booktitl": [34, 51, 53], "proceed": [34, 49, 51, 53], "49th": [34, 51, 53], "annual": [34, 51, 53], "associ": [34, 37, 39, 43, 45, 51, 53, 55], "comput": [34, 51, 53], "linguist": [34, 51, 53], "human": [34, 37, 39, 43, 45, 51, 53, 55], "languag": [34, 51, 53], "technologi": [34, 51, 53], "june": [34, 51, 53], "address": [34, 51, 52, 53], "portland": [34, 51, 53], "oregon": [34, 51, 53], "usa": [34, 51, 53], "publish": [34, 48, 49, 51, 53], "page": [34, 37, 48, 49, 51, 53], "142": [34, 51, 53], "150": [34, 51, 53], "www": [34, 37, 39, 43, 45, 49, 50, 51, 53, 55], "aclweb": [34, 51, 53], "anthologi": [34, 51, 53], "p11": [34, 51, 53], "1015": [34, 51, 53], "wang2019glu": 34, "platform": [34, 37, 39, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55], "natur": [34, 48], "understand": 34, "wang": 34, "alex": [34, 50], "singh": 34, "amanpreet": 34, "michael": 34, "julian": 34, "hill": 34, "felix": 34, "levi": 34, "omer": 34, "bowman": 34, "samuel": 34, "r": [34, 47, 48, 51, 52, 53], "iclr": 34, "misc": [34, 51, 53], "misc_sms_spam_collection_228": [34, 51, 53], "almeida": [34, 51, 53], "tiago": [34, 51, 53], "2012": [34, 51, 53], "howpublish": [34, 51, 53], "socher": 34, "2013": 34, "recurs": 34, "semant": [34, 51], "composition": 34, "over": [34, 37, 44, 45, 51, 52, 53, 54, 55], "treebank": 34, "richard": 34, "perelygin": 34, "wu": 34, "jean": 34, "chuang": 34, "jason": 34, "man": 34, "confer": [34, 51, 53], "empir": 34, "oct": [34, 49], "seattl": 34, "washington": 34, "d13": 34, "1170": 34, "1631": 34, "1642": 34, "tool": [35, 38, 39, 40, 42, 43, 44, 54], "prior": [35, 37, 40, 45, 55], "identifi": [35, 37, 40, 45, 55], "differ": [35, 37, 40, 45, 48, 49, 51, 52, 55], "actual": [35, 37, 40, 45, 50, 51, 52, 53, 55], "evalut": [35, 37, 40, 45, 55], "metric": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "addition": [35, 37, 40, 45, 55], "improv": [35, 37, 40, 45, 55], "setup": [35, 37, 38, 40, 42, 45, 55], "util": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "o": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "els": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "join": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "home": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "preprocess": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "shuffle_split": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "train_pct": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "75": [35, 37, 40, 45, 50, 51, 52, 53, 55], "val_pct": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "metric_nam": [35, 37, 40, 45, 55], "metric_valu": [35, 37, 40, 45, 55], "_model": [35, 37, 40, 45, 55], "metrics_nam": [35, 37, 40, 45, 55], "saved_model_dir": [35, 37, 40, 45, 48, 49, 51, 52, 53, 55], "inc_config_fil": [35, 37, 40, 45, 51, 52, 53, 55], "write_inc_config_fil": [35, 37, 40, 45, 51, 52, 53, 55], "overwrit": [35, 37, 40, 45, 51, 52, 53, 55], "accuracy_criterion_rel": [35, 37, 40, 45, 51, 52, 53, 55], "exit_policy_timeout": [35, 37, 40, 45, 51, 52, 53, 55], "exit_policy_max_tri": [35, 37, 40, 45, 51, 52, 53, 55], "tuning_workspac": [35, 37, 40, 45, 51, 52, 53, 55], "quantization_output": [35, 37, 40, 45, 55], "quantized_model": [35, 37, 40, 45, 51, 52, 53, 55], "do": [35, 37, 38, 40, 42, 45, 50, 52, 55], "optimization_output": [35, 37, 40, 45, 55], "optimized_model": [35, 37, 40, 45, 55], "optimize_graph": [35, 37, 40, 45, 55], "intelai": [35, 37, 38, 40, 42, 45, 47, 55], "io": [35, 37, 40, 45, 50, 55], "just": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "quickli": [35, 37, 40, 44, 45, 54, 55], "develop": [35, 40], "ai": [35, 37, 39, 40, 43, 44, 45, 54, 55], "deploy": [35, 37, 40, 44, 45, 54, 55], "With": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "sampl": [35, 37, 40, 45, 52, 55], "abov": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "execut": [35, 37, 40, 45, 48, 49, 55], "simpl": [35, 36, 37, 40, 41, 45, 55], "real": [35, 37, 40, 45, 55], "world": [35, 37, 40, 45, 55], "refer": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "descript": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "kit": [35, 37, 40, 45, 55], "breast": [35, 37, 40, 45, 55], "cancer": [35, 37, 40, 45, 48, 55], "cli": [36, 41, 44, 54], "bash": [36, 37, 41, 45, 55], "prompt": [36, 37, 41, 45, 55], "python": [36, 37, 38, 41, 42, 45, 47, 55], "script": [36, 37, 39, 41, 43, 45, 55], "them": [36, 37, 41, 45, 48, 49, 50, 52, 53, 55], "minim": [36, 37, 41, 45, 55], "low": [36, 41, 44, 51, 52, 53, 54], "featur": [36, 41, 44, 48, 49, 50, 51, 52, 53, 54], "cpu": [36, 37, 41, 45, 55], "knowledg": [37, 45, 48, 49, 55], "pre": [37, 45, 55], "relat": [37, 39, 43, 45, 55], "problem": [37, 45, 55], "smaller": [37, 45, 55], "easier": [37, 45, 55], "faster": [37, 45, 48, 49, 51, 52, 53, 55], "varieti": [37, 45, 50, 55], "open": [37, 45, 48, 49, 50, 51, 52, 53, 55], "librari": [37, 38, 42, 45, 50, 51, 52, 53, 55], "leverag": [37, 45, 55], "effici": [37, 45, 55], "well": [37, 45, 51, 53, 55], "its": [37, 45, 55], "usag": [37, 45, 55], "offer": [37, 44, 45, 54, 55], "both": [37, 44, 45, 48, 49, 51, 52, 53, 54, 55], "100": [37, 44, 45, 54, 55], "automat": [37, 44, 45, 48, 49, 51, 52, 53, 54, 55], "bring": [37, 44, 45, 54, 55], "built": [37, 44, 45, 54, 55], "scale": [37, 44, 45, 50, 52, 54, 55], "crop": [37, 44, 45, 54, 55], "predict": [37, 44, 45, 48, 49, 54, 55], "boost": [37, 44, 45, 54, 55], "reduc": [37, 44, 45, 54, 55], "speed": [37, 44, 45, 54, 55], "auto": [37, 44, 45, 48, 49, 51, 52, 53, 54, 55], "select": [37, 44, 45, 48, 49, 50, 52, 53, 54, 55], "multinod": [37, 38, 42, 44, 45, 54, 55], "recommend": [37, 38, 42, 45, 48, 49, 51, 52, 53, 55], "4th": [37, 38, 42, 45, 55], "gen": [37, 38, 42, 45, 55], "xeon": [37, 38, 42, 45, 48, 49, 51, 52, 53, 55], "scalabl": [37, 38, 42, 45, 55], "processor": [37, 38, 42, 45, 48, 49, 51, 52, 53, 55], "bf16": [37, 38, 42, 45, 55], "1st": [37, 38, 42, 45, 55], "2nd": [37, 38, 42, 45, 55], "3rd": [37, 38, 42, 45, 55], "linux": [37, 38, 42, 45, 55], "system": [37, 38, 42, 45, 47, 51, 55], "ubuntu": [37, 38, 42, 45, 47, 55], "20": [37, 38, 42, 45, 47, 50, 52, 55], "04": [37, 38, 42, 45, 47, 55], "lt": [37, 38, 42, 45, 55], "8": [37, 38, 42, 45, 46, 47, 55], "9": [37, 38, 42, 45, 47, 55], "pip": [37, 38, 42, 45, 47, 55], "conda": [37, 38, 42, 45, 47, 55], "virtualenv": [37, 38, 42, 45, 47, 55], "apt": [37, 38, 42, 45, 55], "build": [37, 38, 42, 45, 55], "essenti": [37, 38, 42, 45, 55], "dev": [37, 38, 42, 45, 55], "libgl1": [37, 38, 42, 45, 55], "libglib2": [37, 38, 42, 45, 55], "git": [37, 38, 42, 45, 47, 55], "encourag": [37, 38, 42, 45, 55], "consist": [37, 38, 42, 45, 55], "manag": [37, 38, 42, 45, 55], "There": [37, 38, 42, 45, 55], "tlt_dev_venv": [37, 38, 42, 45, 55], "bin": [37, 38, 42, 45, 47, 55], "b": [37, 38, 42, 45, 55], "clone": [37, 38, 42, 45, 47, 55], "plan": [37, 38, 42, 45, 55], "chang": [37, 38, 42, 45, 50, 52, 55], "navig": [37, 38, 42, 45, 47, 55], "cd": [37, 38, 42, 45, 47, 55], "wheel": [37, 38, 42, 45, 55], "py": [37, 38, 42, 45, 55], "bdist_wheel": [37, 38, 42, 45, 55], "dist": [37, 38, 42, 45, 55], "intel_transfer_learning_tool": [37, 38, 42, 45, 55], "py3": [37, 38, 42, 45, 55], "ani": [37, 38, 39, 42, 43, 45, 50, 51, 52, 53, 55], "whl": [37, 38, 42, 45, 55], "edit": [37, 38, 42, 45, 55], "avoid": [37, 38, 39, 42, 43, 45, 55], "rebuild": [37, 38, 42, 45, 55], "11": [37, 38, 42, 45, 47, 55], "wa": [37, 38, 42, 45, 48, 49, 50, 51, 52, 53, 55], "success": [37, 38, 42, 45, 55], "displai": [37, 38, 42, 45, 50, 51, 52, 53, 55], "track": [37, 45, 55], "bug": [37, 45, 55], "enhanc": [37, 45, 55], "issu": [37, 45, 52, 55], "submit": [37, 45, 55], "suggest": [37, 45, 55], "report": [37, 45, 48, 49, 55], "search": [37, 45, 51, 52, 53, 55], "brand": [37, 45, 46, 55], "claim": [37, 45, 46, 55], "properti": [37, 45, 46, 51, 53, 55], "trademark": [37, 45, 46, 55], "These": [37, 39, 43, 45, 50, 55], "intend": [37, 39, 43, 45, 55], "visit": [37, 39, 43, 45, 55], "blog": [37, 39, 43, 45, 55], "commit": [37, 39, 43, 45, 55], "respect": [37, 39, 43, 45, 55], "complic": [37, 39, 43, 45, 55], "abus": [37, 39, 43, 45, 55], "reflect": [37, 39, 43, 45, 55], "global": [37, 39, 43, 45, 55], "principl": [37, 39, 43, 45, 55], "access": [37, 39, 43, 45, 55], "materi": [37, 39, 43, 45, 55], "agre": [37, 39, 43, 45, 55], "product": [37, 39, 43, 45, 55], "caus": [37, 39, 43, 45, 55], "contribut": [37, 39, 43, 45, 55], "violat": [37, 39, 43, 45, 55], "internation": [37, 39, 43, 45, 55], "recogn": [37, 39, 43, 45, 55], "under": [37, 39, 43, 45, 55], "apach": [37, 39, 43, 45, 55], "version": [37, 39, 43, 45, 55], "To": [37, 39, 43, 45, 48, 49, 50, 52, 55], "extent": [37, 39, 43, 45, 55], "referenc": [37, 39, 43, 45, 55], "site": [37, 39, 43, 45, 55], "warrant": [37, 39, 43, 45, 55], "qualiti": [37, 39, 43, 45, 55], "By": [37, 39, 43, 45, 48, 49, 55], "term": [37, 39, 43, 45, 51, 53, 55], "compli": [37, 39, 43, 45, 55], "expressli": [37, 39, 43, 45, 55], "adequaci": [37, 39, 43, 45, 55], "liabl": [37, 39, 43, 45, 55], "error": [37, 39, 43, 45, 52, 55], "omiss": [37, 39, 43, 45, 55], "defect": [37, 39, 43, 45, 55], "relianc": [37, 39, 43, 45, 55], "liabil": [37, 39, 43, 45, 55], "damag": [37, 39, 43, 45, 55], "legal": 37, "modul": [37, 50, 51], "code": [38, 39, 42, 43, 44, 54], "specif": [39, 43], "hardwar": [44, 51, 52, 53, 54], "mobilenet_v3_smal": 46, "nasnet_larg": 46, "proxyless_cpu": 46, "regnet_x_16gf": 46, "regnet_x_1_6gf": 46, "regnet_x_32gf": 46, "regnet_x_3_2gf": 46, "regnet_x_400mf": 46, "regnet_x_800mf": 46, "regnet_x_8gf": 46, "regnet_y_16gf": 46, "regnet_y_1_6gf": 46, "regnet_y_32gf": 46, "regnet_y_3_2gf": 46, "regnet_y_400mf": 46, "regnet_y_800mf": 46, "regnet_y_8gf": 46, "resnet101": 46, "resnet152": 46, "resnet18": 46, "resnet18_ssl": 46, "resnet18_swsl": 46, "resnet34": 46, "resnet50": 46, "resnet50_ssl": 46, "resnet50_swsl": 46, "resnet_v2_101": 46, "resnet_v2_50": 46, "resnext101_32x16d_ssl": 46, "resnext101_32x16d_swsl": 46, "resnext101_32x16d_wsl": 46, "resnext101_32x32d_wsl": 46, "resnext101_32x48d_wsl": 46, "resnext101_32x4d_ssl": 46, "resnext101_32x4d_swsl": 46, "resnext101_32x8d": 46, "resnext101_32x8d_ssl": 46, "resnext101_32x8d_swsl": 46, "resnext101_32x8d_wsl": 46, "resnext50_32x4d": 46, "resnext50_32x4d_ssl": 46, "resnext50_32x4d_swsl": 46, "shufflenet_v2_x0_5": 46, "shufflenet_v2_x1_0": 46, "vgg11": 46, "vgg11_bn": 46, "vgg13": 46, "vgg13_bn": 46, "vgg16": 46, "vgg16_bn": 46, "vgg19": 46, "vgg19_bn": 46, "vit_b_16": 46, "vit_b_32": 46, "vit_l_16": 46, "vit_l_32": 46, "wide_resnet101_2": 46, "wide_resnet50_2": 46, "convnextbas": 46, "convnextlarg": 46, "convnextsmal": 46, "convnexttini": 46, "convnextxlarg": 46, "efficientnetb0": 46, "efficientnetb1": 46, "efficientnetb2": 46, "efficientnetb3": 46, "efficientnetb4": 46, "efficientnetb5": 46, "efficientnetb6": 46, "efficientnetb7": 46, "efficientnetv2b0": 46, "efficientnetv2b1": 46, "efficientnetv2b2": 46, "efficientnetv2b3": 46, "efficientnetv2l": 46, "efficientnetv2m": 46, "inceptionresnetv2": 46, "inceptionv3": 46, "mobilenet": 46, "mobilenetv2": 46, "nasnetlarg": 46, "nasnetmobil": 46, "resnet101v2": 46, "resnet152v2": 46, "resnet50v2": 46, "xception": 46, "12_h": 46, "768_a": 46, "bert_en_wwm_uncased_l": 46, "24_h": 46, "1024_a": 46, "16": [46, 48, 49, 50, 51, 52, 53], "clinic": 46, "distilbert": 46, "10_h": 46, "256_a": 46, "512_a": 46, "4_h": 46, "6_h": 46, "8_h": 46, "medic": 47, "remot": 47, "sens": 47, "scene": 47, "resisc": 47, "python3": 47, "e2": 47, "main": 47, "readm": 47, "nativ": [47, 51], "transfer_learn": 47, "tlt_repo": 47, "pwd": 47, "virtual": 47, "venv": 47, "anaconda": 47, "n": [47, 48, 50, 51, 52, 53], "Then": [47, 50, 52], "insid": 47, "upgrad": 47, "txt": [47, 50, 52], "variabl": [47, 50, 51, 52, 53], "subsequ": [47, 50], "reus": [47, 50], "server": 47, "pythonpath": 47, "jupyt": 47, "port": 47, "8888": 47, "past": 47, "termin": 47, "browser": 47, "view": 47, "notebook": [48, 49, 50, 51, 52, 53], "facilit": [48, 49], "implement": [48, 49, 51, 52, 53], "toolkit": [48, 49], "textur": 48, "sota": [48, 49], "resnet": [48, 49], "v1": [48, 49], "domain": [48, 49], "achiev": [48, 49], "numpi": [48, 49, 50, 51, 52, 53], "np": [48, 49, 50, 51, 52, 53], "pickl": [48, 49], "sklearn": [48, 49], "classification_report": [48, 49], "plot_util": [48, 49], "plot_curv": [48, 49], "factori": [48, 49, 50, 51, 52, 53], "tfhub": [48, 49, 50, 51, 52, 53], "ad": [48, 49, 50, 51, 52, 53], "origin": [48, 49, 51, 53], "next": [48, 49, 50, 51, 52, 53], "previou": [48, 49, 50, 51, 52, 53], "cell": [48, 49, 50, 51, 52, 53], "later": [48, 49, 50, 51, 52, 53], "continu": [48, 49, 50, 51, 52, 53], "colorectal_histologi": 48, "nclass": [48, 51, 52, 53], "onc": [48, 49, 50, 51, 52, 53], "resiz": [48, 49, 50, 52, 53], "match": [48, 49, 50, 52, 53], "randomhorizontalandverticalflip": [48, 49, 52], "randomhorizontalflip": [48, 49, 50, 52], "randomverticalflip": [48, 49, 52], "randomrot": [48, 49, 50, 52], "randomzoom": [48, 49, 52], "80": [48, 49], "test_pct": [48, 49], "compil": [48, 49, 50, 52], "paramt": [48, 49, 51, 52, 53], "calcul": [48, 49, 50, 51, 52, 53], "imageclassificationdataset": [48, 49, 50, 51, 52, 53], "initial_checkpoint": [48, 49, 50, 51, 52, 53], "enable_auto_mixed_precis": [48, 49, 52, 53], "bit": [48, 49, 51, 52, 53], "less": [48, 49, 51, 52, 53], "bfloat16": [48, 49, 51, 52, 53], "fourth": [48, 49, 51, 52, 53], "detriment": [48, 49, 51, 52, 53], "disabl": [48, 49, 52, 53], "extra_lay": [48, 49, 50, 51, 52, 53], "insert": [48, 49, 50, 51, 52, 53], "between": [48, 49, 50, 51, 52, 53], "increas": [48, 49, 50, 51, 52, 53], "1024": [48, 49, 50, 51, 52, 53], "neuron": [48, 49, 50, 51, 52, 53], "releas": [48, 49, 50, 51, 52, 53], "date": [48, 49, 50, 51, 52, 53], "current": [48, 49, 50, 51, 52, 53], "val_loss": [48, 49], "val_acc": [48, 49], "_checkpoint": [48, 49], "dump": [48, 49], "hist": 48, "pkl": [48, 49], "wb": [48, 49], "serv": [48, 49, 50, 51, 52, 53], "pick": [48, 49, 50, 51, 52, 53], "appropri": [48, 49], "rb": [48, 49], "use_test_set": [48, 49], "actual_label": [48, 49, 53], "concaten": [48, 49], "x": [48, 49, 53], "_test_subset": [48, 49], "axi": [48, 49, 50, 51, 52, 53], "predicted_label": [48, 49], "articl": [48, 49, 50, 52], "kather2016multi": 48, "kather": 48, "jakob": 48, "nikola": 48, "wei": 48, "cleo": 48, "aron": 48, "bianconi": 48, "francesco": 48, "melcher": 48, "susann": 48, "schad": 48, "lothar": 48, "gaiser": 48, "timo": 48, "marx": 48, "alexand": 48, "z": 48, "llner": 48, "frank": 48, "gerrit": 48, "journal": [48, 49, 50, 52], "scientif": 48, "volum": [48, 49], "27988": 48, "2016": [48, 50, 52], "group": 48, "j": 48, "z\u00f6llner": 48, "zenodo": 48, "doi": [48, 49], "5281": 48, "53169": 48, "rar": 49, "onedr": 49, "live": 49, "authkei": 49, "21ahhnahilzp": 49, "5fixj": 49, "cid": 49, "5c5e061130630a68": 49, "id": [49, 50, 52], "21107": 49, "parid": 49, "21112": 49, "action": 49, "custom_dataset_path": [49, 50, 52], "256": 49, "resisc45_hist": 49, "cheng_2017": 49, "state": 49, "art": 49, "105": 49, "issn": 49, "1558": 49, "2256": 49, "dx": 49, "1109": 49, "jproc": 49, "2017": [49, 51], "2675998": 49, "ieee": 49, "institut": 49, "electr": 49, "electron": 49, "engin": 49, "cheng": 49, "gong": 49, "han": 49, "junwei": 49, "lu": 49, "xiaoqiang": 49, "1865": 49, "1883": 49, "classfic": [50, 52], "assum": [50, 51, 52, 53], "matplotlib": [50, 52], "pyplot": [50, 52], "plt": [50, 52], "panda": [50, 51, 52, 53], "pd": [50, 51, 52, 53], "pil": [50, 52], "bytesio": 50, "file_util": [50, 51, 52, 53], "download_and_extract_tar_fil": [50, 52], "download_fil": [50, 52], "correct": [50, 52], "layout": [50, 52], "speci": [50, 52], "similarli": [50, 52], "comment": [50, 52], "download_url": [50, 52], "choos": 50, "apppli": 50, "haven": [50, 52], "give": [50, 52], "u": [50, 52], "imagenet": [50, 52], "get_batch": [50, 51, 52, 53], "labels_fil": [50, 52], "imagenetlabel": [50, 52], "labels_file_path": 50, "basenam": [50, 51, 52, 53], "imagenet_label": [50, 52], "readlin": [50, 52], "imagenet_class": [50, 52], "strip": [50, 52], "figur": [50, 52], "figsiz": [50, 52], "18": [50, 52], "14": [50, 52], "subplots_adjust": [50, 52], "hspace": [50, 52], "rang": [50, 52], "min": [50, 52], "30": [50, 52], "subplot": [50, 52], "inp": 50, "transpos": 50, "arrai": [50, 52], "485": 50, "456": 50, "406": 50, "std": 50, "229": 50, "225": 50, "clip": 50, "imshow": [50, 52], "correct_predict": [50, 52], "darkgreen": [50, 52], "crimson": [50, 52], "fontsiz": [50, 52], "off": [50, 52], "_": [50, 52], "suptitl": [50, 52], "shown": [50, 52], "green": [50, 52], "incorrect": [50, 52], "red": [50, 52], "parenthesi": [50, 52], "summari": [50, 51], "unfrozen": [50, 51], "list_lay": [50, 51], "unfreeze_lay": [50, 51], "unfreez": [50, 51], "lastli": [50, 51, 53], "earlier": [50, 52], "visual": [50, 52], "wasn": [50, 52], "web": [50, 52], "image_url": [50, 52], "c8": [50, 52], "staticflickr": [50, 52], "7095": [50, 52], "7210797228_c7fe51c3cb_z": [50, 52], "image_shap": [50, 52], "content": [50, 51, 53], "dimens": [50, 52], "normal": 50, "255": [50, 52], "channel": 50, "newaxi": [50, 52], "moveaxi": 50, "tensor": [50, 51], "krizhevski": 50, "cifar": 50, "2009": 50, "toronto": 50, "kriz": 50, "html": 50, "openimag": [50, 52], "krasin": [50, 52], "ivan": [50, 52], "duerig": [50, 52], "tom": [50, 52], "alldrin": [50, 52], "neil": [50, 52], "veit": [50, 52], "andrea": [50, 52], "abu": [50, 52], "el": [50, 52], "haija": [50, 52], "sami": [50, 52], "belongi": [50, 52], "serg": [50, 52], "cai": [50, 52], "david": [50, 52], "feng": [50, 52], "zheyun": [50, 52], "ferrari": [50, 52], "vittorio": [50, 52], "gome": [50, 52], "victor": [50, 52], "gupta": [50, 52], "abhinav": [50, 52], "narayanan": [50, 52], "dhyanesh": [50, 52], "sun": [50, 52], "chen": [50, 52], "chechik": [50, 52], "gal": [50, 52], "murphi": [50, 52], "kevin": [50, 52], "intel_extension_for_pytorch": 51, "download_and_extract_zip_fil": [51, 53], "text_classif": [51, 53], "num_class": [51, 53], "pleas": [51, 53], "licens": [51, 53], "condit": [51, 53], "corpor": [51, 53], "modifi": 51, "local": 51, "csv_path": 51, "dataset_url": 51, "sms_spam_collect": [51, 53], "csv_name": 51, "label_nam": 51, "renam": 51, "know": 51, "renamed_csv": 51, "don": 51, "emoji": 51, "emot": 51, "hate": 51, "ironi": 51, "offens": 51, "stance_abort": 51, "stance_ath": 51, "stance_clim": 51, "stance_feminist": 51, "stance_hillari": 51, "use_train": 51, "trainer": 51, "loop": 51, "data_batch": [51, 53], "batch_predict": [51, 53], "frame": [51, 53], "max_item": [51, 53], "score": [51, 53], "prediction_list": [51, 53], "enumer": [51, 53], "input_id": 51, "get_text": 51, "append": [51, 53], "get_str_label": [51, 53], "break": [51, 53], "result_df": [51, 53], "datafram": [51, 53], "style": [51, 53], "hide": [51, 53], "raw": [51, 53], "good": 51, "movi": [51, 53], "section": [51, 52, 53], "control": [51, 52, 53], "quantization_output_dir": [51, 52, 53], "relative_accuracy_criterion": [51, 52, 53], "15": [51, 52, 53], "read": [51, 52, 53], "recip": [51, 52, 53], "within": [51, 52, 53], "constrain": [51, 52, 53], "take": [51, 52, 53], "sever": [51, 52, 53], "minut": [51, 52, 53], "rosenthal2017semev": 51, "semev": 51, "twitter": 51, "rosenth": 51, "sara": 51, "farra": 51, "noura": 51, "nakov": 51, "preslav": 51, "11th": 51, "intern": 51, "workshop": 51, "502": 51, "518": 51, "downloaded_fil": 52, "get_fil": 52, "let": 52, "known": 52, "sometim": 52, "zmq": 52, "zmqerror": 52, "rerun": 52, "encod": 53, "model_url": 53, "preprocessor": 53, "_hub_preprocessor": 53, "zip_file_url": 53, "sms_data_directori": 53, "listdir": 53, "def": 53, "ag_news_subset": 53, "len": 53, "decod": 53, "utf": 53, "argmax": 53, "get_static_valu": 53, "center": 53, "set_table_styl": 53, "selector": 53, "th": 53, "prop": 53, "align": 53, "awesom": 53, "zhang2015characterlevel": 53, "convolut": 53, "network": 53, "xiang": 53, "zhang": 53, "junbo": 53, "zhao": 53, "yann": 53, "lecun": 53, "2015": 53, "eprint": 53, "1509": 53, "01626": 53, "archiveprefix": 53, "arxiv": 53, "primaryclass": 53, "lg": 53}, "objects": {"tlt.datasets.dataset": [[0, 0, 1, "", "BaseDataset"]], "tlt.datasets.dataset.BaseDataset": [[0, 1, 1, "", "__init__"]], "tlt.datasets": [[29, 2, 0, "-", "dataset_factory"]], "tlt.datasets.dataset_factory": [[29, 3, 1, "", "get_dataset"], [29, 3, 1, "", "load_dataset"]], "tlt.datasets.hf_dataset": [[1, 0, 1, "", "HFDataset"]], "tlt.datasets.hf_dataset.HFDataset": [[1, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.image_classification_dataset": [[2, 0, 1, "", "ImageClassificationDataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[2, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset": [[3, 0, 1, "", "PyTorchCustomImageClassificationDataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[3, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset": [[4, 0, 1, "", "TFCustomImageClassificationDataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[4, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tfds_image_classification_dataset": [[5, 0, 1, "", "TFDSImageClassificationDataset"]], "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset": [[5, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset": [[6, 0, 1, "", "TorchvisionImageClassificationDataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[6, 1, 1, "", "__init__"]], "tlt.datasets.pytorch_dataset": [[7, 0, 1, "", "PyTorchDataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[7, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset": [[8, 0, 1, "", "HFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[8, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_text_classification_dataset": [[9, 0, 1, "", "HFTextClassificationDataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[9, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.text_classification_dataset": [[10, 0, 1, "", "TextClassificationDataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[10, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset": [[11, 0, 1, "", "TFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[11, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tfds_text_classification_dataset": [[12, 0, 1, "", "TFDSTextClassificationDataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[12, 1, 1, "", "__init__"]], "tlt.datasets.tf_dataset": [[13, 0, 1, "", "TFDataset"]], "tlt.datasets.tf_dataset.TFDataset": [[13, 1, 1, "", "__init__"]], "tlt.models.hf_model": [[14, 0, 1, "", "HFModel"]], "tlt.models.hf_model.HFModel": [[14, 1, 1, "", "__init__"]], "tlt.models.image_classification.image_classification_model": [[15, 0, 1, "", "ImageClassificationModel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[15, 1, 1, "", "__init__"]], "tlt.models.image_classification.keras_image_classification_model": [[16, 0, 1, "", "KerasImageClassificationModel"]], "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel": [[16, 1, 1, "", "__init__"]], "tlt.models.image_classification.pytorch_hub_image_classification_model": [[17, 0, 1, "", "PyTorchHubImageClassificationModel"]], "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel": [[17, 1, 1, "", "__init__"]], "tlt.models.image_classification.pytorch_image_classification_model": [[18, 0, 1, "", "PyTorchImageClassificationModel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[18, 1, 1, "", "__init__"]], "tlt.models.image_classification.tf_image_classification_model": [[19, 0, 1, "", "TFImageClassificationModel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[19, 1, 1, "", "__init__"]], "tlt.models.image_classification.tfhub_image_classification_model": [[20, 0, 1, "", "TFHubImageClassificationModel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[20, 1, 1, "", "__init__"]], "tlt.models.image_classification.torchvision_image_classification_model": [[21, 0, 1, "", "TorchvisionImageClassificationModel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[21, 1, 1, "", "__init__"]], "tlt.models.model": [[22, 0, 1, "", "BaseModel"]], "tlt.models.model.BaseModel": [[22, 1, 1, "", "__init__"]], "tlt.models": [[29, 2, 0, "-", "model_factory"]], "tlt.models.model_factory": [[29, 3, 1, "", "get_model"], [29, 3, 1, "", "get_supported_models"], [29, 3, 1, "", "load_model"], [29, 3, 1, "", "print_supported_models"]], "tlt.models.pytorch_model": [[23, 0, 1, "", "PyTorchModel"]], "tlt.models.pytorch_model.PyTorchModel": [[23, 1, 1, "", "__init__"]], "tlt.models.text_classification.hf_text_classification_model": [[24, 0, 1, "", "HFTextClassificationModel"]], "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel": [[24, 1, 1, "", "__init__"]], "tlt.models.text_classification.text_classification_model": [[25, 0, 1, "", "TextClassificationModel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[25, 1, 1, "", "__init__"]], "tlt.models.text_classification.tf_text_classification_model": [[26, 0, 1, "", "TFTextClassificationModel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[26, 1, 1, "", "__init__"]], "tlt.models.text_classification.tfhub_text_classification_model": [[27, 0, 1, "", "TFHubTextClassificationModel"]], "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel": [[27, 1, 1, "", "__init__"]], "tlt.models.tf_model": [[28, 0, 1, "", "TFModel"]], "tlt.models.tf_model.TFModel": [[28, 1, 1, "", "__init__"]], "tlt-benchmark": [[30, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch-size"], [30, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch_size"], [30, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset-dir"], [30, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset_dir"], [30, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc-config"], [30, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc_config"], [30, 4, 1, "cmdoption-tlt-benchmark-mode", "--mode"], [30, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model-dir"], [30, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model_dir"], [30, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output-dir"], [30, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output_dir"]], "tlt-eval": [[30, 4, 1, "cmdoption-tlt-eval-class-names", "--class-names"], [30, 4, 1, "cmdoption-tlt-eval-class-names", "--class_names"], [30, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset-catalog"], [30, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset-dir"], [30, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset-file"], [30, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset-name"], [30, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset_catalog"], [30, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset_dir"], [30, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset_file"], [30, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset_name"], [30, 4, 1, "cmdoption-tlt-eval-delimiter", "--delimiter"], [30, 4, 1, "cmdoption-tlt-eval-model-dir", "--model-dir"], [30, 4, 1, "cmdoption-tlt-eval-model-name", "--model-name"], [30, 4, 1, "cmdoption-tlt-eval-model-dir", "--model_dir"], [30, 4, 1, "cmdoption-tlt-eval-model-name", "--model_name"]], "tlt-list-models": [[30, 4, 1, "cmdoption-tlt-list-models-f", "--framework"], [30, 4, 1, "cmdoption-tlt-list-models-use-case", "--use-case"], [30, 4, 1, "cmdoption-tlt-list-models-use-case", "--use_case"], [30, 4, 1, "cmdoption-tlt-list-models-verbose", "--verbose"], [30, 4, 1, "cmdoption-tlt-list-models-f", "-f"]], "tlt-optimize": [[30, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model-dir"], [30, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model_dir"], [30, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output-dir"], [30, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output_dir"]], "tlt-quantize": [[30, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy-criterion"], [30, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy_criterion"], [30, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch-size"], [30, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch_size"], [30, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset-dir"], [30, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset_dir"], [30, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc-config"], [30, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc_config"], [30, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max-trials"], [30, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max_trials"], [30, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model-dir"], [30, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model_dir"], [30, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output-dir"], [30, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output_dir"], [30, 4, 1, "cmdoption-tlt-quantize-timeout", "--timeout"]], "tlt-train": [[30, 4, 1, "cmdoption-tlt-train-add-aug", "--add-aug"], [30, 4, 1, "cmdoption-tlt-train-add-aug", "--add_aug"], [30, 4, 1, "cmdoption-tlt-train-class-names", "--class-names"], [30, 4, 1, "cmdoption-tlt-train-class-names", "--class_names"], [30, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset-catalog"], [30, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset-dir"], [30, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset-file"], [30, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset-name"], [30, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset_catalog"], [30, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset_dir"], [30, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset_file"], [30, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset_name"], [30, 4, 1, "cmdoption-tlt-train-delimiter", "--delimiter"], [30, 4, 1, "cmdoption-tlt-train-d", "--distributed"], [30, 4, 1, "cmdoption-tlt-train-early-stopping", "--early-stopping"], [30, 4, 1, "cmdoption-tlt-train-early-stopping", "--early_stopping"], [30, 4, 1, "cmdoption-tlt-train-epochs", "--epochs"], [30, 4, 1, "cmdoption-tlt-train-f", "--framework"], [30, 4, 1, "cmdoption-tlt-train-hostfile", "--hostfile"], [30, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init-checkpoints"], [30, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init_checkpoints"], [30, 4, 1, "cmdoption-tlt-train-ipex_optimize", "--ipex-optimize"], [30, 4, 1, "cmdoption-tlt-train-ipex_optimize", "--ipex_optimize"], [30, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr-decay"], [30, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr_decay"], [30, 4, 1, "cmdoption-tlt-train-model-name", "--model-name"], [30, 4, 1, "cmdoption-tlt-train-model-name", "--model_name"], [30, 4, 1, "cmdoption-tlt-train-nnodes", "--nnodes"], [30, 4, 1, "cmdoption-tlt-train-nproc_per_node", "--nproc-per-node"], [30, 4, 1, "cmdoption-tlt-train-nproc_per_node", "--nproc_per_node"], [30, 4, 1, "cmdoption-tlt-train-output-dir", "--output-dir"], [30, 4, 1, "cmdoption-tlt-train-output-dir", "--output_dir"], [30, 4, 1, "cmdoption-tlt-train-use-horovod", "--use-horovod"], [30, 4, 1, "cmdoption-tlt-train-use-horovod", "--use_horovod"], [30, 4, 1, "cmdoption-tlt-train-d", "-d"], [30, 4, 1, "cmdoption-tlt-train-f", "-f"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "std:cmdoption"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["std", "cmdoption", "program option"]}, "titleterms": {"tlt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "dataset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 31, 33, 34, 35, 37, 39, 40, 43, 45, 48, 49, 50, 51, 52, 53, 55], "basedataset": 0, "hf_dataset": 1, "hfdataset": 1, "image_classif": [2, 3, 4, 5, 6, 15, 16, 17, 18, 19, 20, 21], "image_classification_dataset": 2, "imageclassificationdataset": 2, "pytorch_custom_image_classification_dataset": 3, "pytorchcustomimageclassificationdataset": 3, "tf_custom_image_classification_dataset": 4, "tfcustomimageclassificationdataset": 4, "tfds_image_classification_dataset": 5, "tfdsimageclassificationdataset": 5, "torchvision_image_classification_dataset": 6, "torchvisionimageclassificationdataset": 6, "pytorch_dataset": 7, "pytorchdataset": 7, "text_classif": [8, 9, 10, 11, 12, 24, 25, 26, 27], "hf_custom_text_classification_dataset": 8, "hfcustomtextclassificationdataset": 8, "hf_text_classification_dataset": 9, "hftextclassificationdataset": 9, "text_classification_dataset": 10, "textclassificationdataset": 10, "tf_custom_text_classification_dataset": 11, "tfcustomtextclassificationdataset": 11, "tfds_text_classification_dataset": 12, "tfdstextclassificationdataset": 12, "tf_dataset": 13, "tfdataset": 13, "model": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 46, 48, 49, 50, 51, 52, 53], "hf_model": 14, "hfmodel": 14, "image_classification_model": 15, "imageclassificationmodel": 15, "keras_image_classification_model": 16, "kerasimageclassificationmodel": 16, "pytorch_hub_image_classification_model": 17, "pytorchhubimageclassificationmodel": 17, "pytorch_image_classification_model": 18, "pytorchimageclassificationmodel": 18, "tf_image_classification_model": 19, "tfimageclassificationmodel": 19, "tfhub_image_classification_model": 20, "tfhubimageclassificationmodel": 20, "torchvision_image_classification_model": 21, "torchvisionimageclassificationmodel": 21, "basemodel": 22, "pytorch_model": 23, "pytorchmodel": 23, "hf_text_classification_model": 24, "hftextclassificationmodel": 24, "text_classification_model": 25, "textclassificationmodel": 25, "tf_text_classification_model": 26, "tftextclassificationmodel": 26, "tfhub_text_classification_model": 27, "tfhubtextclassificationmodel": 27, "tf_model": 28, "tfmodel": 28, "api": [29, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "refer": [29, 30], "factori": 29, "method": 29, "class": 29, "imag": [29, 33, 46, 48, 49, 50, 52], "classif": [29, 33, 34, 46, 48, 49, 50, 51, 52, 53], "text": [29, 34, 46, 51, 53], "base": 29, "cli": [30, 32, 33, 34, 35, 37, 40, 45, 55], "benchmark": 30, "eval": 30, "list": 30, "framework": 30, "use_cas": 30, "optim": 30, "quantiz": [30, 51, 52, 53], "train": [30, 52], "intel": [32, 33, 34, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], "transfer": [32, 33, 34, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], "learn": [32, 33, 34, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], "tool": [32, 33, 34, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], "exampl": [32, 33, 34, 35, 37, 40, 45, 47, 55], "us": [33, 34, 35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "your": [33, 34, 50, 51, 52, 53], "own": [33, 34, 50, 51, 52, 53], "from": [33, 34, 50, 52], "tfd": [33, 34, 53], "catalog": [33, 34, 50, 51, 52, 53], "citat": [33, 34, 48, 49, 50, 51, 52, 53], "fine": [34, 51, 53], "tune": [34, 51, 53], "distribut": 34, "hug": 34, "face": 34, "get": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "start": [35, 37, 40, 45, 55], "prepar": [35, 37, 40, 45, 48, 49, 50, 51, 52, 53, 55], "No": [35, 37, 40, 45, 55], "code": [35, 37, 40, 45, 55], "low": [35, 37, 40, 45, 55], "summari": [35, 37, 40, 45, 55], "next": [35, 37, 40, 45, 55], "step": [35, 37, 38, 40, 42, 45, 55], "tutori": [35, 37, 40, 45, 47, 55], "jupyt": [35, 37, 40, 45, 55], "notebook": [35, 37, 40, 45, 47, 55], "how": [36, 37, 41, 45, 55], "work": [36, 37, 41, 45, 55], "overview": [37, 44, 45, 54, 55], "hardwar": [37, 38, 42, 45, 55], "requir": [37, 38, 42, 45, 50, 51, 52, 53, 55], "creat": [37, 38, 42, 45, 55], "activ": [37, 38, 42, 45, 55], "python3": [37, 38, 42, 45, 55], "virtual": [37, 38, 42, 45, 55], "environ": [37, 38, 42, 45, 47, 55], "basic": [37, 38, 42, 45, 55], "instal": [37, 38, 42, 45, 47, 55], "develop": [37, 38, 42, 45, 55], "addit": [37, 38, 42, 45, 55], "featur": [37, 38, 42, 45, 55], "specif": [37, 38, 42, 45, 55], "verifi": [37, 38, 42, 45, 55], "support": [37, 45, 46, 55], "disclaim": [37, 39, 43, 45, 55], "licens": [37, 39, 43, 45, 55], "content": 37, "indic": 37, "tabl": 37, "softwar": [38, 42], "legal": [39, 43], "inform": [39, 43], "anomali": 46, "detect": 46, "end": 47, "pipelin": 47, "setup": [47, 48, 49, 50, 51, 52, 53], "run": 47, "medic": 48, "colorect": 48, "histologi": 48, "tensorflow": [48, 49, 52, 53], "1": [48, 49, 50, 51, 52, 53], "import": [48, 49, 50, 51, 52, 53], "depend": [48, 49, 50, 51, 52, 53], "paramet": [48, 49, 50, 51, 52, 53], "2": [48, 49, 50, 51, 52, 53], "option": [48, 49, 50, 51, 52, 53], "A": [48, 49, 50, 51, 52, 53], "load": [48, 49], "b": [48, 49, 50, 51, 52, 53], "pretrain": [48, 49], "checkpoint": [48, 49], "3": [48, 49, 50, 51, 52, 53], "4": [48, 49, 50, 51, 52, 53], "5": [48, 49, 50, 51, 52, 53], "6": [48, 49, 50, 51, 52, 53], "evalu": [48, 49], "7": [48, 49, 50, 51, 52, 53], "export": [48, 49, 50, 51, 52, 53], "8": [48, 49, 50, 51, 52, 53], "infer": [48, 49], "remot": 49, "sens": 49, "scene": 49, "resisc": 49, "pytorch": [50, 51], "": 50, "torchvis": 50, "predict": [50, 51, 52, 53], "origin": [50, 52], "argument": [50, 51, 52, 53], "custom": [50, 52], "singl": [50, 52], "huggingfac": 51, "save": [51, 53], "9": 52, "post": 52}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"tlt.datasets.dataset.BaseDataset": [[0, "tlt-datasets-dataset-basedataset"]], "tlt.datasets.hf_dataset.HFDataset": [[1, "tlt-datasets-hf-dataset-hfdataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[2, "tlt-datasets-image-classification-image-classification-dataset-imageclassificationdataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[3, "tlt-datasets-image-classification-pytorch-custom-image-classification-dataset-pytorchcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[4, "tlt-datasets-image-classification-tf-custom-image-classification-dataset-tfcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset": [[5, "tlt-datasets-image-classification-tfds-image-classification-dataset-tfdsimageclassificationdataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[6, "tlt-datasets-image-classification-torchvision-image-classification-dataset-torchvisionimageclassificationdataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[7, "tlt-datasets-pytorch-dataset-pytorchdataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[8, "tlt-datasets-text-classification-hf-custom-text-classification-dataset-hfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[9, "tlt-datasets-text-classification-hf-text-classification-dataset-hftextclassificationdataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[10, "tlt-datasets-text-classification-text-classification-dataset-textclassificationdataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[11, "tlt-datasets-text-classification-tf-custom-text-classification-dataset-tfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[12, "tlt-datasets-text-classification-tfds-text-classification-dataset-tfdstextclassificationdataset"]], "tlt.datasets.tf_dataset.TFDataset": [[13, "tlt-datasets-tf-dataset-tfdataset"]], "tlt.models.hf_model.HFModel": [[14, "tlt-models-hf-model-hfmodel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[15, "tlt-models-image-classification-image-classification-model-imageclassificationmodel"]], "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel": [[16, "tlt-models-image-classification-keras-image-classification-model-kerasimageclassificationmodel"]], "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel": [[17, "tlt-models-image-classification-pytorch-hub-image-classification-model-pytorchhubimageclassificationmodel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[18, "tlt-models-image-classification-pytorch-image-classification-model-pytorchimageclassificationmodel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[19, "tlt-models-image-classification-tf-image-classification-model-tfimageclassificationmodel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[20, "tlt-models-image-classification-tfhub-image-classification-model-tfhubimageclassificationmodel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[21, "tlt-models-image-classification-torchvision-image-classification-model-torchvisionimageclassificationmodel"]], "tlt.models.model.BaseModel": [[22, "tlt-models-model-basemodel"]], "tlt.models.pytorch_model.PyTorchModel": [[23, "tlt-models-pytorch-model-pytorchmodel"]], "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel": [[24, "tlt-models-text-classification-hf-text-classification-model-hftextclassificationmodel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[25, "tlt-models-text-classification-text-classification-model-textclassificationmodel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[26, "tlt-models-text-classification-tf-text-classification-model-tftextclassificationmodel"]], "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel": [[27, "tlt-models-text-classification-tfhub-text-classification-model-tfhubtextclassificationmodel"]], "tlt.models.tf_model.TFModel": [[28, "tlt-models-tf-model-tfmodel"]], "API Reference": [[29, "api-reference"]], "Datasets": [[29, "datasets"], [31, "datasets"], [39, "datasets"], [43, "datasets"]], "Factory Methods": [[29, "module-tlt.datasets.dataset_factory"], [29, "id1"]], "Class Reference": [[29, "class-reference"], [29, "id2"]], "Image Classification": [[29, "image-classification"], [29, "id3"], [46, "image-classification"]], "Text Classification": [[29, "text-classification"], [29, "id4"], [46, "text-classification"]], "Base Classes": [[29, "base-classes"], [29, "id5"]], "Models": [[29, "models"]], "CLI Reference": [[30, "cli-reference"]], "tlt": [[30, "tlt"]], "benchmark": [[30, "tlt-benchmark"]], "eval": [[30, "tlt-eval"]], "list": [[30, "tlt-list"]], "frameworks": [[30, "tlt-list-frameworks"]], "models": [[30, "tlt-list-models"]], "use_cases": [[30, "tlt-list-use-cases"]], "optimize": [[30, "tlt-optimize"]], "quantize": [[30, "tlt-quantize"]], "train": [[30, "tlt-train"]], "Intel\u00ae Transfer Learning Tool CLI Examples": [[32, "intel-transfer-learning-tool-cli-examples"]], "Image Classification Intel\u00ae Transfer Learning Tool CLI Examples": [[33, "image-classification-intel-transfer-learning-tool-cli-examples"]], "Transfer learning using your own dataset": [[33, "transfer-learning-using-your-own-dataset"]], "Transfer learning using a dataset from the TFDS catalog": [[33, "transfer-learning-using-a-dataset-from-the-tfds-catalog"]], "Citations": [[33, "citations"], [34, "citations"], [51, "Citations"], [53, "Citations"]], "Text Classification Intel Transfer Learning Tool CLI Examples": [[34, "text-classification-intel-transfer-learning-tool-cli-examples"]], "Fine tuning using your own dataset": [[34, "fine-tuning-using-your-own-dataset"]], "Fine tuning using a dataset from the TFDS catalog": [[34, "fine-tuning-using-a-dataset-from-the-tfds-catalog"]], "Distributed transfer learning using a dataset from Hugging Face": [[34, "distributed-transfer-learning-using-a-dataset-from-hugging-face"]], "Get Started": [[35, "get-started"], [37, "get-started"], [40, "get-started"], [45, "get-started"], [55, "get-started"]], "Prepare the Dataset": [[35, "prepare-the-dataset"], [37, "prepare-the-dataset"], [40, "prepare-the-dataset"], [45, "prepare-the-dataset"], [55, "prepare-the-dataset"]], "Use the No-code CLI": [[35, "use-the-no-code-cli"], [37, "use-the-no-code-cli"], [40, "use-the-no-code-cli"], [45, "use-the-no-code-cli"], [55, "use-the-no-code-cli"]], "Use the Low-code API": [[35, "use-the-low-code-api"], [37, "use-the-low-code-api"], [40, "use-the-low-code-api"], [45, "use-the-low-code-api"], [55, "use-the-low-code-api"]], "Summary and Next Steps": [[35, "summary-and-next-steps"], [37, "summary-and-next-steps"], [40, "summary-and-next-steps"], [45, "summary-and-next-steps"], [55, "summary-and-next-steps"]], "Tutorial Jupyter* Notebooks": [[35, "tutorial-jupyter-notebooks"], [37, "tutorial-jupyter-notebooks"], [40, "tutorial-jupyter-notebooks"], [45, "tutorial-jupyter-notebooks"], [55, "tutorial-jupyter-notebooks"]], "Examples": [[35, "examples"], [37, "examples"], [40, "examples"], [45, "examples"], [55, "examples"]], "How it Works": [[36, "how-it-works"], [37, "how-it-works"], [41, "how-it-works"], [45, "how-it-works"], [55, "how-it-works"]], "Intel\u00ae Transfer Learning Tool": [[37, "intel-transfer-learning-tool"], [37, "intel-transfer-learning-tool"], [45, "intel-transfer-learning-tool"], [55, "intel-transfer-learning-tool"]], "Overview": [[37, "overview"], [44, "overview"], [45, "overview"], [54, "overview"], [55, "overview"]], "Hardware Requirements": [[37, "hardware-requirements"], [38, "hardware-requirements"], [42, "hardware-requirements"], [45, "hardware-requirements"], [55, "hardware-requirements"]], "Requirements": [[37, "requirements"], [45, "requirements"], [55, "requirements"]], "Create and activate a Python3 virtual environment": [[37, "create-and-activate-a-python3-virtual-environment"], [38, "create-and-activate-a-python3-virtual-environment"], [42, "create-and-activate-a-python3-virtual-environment"], [45, "create-and-activate-a-python3-virtual-environment"], [55, "create-and-activate-a-python3-virtual-environment"]], "Basic Installation": [[37, "basic-installation"], [38, "basic-installation"], [42, "basic-installation"], [45, "basic-installation"], [55, "basic-installation"]], "Developer Installation": [[37, "developer-installation"], [38, "developer-installation"], [42, "developer-installation"], [45, "developer-installation"], [55, "developer-installation"]], "Additional Feature-Specific Steps:": [[37, "additional-feature-specific-steps"], [38, "additional-feature-specific-steps"], [42, "additional-feature-specific-steps"], [45, "additional-feature-specific-steps"], [55, "additional-feature-specific-steps"]], "Verify Installation": [[37, "verify-installation"], [38, "verify-installation"], [42, "verify-installation"], [45, "verify-installation"], [55, "verify-installation"]], "Support": [[37, "support"], [45, "support"], [55, "support"]], "DISCLAIMER:": [[37, "disclaimer"], [45, "disclaimer"], [55, "disclaimer"]], "License:": [[37, "license"], [45, "license"], [55, "license"]], "Datasets:": [[37, "datasets"], [45, "datasets"], [55, "datasets"]], "Contents": [[37, null]], "Indices and tables": [[37, "indices-and-tables"]], "Installation": [[38, "installation"], [42, "installation"]], "Software Requirements": [[38, "software-requirements"], [42, "software-requirements"]], "Legal Information": [[39, "legal-information"], [43, "legal-information"]], "Disclaimer": [[39, "disclaimer"], [43, "disclaimer"]], "License": [[39, "license"], [43, "license"]], "Intel\u00ae Transfer Learning Tool Supported Models": [[46, "intel-transfer-learning-tool-supported-models"]], "Image Anomaly Detection": [[46, "image-anomaly-detection"]], "Example Notebooks": [[47, "example-notebooks"]], "Transfer Learning Tool Tutorial Notebooks": [[47, "id1"]], "Transfer Learning Tool End-to-End Pipelines": [[47, "id2"]], "Environment Setup and Running the Notebooks": [[47, "environment-setup-and-running-the-notebooks"]], "Install Intel\u00ae Transfer Learning Tool": [[47, "install-intel-transfer-learning-tool"]], "Notebook Environment": [[47, "notebook-environment"]], "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[48, "Medical-Imaging-Classification-(Colorectal-histology)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "1. Import dependencies and setup parameters": [[48, "1.-Import-dependencies-and-setup-parameters"], [49, "1.-Import-dependencies-and-setup-parameters"], [50, "1.-Import-dependencies-and-setup-parameters"], [51, "1.-Import-dependencies-and-setup-parameters"], [52, "1.-Import-dependencies-and-setup-parameters"], [53, "1.-Import-dependencies-and-setup-parameters"]], "2. Get the model": [[48, "2.-Get-the-model"], [49, "2.-Get-the-model"], [50, "2.-Get-the-model"], [51, "2.-Get-the-model"], [52, "2.-Get-the-model"], [53, "2.-Get-the-model"]], "Option A: Load a model": [[48, "Option-A:-Load-a-model"], [49, "Option-A:-Load-a-model"]], "Option B: Load a pretrained checkpoint": [[48, "Option-B:-Load-a-pretrained-checkpoint"], [49, "Option-B:-Load-a-pretrained-checkpoint"]], "3. Get the dataset": [[48, "3.-Get-the-dataset"], [49, "3.-Get-the-dataset"], [50, "3.-Get-the-dataset"], [51, "3.-Get-the-dataset"], [52, "3.-Get-the-dataset"], [53, "3.-Get-the-dataset"]], "4. Prepare the dataset": [[48, "4.-Prepare-the-dataset"], [49, "4.-Prepare-the-dataset"], [50, "4.-Prepare-the-dataset"], [51, "4.-Prepare-the-dataset"], [52, "4.-Prepare-the-dataset"], [53, "4.-Prepare-the-dataset"]], "5. Transfer Learning": [[48, "5.-Transfer-Learning"], [49, "5.-Transfer-Learning"]], "6. Evaluate": [[48, "6.-Evaluate"], [49, "6.-Evaluate"]], "7. Export": [[48, "7.-Export"], [49, "7.-Export"]], "8. Inference": [[48, "8.-Inference"], [49, "8.-Inference"]], "Dataset Citations": [[48, "Dataset-Citations"], [49, "Dataset-Citations"], [50, "Dataset-Citations"], [52, "Dataset-Citations"]], "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[49, "Remote-Sensing-Image-Scene-Classification-(Resisc)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API": [[50, "Transfer-Learning-for-Image-Classification-using-PyTorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option A: Use your own dataset": [[50, "Option-A:-Use-your-own-dataset"], [51, "Option-A:-Use-your-own-dataset"], [52, "Option-A:-Use-your-own-dataset"], [53, "Option-A:-Use-your-own-dataset"]], "Option B: Use a dataset from the PyTorch\u2019s Torchvision Datasets catalog": [[50, "Option-B:-Use-a-dataset-from-the-PyTorch's-Torchvision-Datasets-catalog"]], "5. Predict using the original model": [[50, "5.-Predict-using-the-original-model"], [52, "5.-Predict-using-the-original-model"]], "6. Transfer Learning": [[50, "6.-Transfer-Learning"], [52, "6.-Transfer-Learning"]], "Arguments": [[50, "Arguments"], [51, "Arguments"], [52, "Arguments"], [53, "Arguments"]], "Required": [[50, "Required"], [51, "Required"], [52, "Required"], [53, "Required"]], "Optional": [[50, "Optional"], [51, "Optional"], [52, "Optional"], [53, "Optional"]], "7. Predict": [[50, "7.-Predict"], [52, "7.-Predict"]], "Custom Single Image Prediction": [[50, "Custom-Single-Image-Prediction"], [52, "Custom-Single-Image-Prediction"]], "8. Export": [[50, "8.-Export"], [52, "8.-Export"]], "Text Classification fine tuning using Pytorch and the Intel\u00ae Transfer Learning Tool API": [[51, "Text-Classification-fine-tuning-using-Pytorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the HuggingFace catalog": [[51, "Option-B:-Use-the-HuggingFace-catalog"]], "5. Fine tuning": [[51, "5.-Fine-tuning"], [53, "5.-Fine-tuning"]], "6. Predict": [[51, "6.-Predict"], [53, "6.-Predict"]], "Predict on Text": [[51, "Predict-on-Text"]], "7. Export the saved model": [[51, "7.-Export-the-saved-model"], [53, "7.-Export-the-saved-model"]], "8. Quantization": [[51, "8.-Quantization"], [53, "8.-Quantization"]], "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[52, "Transfer-Learning-for-Image-Classification-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use a dataset from the TensorFlow Datasets catalog": [[52, "Option-B:-Use-a-dataset-from-the-TensorFlow-Datasets-catalog"]], "9. Post-training quantization": [[52, "9.-Post-training-quantization"]], "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[53, "Text-Classification-fine-tuning-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the TFDS catalog": [[53, "Option-B:-Use-the-TFDS-catalog"]]}, "indexentries": {"basedataset (class in tlt.datasets.dataset)": [[0, "tlt.datasets.dataset.BaseDataset"]], "__init__() (tlt.datasets.dataset.basedataset method)": [[0, "tlt.datasets.dataset.BaseDataset.__init__"]], "hfdataset (class in tlt.datasets.hf_dataset)": [[1, "tlt.datasets.hf_dataset.HFDataset"]], "__init__() (tlt.datasets.hf_dataset.hfdataset method)": [[1, "tlt.datasets.hf_dataset.HFDataset.__init__"]], "imageclassificationdataset (class in tlt.datasets.image_classification.image_classification_dataset)": [[2, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.image_classification_dataset.imageclassificationdataset method)": [[2, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.__init__"]], "pytorchcustomimageclassificationdataset (class in tlt.datasets.image_classification.pytorch_custom_image_classification_dataset)": [[3, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.pytorchcustomimageclassificationdataset method)": [[3, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.__init__"]], "tfcustomimageclassificationdataset (class in tlt.datasets.image_classification.tf_custom_image_classification_dataset)": [[4, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tf_custom_image_classification_dataset.tfcustomimageclassificationdataset method)": [[4, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.__init__"]], "tfdsimageclassificationdataset (class in tlt.datasets.image_classification.tfds_image_classification_dataset)": [[5, "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tfds_image_classification_dataset.tfdsimageclassificationdataset method)": [[5, "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset.__init__"]], "torchvisionimageclassificationdataset (class in tlt.datasets.image_classification.torchvision_image_classification_dataset)": [[6, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.torchvision_image_classification_dataset.torchvisionimageclassificationdataset method)": [[6, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.__init__"]], "pytorchdataset (class in tlt.datasets.pytorch_dataset)": [[7, "tlt.datasets.pytorch_dataset.PyTorchDataset"]], "__init__() (tlt.datasets.pytorch_dataset.pytorchdataset method)": [[7, "tlt.datasets.pytorch_dataset.PyTorchDataset.__init__"]], "hfcustomtextclassificationdataset (class in tlt.datasets.text_classification.hf_custom_text_classification_dataset)": [[8, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_custom_text_classification_dataset.hfcustomtextclassificationdataset method)": [[8, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.__init__"]], "hftextclassificationdataset (class in tlt.datasets.text_classification.hf_text_classification_dataset)": [[9, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_text_classification_dataset.hftextclassificationdataset method)": [[9, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.__init__"]], "textclassificationdataset (class in tlt.datasets.text_classification.text_classification_dataset)": [[10, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.text_classification_dataset.textclassificationdataset method)": [[10, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.__init__"]], "tfcustomtextclassificationdataset (class in tlt.datasets.text_classification.tf_custom_text_classification_dataset)": [[11, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tf_custom_text_classification_dataset.tfcustomtextclassificationdataset method)": [[11, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.__init__"]], "tfdstextclassificationdataset (class in tlt.datasets.text_classification.tfds_text_classification_dataset)": [[12, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tfds_text_classification_dataset.tfdstextclassificationdataset method)": [[12, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.__init__"]], "tfdataset (class in tlt.datasets.tf_dataset)": [[13, "tlt.datasets.tf_dataset.TFDataset"]], "__init__() (tlt.datasets.tf_dataset.tfdataset method)": [[13, "tlt.datasets.tf_dataset.TFDataset.__init__"]], "hfmodel (class in tlt.models.hf_model)": [[14, "tlt.models.hf_model.HFModel"]], "__init__() (tlt.models.hf_model.hfmodel method)": [[14, "tlt.models.hf_model.HFModel.__init__"]], "imageclassificationmodel (class in tlt.models.image_classification.image_classification_model)": [[15, "tlt.models.image_classification.image_classification_model.ImageClassificationModel"]], "__init__() (tlt.models.image_classification.image_classification_model.imageclassificationmodel method)": [[15, "tlt.models.image_classification.image_classification_model.ImageClassificationModel.__init__"]], "kerasimageclassificationmodel (class in tlt.models.image_classification.keras_image_classification_model)": [[16, "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel"]], "__init__() (tlt.models.image_classification.keras_image_classification_model.kerasimageclassificationmodel method)": [[16, "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel.__init__"]], "pytorchhubimageclassificationmodel (class in tlt.models.image_classification.pytorch_hub_image_classification_model)": [[17, "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel"]], "__init__() (tlt.models.image_classification.pytorch_hub_image_classification_model.pytorchhubimageclassificationmodel method)": [[17, "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel.__init__"]], "pytorchimageclassificationmodel (class in tlt.models.image_classification.pytorch_image_classification_model)": [[18, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel"]], "__init__() (tlt.models.image_classification.pytorch_image_classification_model.pytorchimageclassificationmodel method)": [[18, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.__init__"]], "tfimageclassificationmodel (class in tlt.models.image_classification.tf_image_classification_model)": [[19, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel"]], "__init__() (tlt.models.image_classification.tf_image_classification_model.tfimageclassificationmodel method)": [[19, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.__init__"]], "tfhubimageclassificationmodel (class in tlt.models.image_classification.tfhub_image_classification_model)": [[20, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel"]], "__init__() (tlt.models.image_classification.tfhub_image_classification_model.tfhubimageclassificationmodel method)": [[20, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.__init__"]], "torchvisionimageclassificationmodel (class in tlt.models.image_classification.torchvision_image_classification_model)": [[21, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel"]], "__init__() (tlt.models.image_classification.torchvision_image_classification_model.torchvisionimageclassificationmodel method)": [[21, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.__init__"]], "basemodel (class in tlt.models.model)": [[22, "tlt.models.model.BaseModel"]], "__init__() (tlt.models.model.basemodel method)": [[22, "tlt.models.model.BaseModel.__init__"]], "pytorchmodel (class in tlt.models.pytorch_model)": [[23, "tlt.models.pytorch_model.PyTorchModel"]], "__init__() (tlt.models.pytorch_model.pytorchmodel method)": [[23, "tlt.models.pytorch_model.PyTorchModel.__init__"]], "hftextclassificationmodel (class in tlt.models.text_classification.hf_text_classification_model)": [[24, "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel"]], "__init__() (tlt.models.text_classification.hf_text_classification_model.hftextclassificationmodel method)": [[24, "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel.__init__"]], "textclassificationmodel (class in tlt.models.text_classification.text_classification_model)": [[25, "tlt.models.text_classification.text_classification_model.TextClassificationModel"]], "__init__() (tlt.models.text_classification.text_classification_model.textclassificationmodel method)": [[25, "tlt.models.text_classification.text_classification_model.TextClassificationModel.__init__"]], "tftextclassificationmodel (class in tlt.models.text_classification.tf_text_classification_model)": [[26, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel"]], "__init__() (tlt.models.text_classification.tf_text_classification_model.tftextclassificationmodel method)": [[26, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.__init__"]], "tfhubtextclassificationmodel (class in tlt.models.text_classification.tfhub_text_classification_model)": [[27, "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel"]], "__init__() (tlt.models.text_classification.tfhub_text_classification_model.tfhubtextclassificationmodel method)": [[27, "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel.__init__"]], "tfmodel (class in tlt.models.tf_model)": [[28, "tlt.models.tf_model.TFModel"]], "__init__() (tlt.models.tf_model.tfmodel method)": [[28, "tlt.models.tf_model.TFModel.__init__"]], "get_dataset() (in module tlt.datasets.dataset_factory)": [[29, "tlt.datasets.dataset_factory.get_dataset"]], "get_model() (in module tlt.models.model_factory)": [[29, "tlt.models.model_factory.get_model"]], "get_supported_models() (in module tlt.models.model_factory)": [[29, "tlt.models.model_factory.get_supported_models"]], "load_dataset() (in module tlt.datasets.dataset_factory)": [[29, "tlt.datasets.dataset_factory.load_dataset"]], "load_model() (in module tlt.models.model_factory)": [[29, "tlt.models.model_factory.load_model"]], "module": [[29, "module-tlt.datasets.dataset_factory"], [29, "module-tlt.models.model_factory"]], "print_supported_models() (in module tlt.models.model_factory)": [[29, "tlt.models.model_factory.print_supported_models"]], "tlt.datasets.dataset_factory": [[29, "module-tlt.datasets.dataset_factory"]], "tlt.models.model_factory": [[29, "module-tlt.models.model_factory"]], "--accuracy-criterion": [[30, "cmdoption-tlt-quantize-accuracy-criterion"]], "--accuracy_criterion": [[30, "cmdoption-tlt-quantize-accuracy-criterion"]], "--add-aug": [[30, "cmdoption-tlt-train-add-aug"]], "--add_aug": [[30, "cmdoption-tlt-train-add-aug"]], "--batch-size": [[30, "cmdoption-tlt-benchmark-batch-size"], [30, "cmdoption-tlt-quantize-batch-size"]], "--batch_size": [[30, "cmdoption-tlt-benchmark-batch-size"], [30, "cmdoption-tlt-quantize-batch-size"]], "--class-names": [[30, "cmdoption-tlt-eval-class-names"], [30, "cmdoption-tlt-train-class-names"]], "--class_names": [[30, "cmdoption-tlt-eval-class-names"], [30, "cmdoption-tlt-train-class-names"]], "--dataset-catalog": [[30, "cmdoption-tlt-eval-dataset-catalog"], [30, "cmdoption-tlt-train-dataset-catalog"]], "--dataset-dir": [[30, "cmdoption-tlt-benchmark-dataset-dir"], [30, "cmdoption-tlt-eval-dataset-dir"], [30, "cmdoption-tlt-quantize-dataset-dir"], [30, "cmdoption-tlt-train-dataset-dir"]], "--dataset-file": [[30, "cmdoption-tlt-eval-dataset-file"], [30, "cmdoption-tlt-train-dataset-file"]], "--dataset-name": [[30, "cmdoption-tlt-eval-dataset-name"], [30, "cmdoption-tlt-train-dataset-name"]], "--dataset_catalog": [[30, "cmdoption-tlt-eval-dataset-catalog"], [30, "cmdoption-tlt-train-dataset-catalog"]], "--dataset_dir": [[30, "cmdoption-tlt-benchmark-dataset-dir"], [30, "cmdoption-tlt-eval-dataset-dir"], [30, "cmdoption-tlt-quantize-dataset-dir"], [30, "cmdoption-tlt-train-dataset-dir"]], "--dataset_file": [[30, "cmdoption-tlt-eval-dataset-file"], [30, "cmdoption-tlt-train-dataset-file"]], "--dataset_name": [[30, "cmdoption-tlt-eval-dataset-name"], [30, "cmdoption-tlt-train-dataset-name"]], "--delimiter": [[30, "cmdoption-tlt-eval-delimiter"], [30, "cmdoption-tlt-train-delimiter"]], "--distributed": [[30, "cmdoption-tlt-train-d"]], "--early-stopping": [[30, "cmdoption-tlt-train-early-stopping"]], "--early_stopping": [[30, "cmdoption-tlt-train-early-stopping"]], "--epochs": [[30, "cmdoption-tlt-train-epochs"]], "--framework": [[30, "cmdoption-tlt-list-models-f"], [30, "cmdoption-tlt-train-f"]], "--hostfile": [[30, "cmdoption-tlt-train-hostfile"]], "--inc-config": [[30, "cmdoption-tlt-benchmark-inc-config"], [30, "cmdoption-tlt-quantize-inc-config"]], "--inc_config": [[30, "cmdoption-tlt-benchmark-inc-config"], [30, "cmdoption-tlt-quantize-inc-config"]], "--init-checkpoints": [[30, "cmdoption-tlt-train-init-checkpoints"]], "--init_checkpoints": [[30, "cmdoption-tlt-train-init-checkpoints"]], "--ipex-optimize": [[30, "cmdoption-tlt-train-ipex_optimize"]], "--ipex_optimize": [[30, "cmdoption-tlt-train-ipex_optimize"]], "--lr-decay": [[30, "cmdoption-tlt-train-lr-decay"]], "--lr_decay": [[30, "cmdoption-tlt-train-lr-decay"]], "--max-trials": [[30, "cmdoption-tlt-quantize-max-trials"]], "--max_trials": [[30, "cmdoption-tlt-quantize-max-trials"]], "--mode": [[30, "cmdoption-tlt-benchmark-mode"]], "--model-dir": [[30, "cmdoption-tlt-benchmark-model-dir"], [30, "cmdoption-tlt-eval-model-dir"], [30, "cmdoption-tlt-optimize-model-dir"], [30, "cmdoption-tlt-quantize-model-dir"]], "--model-name": [[30, "cmdoption-tlt-eval-model-name"], [30, "cmdoption-tlt-train-model-name"]], "--model_dir": [[30, "cmdoption-tlt-benchmark-model-dir"], [30, "cmdoption-tlt-eval-model-dir"], [30, "cmdoption-tlt-optimize-model-dir"], [30, "cmdoption-tlt-quantize-model-dir"]], "--model_name": [[30, "cmdoption-tlt-eval-model-name"], [30, "cmdoption-tlt-train-model-name"]], "--nnodes": [[30, "cmdoption-tlt-train-nnodes"]], "--nproc-per-node": [[30, "cmdoption-tlt-train-nproc_per_node"]], "--nproc_per_node": [[30, "cmdoption-tlt-train-nproc_per_node"]], "--output-dir": [[30, "cmdoption-tlt-benchmark-output-dir"], [30, "cmdoption-tlt-optimize-output-dir"], [30, "cmdoption-tlt-quantize-output-dir"], [30, "cmdoption-tlt-train-output-dir"]], "--output_dir": [[30, "cmdoption-tlt-benchmark-output-dir"], [30, "cmdoption-tlt-optimize-output-dir"], [30, "cmdoption-tlt-quantize-output-dir"], [30, "cmdoption-tlt-train-output-dir"]], "--timeout": [[30, "cmdoption-tlt-quantize-timeout"]], "--use-case": [[30, "cmdoption-tlt-list-models-use-case"]], "--use-horovod": [[30, "cmdoption-tlt-train-use-horovod"]], "--use_case": [[30, "cmdoption-tlt-list-models-use-case"]], "--use_horovod": [[30, "cmdoption-tlt-train-use-horovod"]], "--verbose": [[30, "cmdoption-tlt-list-models-verbose"]], "-d": [[30, "cmdoption-tlt-train-d"]], "-f": [[30, "cmdoption-tlt-list-models-f"], [30, "cmdoption-tlt-train-f"]], "tlt-benchmark command line option": [[30, "cmdoption-tlt-benchmark-batch-size"], [30, "cmdoption-tlt-benchmark-dataset-dir"], [30, "cmdoption-tlt-benchmark-inc-config"], [30, "cmdoption-tlt-benchmark-mode"], [30, "cmdoption-tlt-benchmark-model-dir"], [30, "cmdoption-tlt-benchmark-output-dir"]], "tlt-eval command line option": [[30, "cmdoption-tlt-eval-class-names"], [30, "cmdoption-tlt-eval-dataset-catalog"], [30, "cmdoption-tlt-eval-dataset-dir"], [30, "cmdoption-tlt-eval-dataset-file"], [30, "cmdoption-tlt-eval-dataset-name"], [30, "cmdoption-tlt-eval-delimiter"], [30, "cmdoption-tlt-eval-model-dir"], [30, "cmdoption-tlt-eval-model-name"]], "tlt-list-models command line option": [[30, "cmdoption-tlt-list-models-f"], [30, "cmdoption-tlt-list-models-use-case"], [30, "cmdoption-tlt-list-models-verbose"]], "tlt-optimize command line option": [[30, "cmdoption-tlt-optimize-model-dir"], [30, "cmdoption-tlt-optimize-output-dir"]], "tlt-quantize command line option": [[30, "cmdoption-tlt-quantize-accuracy-criterion"], [30, "cmdoption-tlt-quantize-batch-size"], [30, "cmdoption-tlt-quantize-dataset-dir"], [30, "cmdoption-tlt-quantize-inc-config"], [30, "cmdoption-tlt-quantize-max-trials"], [30, "cmdoption-tlt-quantize-model-dir"], [30, "cmdoption-tlt-quantize-output-dir"], [30, "cmdoption-tlt-quantize-timeout"]], "tlt-train command line option": [[30, "cmdoption-tlt-train-add-aug"], [30, "cmdoption-tlt-train-class-names"], [30, "cmdoption-tlt-train-d"], [30, "cmdoption-tlt-train-dataset-catalog"], [30, "cmdoption-tlt-train-dataset-dir"], [30, "cmdoption-tlt-train-dataset-file"], [30, "cmdoption-tlt-train-dataset-name"], [30, "cmdoption-tlt-train-delimiter"], [30, "cmdoption-tlt-train-early-stopping"], [30, "cmdoption-tlt-train-epochs"], [30, "cmdoption-tlt-train-f"], [30, "cmdoption-tlt-train-hostfile"], [30, "cmdoption-tlt-train-init-checkpoints"], [30, "cmdoption-tlt-train-ipex_optimize"], [30, "cmdoption-tlt-train-lr-decay"], [30, "cmdoption-tlt-train-model-name"], [30, "cmdoption-tlt-train-nnodes"], [30, "cmdoption-tlt-train-nproc_per_node"], [30, "cmdoption-tlt-train-output-dir"], [30, "cmdoption-tlt-train-use-horovod"]]}})