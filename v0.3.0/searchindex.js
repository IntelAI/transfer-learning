Search.setIndex({"docnames": ["DEVCATALOG", "_autosummary/tlt.datasets.dataset.BaseDataset", "_autosummary/tlt.datasets.hf_dataset.HFDataset", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "_autosummary/tlt.datasets.tf_dataset.TFDataset", "_autosummary/tlt.models.hf_model.HFModel", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "_autosummary/tlt.models.model.BaseModel", "_autosummary/tlt.models.pytorch_model.PyTorchModel", "_autosummary/tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "_autosummary/tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel", "_autosummary/tlt.models.tf_model.TFModel", "api", "cli", "examples/cli/image_classification", "examples/cli/text_classification", "index", "notebooks", "notebooks/Medical_Imaging_Classification", "notebooks/Remote_Sensing_Image_Scene_Classification", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning", "notebooks/TLT_PyTorch_Text_Classification_Transfer_Learning", "notebooks/TLT_TF_Image_Classification_Transfer_Learning", "notebooks/TLT_TF_Text_Classification_Transfer_Learning", "quickstart"], "filenames": ["DEVCATALOG.md", "_autosummary/tlt.datasets.dataset.BaseDataset.rst", "_autosummary/tlt.datasets.hf_dataset.HFDataset.rst", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.rst", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.rst", "_autosummary/tlt.datasets.tf_dataset.TFDataset.rst", "_autosummary/tlt.models.hf_model.HFModel.rst", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.rst", "_autosummary/tlt.models.model.BaseModel.rst", "_autosummary/tlt.models.pytorch_model.PyTorchModel.rst", "_autosummary/tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel.rst", "_autosummary/tlt.models.tf_model.TFModel.rst", "api.rst", "cli.rst", "examples/cli/image_classification.rst", "examples/cli/text_classification.rst", "index.rst", "notebooks.rst", "notebooks/Medical_Imaging_Classification.nblink", "notebooks/Remote_Sensing_Image_Scene_Classification.nblink", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_PyTorch_Text_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Text_Classification_Transfer_Learning.nblink", "quickstart.rst"], "titles": ["Intel\u00ae Transfer Learning Tool", "tlt.datasets.dataset.BaseDataset", "tlt.datasets.hf_dataset.HFDataset", "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset", "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "tlt.datasets.pytorch_dataset.PyTorchDataset", "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "tlt.datasets.tf_dataset.TFDataset", "tlt.models.hf_model.HFModel", "tlt.models.image_classification.image_classification_model.ImageClassificationModel", "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "tlt.models.model.BaseModel", "tlt.models.pytorch_model.PyTorchModel", "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel", "tlt.models.text_classification.text_classification_model.TextClassificationModel", "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel", "tlt.models.tf_model.TFModel", "API Reference", "CLI Reference", "Image Classification Intel\u00ae Transfer Learning Tool CLI Examples", "Text Classification Intel Transfer Learning Tool CLI Examples", "Intel\u00ae Transfer Learning Tool", "Example Notebooks", "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using Pytorch and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Intel\u00ae Transfer Learning Tool Quick Start"], "terms": {"workflow": [0, 32, 34, 35], "knowledg": [0, 34, 35], "pre": 0, "train": [0, 1, 6, 7, 10, 13, 30, 31, 34, 35, 36, 37, 39, 40], "model": [0, 4, 5, 9, 12, 30, 31, 33, 40], "larg": [0, 31, 32, 36, 38], "dataset": [0, 29, 33], "improv": 0, "perform": [0, 29, 34, 35, 37, 38, 39, 40], "relat": [0, 40], "problem": 0, "smaller": 0, "make": [0, 31, 32, 34, 35, 37, 38, 39, 40], "easier": [0, 32], "faster": [0, 34, 35, 37, 38, 39], "across": [0, 9, 12], "varieti": [0, 32, 36], "ai": [0, 32, 40], "case": [0, 28, 29, 32, 33, 36, 37, 38, 39, 40], "thi": [0, 9, 12, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "open": [0, 34, 35, 36, 37, 38], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 40], "python": [0, 33, 40], "librari": [0, 36, 37, 38, 39], "leverag": 0, "public": [0, 32, 36, 38, 40], "pretrain": [0, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 36, 37, 38, 39], "hub": [0, 19, 26, 32, 34, 35, 38, 39], "optim": [0, 17, 18, 23, 25, 28, 32, 37, 38, 40], "deep": [0, 29, 31], "framework": [0, 15, 16, 21, 22, 24, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40], "your": [0, 33, 34, 35, 40], "custom": [0, 4, 5, 9, 12, 18, 28, 29, 34, 35, 37, 40], "effici": 0, "gener": [0, 29, 34, 35, 36, 37, 38, 39, 40], "new": [0, 30, 31, 33, 34, 35, 36, 37, 38, 39], "document": [0, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39], "provid": [0, 9, 12, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40], "inform": [0, 28, 29, 34, 35, 36, 37, 38, 39, 40], "link": [0, 34, 35, 37, 38, 39], "instruct": [0, 31, 33, 36, 37, 38, 39, 40], "well": [0, 37, 39], "demonstr": [0, 31, 36, 38], "its": 0, "usag": 0, "The": [0, 4, 5, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39], "offer": 0, "both": [0, 34, 35, 37, 38, 39], "low": [0, 32, 37, 38], "code": [0, 32, 40], "tensorflow": [0, 5, 6, 12, 13, 28, 29, 30, 31, 32, 33, 36, 40], "pytorch": [0, 4, 8, 17, 22, 28, 29, 31, 32, 33, 40], "featur": [0, 34, 35, 36, 37, 38], "over": [0, 31, 37, 38], "100": 0, "imag": [0, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 32, 33, 39, 40], "classif": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 32, 33, 40], "text": [0, 9, 10, 11, 12, 13, 23, 24, 25, 26, 29, 32, 33, 40], "from": [0, 6, 7, 9, 10, 12, 13, 28, 29, 32, 33, 34, 35, 37, 39, 40], "torchvis": [0, 7, 20, 28, 29, 32, 40], "hug": [0, 2, 10, 15, 23, 28, 32, 37, 40], "face": [0, 2, 10, 15, 23, 28, 32, 37, 40], "automat": [0, 34, 35, 37, 38, 39], "creat": [0, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "trainabl": [0, 40], "layer": [0, 28, 34, 35, 36, 37, 38, 39, 40], "bring": 0, "own": [0, 40], "quickli": 0, "built": 0, "scale": [0, 36, 38], "crop": 0, "batch": [0, 29, 34, 35, 36, 37, 38, 39, 40], "split": [0, 6, 7, 10, 13, 34, 35, 36, 37, 38, 39], "predict": [0, 34, 35], "evalu": [0, 1, 29, 30, 31, 36, 37, 38, 39, 40], "benchmark": [0, 31, 35, 37, 38, 39, 40], "export": [0, 29, 30, 31, 33, 40], "deploy": 0, "resum": [0, 29], "checkpoint": [0, 29, 36, 37, 38, 39, 40], "boost": 0, "extens": [0, 29, 37, 40], "quantiz": [0, 40], "int8": [0, 40], "reduc": 0, "size": [0, 29, 34, 35, 36, 37, 38, 39, 40], "speed": 0, "up": [0, 31, 34, 35, 36, 37, 38, 39], "infer": [0, 9, 37, 38, 40], "neural": [0, 29, 37, 38, 40], "compressor": [0, 29, 37, 38, 40], "fp32": [0, 40], "time": [0, 29, 34, 35, 36, 37, 38, 39, 40], "auto": [0, 34, 35, 37, 38, 39, 40], "mix": [0, 34, 35, 37, 38, 39, 40], "precis": [0, 34, 35, 37, 38, 39, 40], "select": [0, 34, 35, 36, 38, 39], "platform": [0, 31, 34, 35, 37, 38, 39, 40], "further": [0, 28], "multinod": [0, 40], "For": [0, 9, 12, 29, 36, 37, 38, 39, 40], "more": [0, 9, 12, 31, 34, 35, 36, 37, 38, 39, 40], "detail": [0, 35, 40], "visit": [0, 40], "github": [0, 29, 33, 36, 38, 40], "repositori": [0, 31, 33, 37, 39], "recommend": [0, 34, 35, 37, 38, 39], "4th": 0, "gen": 0, "xeon": [0, 34, 35, 37, 38, 39, 40], "scalabl": 0, "processor": [0, 34, 35, 37, 38, 39, 40], "bf16": 0, "1st": 0, "2nd": 0, "3rd": 0, "run": [0, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40], "simpl": 0, "command": [0, 29, 31, 40], "bash": 0, "prompt": 0, "call": [0, 34, 35, 36, 37, 38, 39], "script": [0, 40], "download": [0, 7, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "replac": [0, 31], "them": [0, 34, 35, 36, 38, 39], "minim": 0, "save": [0, 29, 33, 34, 35, 36, 38, 40], "cpu": 0, "linux": [0, 40], "system": [0, 33, 37, 40], "verifi": 0, "ubuntu": [0, 33], "20": [0, 33, 36, 38], "04": [0, 33], "onli": [0, 28, 31, 33, 34, 35, 37, 38], "python3": [0, 33, 40], "3": [0, 28, 33, 40], "8": [0, 32, 33, 39, 40], "9": [0, 33, 40], "10": [0, 29, 32, 33, 34, 35, 36, 37, 39, 40], "pip": [0, 33, 40], "conda": [0, 33, 40], "virtualenv": [0, 33, 40], "packag": [0, 31, 33, 40], "apt": [0, 40], "build": 0, "essenti": [0, 40], "dev": [0, 40], "libgl1": [0, 40], "libglib2": [0, 40], "0": [0, 4, 7, 9, 10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "tlt": [0, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "help": [0, 34, 35, 36, 37, 38, 39, 40], "see": [0, 28, 34, 35, 36, 37, 38, 39, 40], "list": [0, 9, 12, 28, 31, 34, 35, 36, 37, 38, 39, 40], "each": [0, 4, 5, 9, 12, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40], "can": [0, 4, 5, 9, 12, 21, 23, 25, 26, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40], "found": [0, 9, 12, 28, 29, 36, 39, 40], "like": [0, 37, 39, 40], "avail": [0, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40], "image_classif": [0, 28, 34, 35, 36, 38, 40], "alexnet": [0, 32, 40], "convnext_bas": [0, 32, 40], "convnext_larg": [0, 32, 40], "convnext_smal": [0, 32, 40], "convnext_tini": [0, 32, 40], "densenet121": [0, 32, 40], "densenet161": [0, 32, 40], "densenet169": [0, 32, 40], "densenet201": [0, 32, 40], "efficientnet_b0": [0, 28, 29, 32, 36, 40], "efficientnet_b1": [0, 32, 40], "efficientnet_b2": [0, 32, 40], "efficientnet_b3": [0, 32, 40], "efficientnet_b4": [0, 32, 40], "efficientnet_b5": [0, 32, 40], "efficientnet_b6": [0, 32, 40], "efficientnet_b7": [0, 32, 40], "efficientnetv2": [0, 32, 40], "b0": [0, 32, 40], "b1": [0, 32, 40], "b2": [0, 32, 40], "b3": [0, 32, 40], "": [0, 9, 12, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40], "googlenet": [0, 32, 40], "inception_v3": [0, 32, 40], "mnasnet0_5": [0, 32, 40], "mnasnet1_0": [0, 32, 40], "mobilenet_v2": [0, 32, 40], "mobilenet_v2_100_224": [0, 32, 40], "mobilenet_v3_larg": [0, 32, 40], "mobilenet_v3_smal": [0, 32], "nasnet_larg": [0, 32], "regnet_x_16gf": [0, 32], "regnet_x_1_6gf": [0, 32], "regnet_x_32gf": [0, 32], "regnet_x_3_2gf": [0, 32], "regnet_x_400mf": [0, 32], "regnet_x_800mf": [0, 32], "regnet_x_8gf": [0, 32], "regnet_y_16gf": [0, 32], "regnet_y_1_6gf": [0, 32], "regnet_y_32gf": [0, 32], "regnet_y_3_2gf": [0, 32], "regnet_y_400mf": [0, 32], "regnet_y_800mf": [0, 32], "regnet_y_8gf": [0, 32], "resnet101": [0, 32], "resnet152": [0, 32], "resnet18": [0, 32], "resnet34": [0, 32], "resnet50": [0, 32], "resnet_v1_50": [0, 30, 32, 34, 35, 38, 40], "resnet_v2_101": [0, 32], "resnet_v2_50": [0, 32], "resnext101_32x8d": [0, 32], "resnext50_32x4d": [0, 32], "shufflenet_v2_x0_5": [0, 32], "shufflenet_v2_x1_0": [0, 32], "vgg11": [0, 32], "vgg11_bn": [0, 32], "vgg13": [0, 32], "vgg13_bn": [0, 32], "vgg16": [0, 32], "vgg16_bn": [0, 32], "vgg19": [0, 32], "vgg19_bn": [0, 32], "vit_b_16": [0, 32], "vit_b_32": [0, 32], "vit_l_16": [0, 32], "vit_l_32": [0, 32], "wide_resnet101_2": [0, 32], "wide_resnet50_2": [0, 32], "sure": [0, 40], "specifi": [0, 5, 9, 12, 29, 31, 34, 35, 36, 37, 38, 39, 40], "file": [0, 9, 12, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40], "path": [0, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "dir": [0, 29, 30, 31, 40], "output": [0, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "f": [0, 29, 30, 31, 34, 36, 37, 38, 40], "name": [0, 4, 5, 9, 12, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40], "tmp": [0, 28, 29, 30, 31, 40], "flower_photo": [0, 28, 30, 36, 38, 40], "epoch": [0, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40], "1": [0, 29, 30, 31, 32, 40], "directori": [0, 4, 5, 9, 12, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "3670": [0, 28, 40], "belong": [0, 28, 30, 40], "5": [0, 28, 30, 32, 40], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40], "same": [0, 34, 35, 36, 37, 38], "workload": 0, "abov": [0, 34, 35, 36, 37, 38, 39], "instead": [0, 9, 12, 36, 37, 38], "addition": 0, "i": [0, 4, 5, 9, 12, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "import": [0, 28, 40], "dataset_factori": [0, 28, 34, 35, 36, 37, 38, 39, 40], "model_factori": [0, 28, 34, 35, 36, 37, 38, 39, 40], "util": [0, 34, 35, 36, 37, 38, 39, 40], "type": [0, 28, 34, 35, 37, 38, 39, 40], "frameworktyp": [0, 15, 16, 21, 22, 24, 27, 28, 34, 35, 40], "usecasetyp": [0, 15, 16, 21, 22, 24, 27, 28, 34, 35, 40], "o": [0, 34, 35, 36, 37, 38, 39, 40], "dataset_dir": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "environ": [0, 31, 34, 35, 36, 37, 38, 39, 40], "els": [0, 34, 35, 36, 37, 38, 39, 40], "join": [0, 34, 35, 36, 37, 38, 39, 40], "home": [0, 34, 35, 36, 37, 38, 39, 40], "output_dir": [0, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "get_model": [0, 28, 34, 35, 36, 37, 38, 39, 40], "model_nam": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40], "load": [0, 4, 9, 12, 28, 29, 31, 36, 37, 38, 39, 40], "preprocess": [0, 34, 35, 36, 37, 38, 39, 40], "load_dataset": [0, 28, 35, 36, 37, 38, 39, 40], "use_cas": [0, 15, 16, 21, 22, 24, 27, 28, 34, 35, 36, 37, 38, 39, 40], "image_s": [0, 16, 28, 34, 35, 36, 38, 40], "batch_siz": [0, 29, 34, 35, 36, 37, 38, 39, 40], "32": [0, 29, 34, 35, 36, 37, 38, 39, 40], "shuffle_split": [0, 34, 35, 36, 37, 38, 39, 40], "train_pct": [0, 34, 35, 36, 37, 38, 39, 40], "75": [0, 36, 37, 38, 39, 40], "val_pct": [0, 34, 35, 36, 37, 38, 39, 40], "25": [0, 36, 37, 38, 39, 40], "metric": [0, 34, 35, 36, 37, 38, 39, 40], "metric_nam": [0, 40], "metric_valu": [0, 40], "zip": [0, 31, 37, 39, 40], "_model": [0, 40], "metrics_nam": [0, 40], "print": [0, 28, 34, 35, 36, 37, 38, 39, 40], "format": [0, 30, 31, 34, 35, 36, 37, 38, 39, 40], "saved_model_dir": [0, 34, 35, 37, 38, 39, 40], "an": [0, 3, 6, 7, 9, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40], "config": [0, 28, 29, 37, 38, 40], "inc_config_fil": [0, 37, 38, 40], "inc_config": [0, 29, 37, 38, 40], "yaml": [0, 29, 37, 38, 40], "write_inc_config_fil": [0, 37, 38, 40], "512": [0, 34, 35, 36, 37, 38, 39, 40], "overwrit": [0, 37, 38, 40], "true": [0, 4, 5, 6, 7, 9, 10, 12, 13, 28, 29, 34, 35, 36, 37, 38, 39, 40], "accuracy_criterion_rel": [0, 37, 38, 40], "01": [0, 29, 37, 38, 40], "exit_policy_timeout": [0, 37, 38, 40], "exit_policy_max_tri": [0, 37, 38, 40], "tuning_workspac": [0, 37, 38, 40], "nc_workspac": [0, 37, 38, 40], "quantization_output": [0, 40], "quantized_model": [0, 37, 38, 40], "do": [0, 36, 38, 40], "graph": [0, 29, 40], "optimization_output": [0, 40], "optimized_model": [0, 40], "optimize_graph": [0, 40], "you": [0, 9, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40], "have": [0, 31, 34, 35, 36, 37, 38, 39], "just": [0, 34, 35, 36, 37, 38, 39], "develop": 0, "With": [0, 34, 35, 36, 37, 38, 39], "sampl": [0, 38], "execut": [0, 34, 35], "end": [0, 29, 34, 35, 36, 37, 38, 39, 40], "check": [0, 31], "out": [0, 9, 12, 36, 37, 38, 39], "real": 0, "world": 0, "refer": [0, 32, 34, 35, 36, 37, 38, 39], "descript": [0, 34, 35, 36, 37, 38, 39], "fine": [0, 23, 25, 26, 29, 32, 34, 35, 36, 38], "tune": [0, 23, 25, 26, 29, 32, 34, 35, 36, 38, 40], "bert": [0, 31, 32, 37, 39], "tf": [0, 12, 14, 18, 19, 25, 26, 27, 28, 32, 33, 34, 35, 38, 39], "binari": [0, 25, 26, 32], "huggingfac": [0, 28, 29], "come": 0, "soon": 0, "kit": 0, "team": [0, 30, 36, 38], "track": 0, "bug": 0, "enhanc": 0, "request": [0, 28, 36], "issu": [0, 38], "befor": [0, 31], "submit": 0, "suggest": 0, "report": [0, 34, 35], "search": [0, 32, 37, 38], "exist": [0, 4, 5, 28, 36, 37, 38, 39], "ha": [0, 9, 12, 29, 30, 31, 37, 38, 39], "alreadi": [0, 29, 30, 36, 37, 38, 39], "been": [0, 29, 37, 38, 39], "other": [0, 34, 35, 37, 38, 39], "brand": 0, "mai": [0, 30, 31, 37, 38], "claim": 0, "properti": [0, 37, 39], "trademark": 0, "dataset_nam": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 29, 30, 31, 34, 36, 37, 38, 39], "none": [1, 4, 5, 6, 9, 12, 17, 18, 23, 25, 28, 34, 35, 37, 38, 39, 40], "dataset_catalog": [1, 2, 3, 8, 11, 14, 28, 29, 34, 36, 37, 38, 39], "abstract": [1, 21], "base": [1, 2, 3, 8, 11, 14, 15, 16, 21, 22, 27, 32, 34, 35, 36, 37, 38, 39], "us": [1, 4, 5, 9, 12, 21, 23, 25, 26, 28, 29, 32, 33, 40], "__init__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "constructor": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "method": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 39], "attribut": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "repres": [2, 8, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39], "num_work": [4, 7, 9, 10], "shuffle_fil": [4, 5, 6, 7, 9, 10, 12, 13, 37, 39], "A": [4, 5, 9, 10, 12, 13, 28, 29, 31], "note": [4, 5, 9, 12, 30, 31, 34, 35, 36, 37, 38, 39], "expect": [4, 5, 9, 12, 28, 30, 31, 37, 39], "organ": [4, 5, 28, 30, 36, 38], "subfold": [4, 5, 28, 30, 36, 38], "should": [4, 5, 9, 12, 28, 29, 30, 34, 35, 36, 37, 38, 39], "contain": [4, 5, 9, 12, 28, 29, 30, 34, 35, 36, 38], "jpg": [4, 5, 28, 30, 36, 38], "label": [4, 5, 9, 12, 28, 30, 31, 36, 37, 38, 39], "class_a": [4, 5, 9, 12, 28], "class_b": [4, 5, 9, 12, 28], "class_c": [4, 5, 28], "paramet": [4, 5, 9, 12, 28], "str": [4, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39], "where": [4, 5, 9, 12, 29, 31, 37, 39], "data": [4, 5, 9, 12, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40], "locat": [4, 5, 28, 29, 31, 35], "It": [4, 5, 31, 34, 35, 37, 38, 39], "subdirectori": [4, 5, 36, 38], "option": [4, 5, 9, 12, 28, 29], "If": [4, 5, 9, 12, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39], "given": [4, 5, 9, 12, 28, 29, 36], "folder": [4, 5, 9, 12, 29, 30, 33, 34, 35, 36, 38], "int": [4, 5, 9, 12, 16, 34, 35, 36, 37, 38, 39], "number": [4, 9, 29, 34, 35, 36, 37, 38, 39], "process": [4, 29, 31, 37, 38], "default": [4, 5, 9, 12, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39], "bool": [4, 5, 9, 12, 16, 28, 29, 34, 35, 36, 37, 38, 39], "whether": [4, 5, 9, 12], "shuffl": [4, 5, 9, 12], "rais": [4, 5, 9, 12, 28], "filenotfounderror": [4, 5, 9, 12], "doe": [4, 5, 9, 34, 35, 37, 38, 39, 40], "color_mod": 5, "rgb": [5, 36], "seed": [5, 6, 12], "color": [5, 36, 38], "mode": [5, 29, 40], "greyscal": 5, "rgba": 5, "random": [5, 12], "as_supervis": 6, "catalog": [6, 7, 10, 13, 28, 29, 34, 35, 40], "kwarg": [7, 17, 18, 19, 20, 23, 25, 26, 28], "csv_file_nam": [9, 12, 37, 39], "class_nam": [9, 12, 28, 29, 34, 35, 36, 37, 38, 39], "column_nam": [9, 37], "label_map_func": [9, 12, 39], "callabl": [9, 12], "label_col": 9, "delimit": [9, 12, 29, 31, 37, 39], "header": [9, 12, 37, 39], "fals": [9, 10, 12, 28, 34, 35, 36, 37, 38, 39], "select_col": [9, 12, 37, 39], "exclude_col": [9, 12, 37, 39], "transform": [9, 12], "csv": [9, 12, 28, 29, 31, 37, 39, 40], "two": [9, 12, 28, 31, 34, 35, 36, 37, 38, 39], "column": [9, 12, 28, 31, 37, 39], "first": [9, 12, 31, 34, 35, 36, 37, 38, 39], "second": [9, 12, 29, 31, 34, 35, 36, 37, 38, 39, 40], "sentenc": [9, 12, 28, 31, 37, 39], "classifi": [9, 12, 28, 31, 32, 37, 39], "exampl": [9, 12, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40], "comma": [9, 12, 29, 31, 37, 39], "separ": [9, 12, 29, 31, 37, 39], "valu": [9, 12, 29, 31, 37, 39], "look": [9, 12, 37, 39], "similar": [9, 12, 37, 39], "snippet": [9, 12], "below": [9, 12, 30, 31, 33, 34, 35, 36, 37], "filter": [9, 12, 28, 29, 31, 37, 39], "which": [9, 12, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40], "pars": [9, 12, 37, 39], "order": [9, 12], "ar": [9, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40], "must": 9, "exactli": 9, "one": [9, 12, 31, 34, 35, 36, 37, 38, 39], "posit": 9, "correspond": 9, "argument": [9, 28, 31, 34, 35], "assign": 9, "text_1": 9, "text_2": 9, "rest": [9, 36, 38], "function": [9, 12, 28, 31, 34, 35, 36, 37, 38, 39, 40], "map": [9, 12, 31, 36, 37, 38, 39], "appli": [9, 12, 29, 34, 35, 36, 37, 38, 39], "element": [9, 12], "string": [9, 12, 29, 31, 36, 37, 39], "numer": [9, 12, 31, 36, 37, 38, 39], "index": [9, 32, 37, 39], "integ": [9, 34, 35, 36, 37, 38, 39], "everi": 9, "uniqu": 9, "start": [9, 32, 33], "charact": [9, 12, 31], "row": [9, 12, 37, 39], "boolean": [9, 12, 28, 29], "indic": [9, 12, 40], "line": [9, 12, 36, 38], "skip": [9, 12, 33, 36, 37, 38, 39], "sort": [9, 12, 28], "all": [9, 12, 28, 32, 36, 37, 38, 39], "At": [9, 12], "most": [9, 12], "exclud": [9, 12], "worker": 9, "pass": [9, 31, 36, 37, 38, 39, 40], "dataload": 9, "typeerror": [9, 12], "valueerror": [9, 12], "empti": [9, 12, 33], "mismatch": 9, "than": 9, "distribut": [10, 29, 40], "field": 12, "do_fine_tun": 16, "dropout_layer_r": [16, 24], "loss": [17, 18, 23, 25, 28, 29, 34, 35, 36, 37, 38, 39, 40], "transfer": 21, "learn": [21, 29], "multi": [23, 31, 32, 34, 35, 36, 38, 39], "float": [24, 34, 35, 37, 38, 39], "simplest": 28, "wai": 28, "get_dataset": [28, 34, 36, 37, 38, 39], "third": [28, 34, 35, 37, 38, 39, 40], "parti": [28, 40], "tfcustomtextclassificationdataset": 28, "addit": [28, 34, 35, 36, 37, 38, 39], "task": [28, 31, 39], "purpos": [28, 36, 37, 38], "keyword": 28, "depend": [28, 31, 33], "being": [28, 29, 30, 31, 37, 39], "return": [28, 34, 35, 36, 37, 38, 39], "notimplementederror": 28, "support": [28, 29, 31, 34, 35, 36, 37, 38, 39], "daisi": [28, 30, 36, 38], "dandelion": [28, 30, 36, 38], "rose": [28, 30, 36, 38], "sunflow": [28, 30, 36, 38], "tulip": [28, 30, 36, 38], "tf_dataset": [28, 29, 34, 38, 39], "cv": [28, 29], "nlp": 28, "yet": [28, 36, 38], "tf_flower": [28, 30, 38], "user": [28, 34, 35, 40], "rare": 28, "need": [28, 36, 37, 39], "interact": 28, "directli": 28, "discov": 28, "work": [28, 36, 37, 38], "while": [28, 29, 34, 35, 36, 37, 38, 39], "load_model": [28, 34, 35], "either": [28, 31, 37, 39, 40], "object": [28, 34, 35, 36, 37, 38, 39, 40], "memori": [28, 34, 35, 37, 38, 39], "discoveri": 28, "inspect": 28, "get_supported_model": 28, "print_supported_model": [28, 34, 35, 36, 37, 38, 39], "saved_model": [28, 29, 34, 35, 36, 37, 38, 39, 40], "pb": [28, 29, 34, 35, 36, 37, 38, 39, 40], "pt": [28, 29], "configur": [28, 31, 37, 38], "set": [28, 30, 31, 33, 34, 35, 36, 37, 38, 39], "kera": [28, 38], "adam": 28, "torch": [28, 36], "nn": 28, "crossentropyloss": 28, "those": [28, 40], "initi": 28, "when": [28, 29, 31, 34, 35, 36, 37, 38, 39, 40], "thei": 28, "amsgrad": 28, "want": [28, 36, 37, 38], "sequenti": [28, 40], "input": [28, 34, 35, 36, 37, 38, 39], "dens": [28, 34, 35, 36, 37, 38, 39, 40], "my_model": 28, "shape": [28, 40], "4": [28, 32, 40], "activ": [28, 33, 40], "relu": 28, "softmax": 28, "224": [28, 36], "dictionari": 28, "leaf": 28, "item": 28, "about": [28, 29, 34, 35, 36, 37, 38, 39], "nameerror": 28, "unknown": 28, "miss": 28, "verbos": [28, 29, 34, 35, 36, 37, 38, 39], "categor": 28, "result": [28, 36, 37, 38, 39, 40], "show": [28, 30, 31, 34, 35, 36, 37, 38, 39], "includ": [28, 37], "arg": 29, "intel": 29, "model_dir": 29, "requir": [29, 33, 34, 35, 40], "reload": 29, "inc": [29, 37, 38], "http": [29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "com": [29, 30, 33, 35, 36, 38, 40], "blob": 29, "master": 29, "doc": 29, "md": 29, "accuraci": [29, 34, 35, 36, 37, 38, 39, 40], "writeabl": [29, 34, 35, 36, 37, 38, 39], "write": [29, 37, 38], "temporari": 29, "delet": 29, "after": [29, 30, 31, 36, 38, 39], "complet": [29, 36, 40], "previous": 29, "try": 29, "get": [29, 33], "dataset_fil": [29, 31], "singl": [29, 37, 39], "extra": 29, "post": [29, 37, 40], "tree": 29, "dure": [29, 31], "criterion": [29, 37, 38, 40], "accuracy_criterion": 29, "rel": [29, 37, 38], "allow": [29, 31, 34, 35, 36, 37, 38, 39], "timeout": [29, 37, 38, 40], "finish": [29, 37, 38], "max": [29, 37, 38, 40], "trial": [29, 37, 38, 40], "reach": [29, 34, 35, 36, 37, 38, 39, 40], "mean": [29, 36, 37, 38], "phase": [29, 37, 38], "stop": [29, 34, 35, 36, 37, 38, 39], "met": [29, 37, 38], "max_trial": [29, 37, 38], "maximum": [29, 37, 39], "50": [29, 34, 35, 40], "workspac": [29, 37, 38], "log": 29, "etc": [29, 34, 35, 36, 37, 38, 39], "init": 29, "init_checkpoint": 29, "weight": [29, 34, 35, 36, 37, 38, 39], "latest": [29, 34, 35, 36, 37, 38, 39], "add": [29, 34, 35, 36, 38], "aug": 29, "add_aug": [29, 34, 35, 36, 38], "choic": 29, "augment": [29, 34, 35, 36, 38], "hvflip": [29, 34, 35, 38], "hflip": [29, 34, 35, 36, 38], "vflip": [29, 34, 35, 38], "rotat": [29, 34, 35, 36, 38], "zoom": [29, 34, 35, 38], "ipex_optim": [29, 37], "d": [29, 31], "trigger": 29, "job": [29, 31], "nnode": [29, 31], "node": [29, 31], "nproc_per_nod": [29, 31], "per": [29, 31], "hostfil": [29, 31], "earli": [29, 34, 35, 36, 37, 38, 39], "early_stop": [29, 34, 35, 36, 37, 38, 39], "enabl": [29, 34, 35, 36, 37, 38, 39], "converg": [29, 34, 35, 36, 37, 38, 39], "lr": 29, "decai": [29, 34, 35, 36, 37, 38, 39], "lr_decai": [29, 34, 35, 36, 37, 38, 39], "do_ev": [29, 34, 35, 36, 37, 38, 39], "rate": [29, 34, 35, 36, 37, 38, 39], "valid": [29, 34, 35, 36, 37, 38, 39], "how": [30, 31, 34, 35, 36, 37, 38, 39], "flower": [30, 36, 38], "photo": 30, "extract": [30, 31, 36, 37, 38, 39], "mkdir": [30, 31, 33], "p": [30, 31, 33, 40], "wget": [30, 31], "storag": [30, 36, 38], "googleapi": [30, 36, 38], "org": [30, 31, 34, 35, 36, 37, 38, 39], "example_imag": [30, 36, 38], "tgz": [30, 36, 38], "tar": 30, "xzf": 30, "2": [30, 31, 32, 33, 40], "vari": [30, 31], "sinc": [30, 31, 36, 38], "eval": [30, 31, 40], "onlin": [30, 36, 38], "tfflower": [30, 36, 38], "author": [30, 31, 34, 35, 36, 37, 38, 39], "titl": [30, 31, 34, 35, 36, 37, 38, 39], "month": [30, 31, 35, 36, 37, 38, 39], "jan": [30, 36, 38], "year": [30, 31, 34, 35, 36, 37, 38, 39], "2019": [30, 31, 36, 38, 39], "url": [30, 31, 33, 35, 36, 37, 38, 39], "although": 31, "api": [31, 32, 33], "flexibl": 31, "translat": [31, 37, 39], "sm": [31, 37, 39], "spam": [31, 37, 39], "collect": [31, 34, 37, 39], "tab": [31, 37, 39], "messag": [31, 37, 39], "ham": [31, 37, 39], "mesag": [31, 37, 39], "archiv": [31, 37, 39], "ic": [31, 37, 39], "uci": [31, 37, 39], "edu": [31, 36, 37, 39], "ml": [31, 37, 39], "machin": [31, 37, 39], "databas": [31, 37, 39], "00228": [31, 37, 39], "smsspamcollect": [31, 37, 39], "unzip": [31, 35], "copi": [31, 33], "smsspamcollection_numer": 31, "cp": 31, "sed": 31, "g": [31, 34], "small_bert": [31, 32, 39], "bert_en_uncased_l": [31, 32, 39], "2_h": [31, 32, 39], "128_a": [31, 32, 39], "our": [31, 34, 35, 36, 37, 38, 39], "t": [31, 34, 36, 37, 38, 39], "follow": [31, 33, 34, 35, 36, 37, 38, 39], "imdb_review": [31, 39], "glue": [31, 39], "sst2": [31, 37, 39], "cola": [31, 39], "level": [31, 32], "sentiment": [31, 32, 37, 39], "analysi": [31, 32, 34, 37, 39], "imdb": [31, 37], "tweet_ev": [31, 37], "rotten_tomato": [31, 37], "ag_new": [31, 37], "ensur": [31, 36, 38], "right": [31, 40], "prerequisit": 31, "successfulli": 31, "saniti": 31, "uncas": [31, 32], "inproceed": [31, 37, 39], "maa": [31, 37, 39], "etal": [31, 37, 39], "2011": [31, 37, 39], "acl": [31, 37, 39], "hlt2011": [31, 37, 39], "andrew": [31, 37, 39], "l": [31, 34, 36, 37, 38, 39], "dali": [31, 37, 39], "raymond": [31, 37, 39], "e": [31, 37, 39], "pham": [31, 37, 39], "peter": [31, 37, 39], "huang": [31, 37, 39], "dan": [31, 37, 39], "ng": [31, 37, 39], "y": [31, 34, 35, 37, 39], "pott": [31, 37, 39], "christoph": [31, 37, 39], "word": [31, 37, 39], "vector": [31, 34, 35, 36, 37, 38, 39], "booktitl": [31, 37, 39], "proceed": [31, 35, 37, 39], "49th": [31, 37, 39], "annual": [31, 37, 39], "meet": [31, 37, 39, 40], "associ": [31, 37, 39, 40], "comput": [31, 37, 39], "linguist": [31, 37, 39], "human": [31, 37, 39, 40], "languag": [31, 37, 39], "technologi": [31, 37, 39], "june": [31, 37, 39], "address": [31, 37, 38, 39], "portland": [31, 37, 39], "oregon": [31, 37, 39], "usa": [31, 37, 39], "publish": [31, 34, 35, 37, 39], "page": [31, 32, 34, 35, 37, 39], "142": [31, 37, 39], "150": [31, 37, 39], "www": [31, 35, 36, 37, 39, 40], "aclweb": [31, 37, 39], "anthologi": [31, 37, 39], "p11": [31, 37, 39], "1015": [31, 37, 39], "wang2019glu": [31, 39], "natur": [31, 34, 39], "understand": [31, 39], "wang": [31, 39], "alex": [31, 36, 39], "singh": [31, 39], "amanpreet": [31, 39], "michael": [31, 39], "julian": [31, 39], "hill": [31, 39], "felix": [31, 39], "levi": [31, 39], "omer": [31, 39], "bowman": [31, 39], "samuel": [31, 39], "r": [31, 33, 34, 37, 38, 39], "In": [31, 34, 35, 36, 37, 38, 39], "iclr": [31, 39], "misc": [31, 37, 39], "misc_sms_spam_collection_228": [31, 37, 39], "almeida": [31, 37, 39], "tiago": [31, 37, 39], "2012": [31, 37, 39], "howpublish": [31, 37, 39], "socher": 31, "2013": 31, "recurs": 31, "semant": 31, "composition": 31, "treebank": 31, "richard": 31, "perelygin": 31, "wu": 31, "jean": 31, "chuang": 31, "jason": 31, "man": 31, "confer": 31, "empir": 31, "oct": [31, 35], "seattl": 31, "washington": 31, "d13": 31, "1170": 31, "1631": 31, "1642": 31, "To": [32, 34, 35, 36, 38, 40], "scientist": 32, "incorpor": 32, "best": [32, 40], "practic": 32, "xpu": 32, "cli": 32, "later": [32, 34, 35, 36, 37, 38, 39, 40], "19": 32, "tfhub": [32, 34, 35, 36, 37, 38, 39], "26": [32, 40], "13": [32, 40], "60": 32, "anomali": [32, 33, 40], "detect": [32, 33, 40], "jupyt": [32, 33], "squad": 32, "question": 32, "answer": 32, "multiclass": 32, "medic": [32, 33], "remot": [32, 33], "sens": [32, 33], "modal": 32, "cancer": [32, 34], "12_h": 32, "768_a": 32, "12": [32, 40], "bert_en_wwm_uncased_l": 32, "24_h": 32, "1024_a": 32, "16": [32, 34, 35, 36, 37, 38, 39], "10_h": 32, "256_a": 32, "512_a": 32, "4_h": 32, "6_h": 32, "8_h": 32, "distilbert": 32, "clinic": 32, "quick": 32, "modul": [32, 36], "colorect": 33, "histologi": 33, "scene": 33, "resisc": 33, "git": [33, 40], "e2": 33, "main": 33, "readm": 33, "step": [33, 34, 35, 36, 37, 38, 39], "nativ": [33, 37], "clone": [33, 40], "intelai": [33, 40], "transfer_learn": 33, "tlt_repo": 33, "pwd": 33, "virtual": [33, 40], "venv": 33, "bin": [33, 40], "Or": [33, 40], "anaconda": 33, "n": [33, 34, 36, 37, 38], "Then": [33, 36, 38], "insid": 33, "upgrad": 33, "txt": [33, 36, 38], "variabl": [33, 36, 37, 38, 39], "subsequ": [33, 36], "reus": [33, 36], "defin": [33, 37, 38], "navig": [33, 40], "repo": [33, 40], "server": 33, "cd": [33, 40], "pythonpath": 33, "port": 33, "8888": 33, "past": 33, "termin": 33, "browser": 33, "view": 33, "notebook": [34, 35, 36, 37, 38, 39], "facilit": [34, 35], "implement": [34, 35, 37, 38], "toolkit": [34, 35], "textur": 34, "sota": [34, 35], "resnet": [34, 35], "v1": [34, 35], "domain": [34, 35], "differ": [34, 35, 37, 38], "achiev": [34, 35], "numpi": [34, 35, 36, 37, 38, 39], "np": [34, 35, 36, 37, 38], "pickl": [34, 35], "sklearn": [34, 35], "classification_report": [34, 35], "plot_util": [34, 35], "plot_curv": [34, 35], "we": [34, 35, 36, 37, 38, 39], "factori": [34, 35, 36, 37, 38, 39], "test": [34, 35, 36, 37, 38, 39], "ad": [34, 35, 36, 37, 38, 39], "origin": [34, 35, 37, 39], "next": [34, 35, 36, 37, 38, 39], "previou": [34, 35, 36, 37, 38, 39], "cell": [34, 35, 36, 37, 38, 39], "By": [34, 35, 40], "continu": [34, 35, 36, 37, 38, 39], "colorectal_histologi": 34, "info": [34, 36, 37, 38, 39, 40], "nclass": [34, 37, 38, 39], "onc": [34, 35, 36, 37, 38, 39], "resiz": [34, 35, 36, 38, 39], "match": [34, 35, 36, 38, 39], "subset": [34, 35, 36, 37, 38, 39], "randomhorizontalandverticalflip": [34, 35, 38], "randomhorizontalflip": [34, 35, 36, 38], "randomverticalflip": [34, 35, 38], "randomrot": [34, 35, 36, 38], "randomzoom": [34, 35, 38], "80": [34, 35], "test_pct": [34, 35], "wa": [34, 35, 36, 37, 38, 39], "compil": [34, 35, 36, 38], "paramt": [34, 35, 37, 38, 39], "also": [34, 35, 36, 37, 38, 39, 40], "calcul": [34, 35, 36, 37, 38, 39], "imageclassificationdataset": [34, 35, 36, 37, 38, 39], "initial_checkpoint": [34, 35, 36, 37, 38, 39], "enable_auto_mixed_precis": [34, 35, 38, 39], "bit": [34, 35, 37, 38, 39], "point": [34, 35, 36, 37, 38, 39], "less": [34, 35, 37, 38, 39], "bfloat16": [34, 35, 37, 38, 39], "fourth": [34, 35, 37, 38, 39, 40], "detriment": [34, 35, 37, 38, 39], "disabl": [34, 35, 38, 39], "extra_lay": [34, 35, 36, 37, 38, 39], "insert": [34, 35, 36, 37, 38, 39], "between": [34, 35, 36, 37, 38, 39], "increas": [34, 35, 36, 37, 38, 39], "1024": [34, 35, 36, 37, 38, 39], "neuron": [34, 35, 36, 37, 38, 39], "releas": [34, 35, 36, 37, 38, 39], "date": [34, 35, 36, 37, 38, 39], "current": [34, 35, 36, 37, 38, 39], "histori": [34, 35, 36, 37, 38, 39, 40], "val_loss": [34, 35], "val_acc": [34, 35], "_checkpoint": [34, 35], "dump": [34, 35], "hist": 34, "pkl": [34, 35], "wb": [34, 35], "readi": [34, 35, 38, 39], "serv": [34, 35, 36, 37, 38, 39], "pick": [34, 35, 36, 37, 38, 39], "appropri": [34, 35], "rb": [34, 35], "use_test_set": [34, 35], "actual_label": [34, 35, 39], "concaten": [34, 35], "x": [34, 35, 39], "_test_subset": [34, 35], "axi": [34, 35, 36, 37, 38, 39], "predicted_label": [34, 35], "articl": [34, 35, 36, 38], "kather2016multi": 34, "kather": 34, "jakob": 34, "nikola": 34, "wei": 34, "cleo": 34, "aron": 34, "bianconi": 34, "francesco": 34, "melcher": 34, "susann": 34, "m": [34, 40], "schad": 34, "lothar": 34, "gaiser": 34, "timo": 34, "marx": 34, "alexand": 34, "z": 34, "llner": 34, "frank": 34, "gerrit": 34, "journal": [34, 35, 36, 38], "scientif": 34, "volum": [34, 35], "27988": 34, "2016": [34, 36, 38], "group": 34, "j": 34, "z\u00f6llner": 34, "c": [34, 36], "zenodo": 34, "doi": [34, 35], "5281": 34, "53169": 34, "resisc45": 35, "rar": 35, "onedr": 35, "live": 35, "authkei": 35, "21ahhnahilzp": 35, "5fixj": 35, "cid": 35, "5c5e061130630a68": 35, "id": [35, 36, 38], "21107": 35, "parid": 35, "21112": 35, "action": 35, "custom_dataset_path": [35, 36, 38], "256": 35, "resisc45_hist": 35, "cheng_2017": 35, "state": 35, "art": 35, "105": 35, "issn": 35, "1558": 35, "2256": 35, "dx": 35, "1109": 35, "jproc": 35, "2017": 35, "2675998": 35, "ieee": 35, "institut": 35, "electr": 35, "electron": 35, "engin": 35, "cheng": 35, "gong": 35, "han": 35, "junwei": 35, "lu": 35, "xiaoqiang": 35, "1865": 35, "1883": 35, "classfic": [36, 38], "assum": [36, 37, 38, 39], "matplotlib": [36, 38], "pyplot": [36, 38], "plt": [36, 38], "panda": [36, 37, 38, 39], "pd": [36, 37, 38, 39], "pil": [36, 38], "io": 36, "bytesio": 36, "file_util": [36, 37, 38, 39], "download_and_extract_tar_fil": [36, 38], "download_fil": [36, 38], "correct": [36, 38], "layout": [36, 38], "speci": [36, 38], "similarli": [36, 38], "chang": [36, 38], "comment": [36, 38], "download_url": [36, 38], "cifar10": 36, "choos": 36, "These": [36, 40], "cifar100": 36, "country211": 36, "dtd": 36, "food101": 36, "fgvcaircraft": 36, "renderedsst2": 36, "apppli": 36, "haven": [36, 38], "done": [36, 37, 38, 40], "ani": [36, 38, 40], "give": [36, 38], "u": [36, 38], "imagenet": [36, 38], "get_batch": [36, 37, 38, 39], "labels_fil": [36, 38], "imagenetlabel": [36, 38], "labels_file_path": 36, "basenam": [36, 37, 38], "imagenet_label": [36, 38], "readlin": [36, 38], "imagenet_class": [36, 38], "strip": [36, 38], "displai": [36, 37, 38, 39], "figur": [36, 38], "figsiz": [36, 38], "18": [36, 38], "14": [36, 38], "subplots_adjust": [36, 38], "hspace": [36, 38], "rang": [36, 38], "min": [36, 38], "30": [36, 38], "subplot": [36, 38], "inp": 36, "transpos": 36, "arrai": [36, 38], "485": 36, "456": 36, "406": 36, "std": 36, "229": 36, "225": 36, "clip": 36, "imshow": [36, 38], "correct_predict": [36, 38], "darkgreen": [36, 38], "crimson": [36, 38], "fontsiz": [36, 38], "off": [36, 38], "_": [36, 38], "suptitl": [36, 38], "shown": [36, 38], "green": [36, 38], "incorrect": [36, 38], "red": [36, 38], "actual": [36, 37, 38, 39], "parenthesi": [36, 38], "summari": 36, "unfrozen": 36, "list_lay": 36, "unfreeze_lay": 36, "unfreez": 36, "lastli": [36, 37, 39], "earlier": [36, 38], "visual": [36, 38], "wasn": [36, 38], "part": [36, 38], "web": [36, 38], "image_url": [36, 38], "c8": [36, 38], "staticflickr": [36, 38], "7095": [36, 38], "7210797228_c7fe51c3cb_z": [36, 38], "image_shap": [36, 38], "content": [36, 37, 39], "dimens": [36, 38], "normal": 36, "255": [36, 38], "arrang": 36, "channel": 36, "newaxi": [36, 38], "moveaxi": 36, "tensor": [36, 37], "krizhevski": 36, "cifar": 36, "2009": 36, "toronto": 36, "kriz": 36, "html": 36, "openimag": [36, 38], "krasin": [36, 38], "ivan": [36, 38], "duerig": [36, 38], "tom": [36, 38], "alldrin": [36, 38], "neil": [36, 38], "veit": [36, 38], "andrea": [36, 38], "abu": [36, 38], "el": [36, 38], "haija": [36, 38], "sami": [36, 38], "belongi": [36, 38], "serg": [36, 38], "cai": [36, 38], "david": [36, 38], "feng": [36, 38], "zheyun": [36, 38], "ferrari": [36, 38], "vittorio": [36, 38], "gome": [36, 38], "victor": [36, 38], "gupta": [36, 38], "abhinav": [36, 38], "narayanan": [36, 38], "dhyanesh": [36, 38], "sun": [36, 38], "chen": [36, 38], "chechik": [36, 38], "gal": [36, 38], "murphi": [36, 38], "kevin": [36, 38], "intel_extension_for_pytorch": 37, "ipex": 37, "download_and_extract_zip_fil": [37, 39], "text_classif": [37, 39], "num_class": 37, "updat": [37, 39], "modifi": 37, "local": 37, "csv_path": 37, "dataset_url": 37, "sms_spam_collect": [37, 39], "csv_name": 37, "label_nam": 37, "renam": 37, "so": [37, 38], "know": 37, "renamed_csv": 37, "don": 37, "emoji": 37, "emot": 37, "hate": 37, "ironi": 37, "offens": 37, "stance_abort": 37, "stance_ath": 37, "stance_clim": 37, "stance_feminist": 37, "stance_hillari": 37, "along": [37, 39], "use_train": 37, "trainer": 37, "loop": 37, "data_batch": [37, 39], "batch_predict": [37, 39], "frame": [37, 39], "max_item": [37, 39], "score": [37, 39], "prediction_list": [37, 39], "enumer": [37, 39], "input_id": 37, "get_text": 37, "append": [37, 39], "get_str_label": [37, 39], "break": [37, 39], "result_df": [37, 39], "datafram": [37, 39], "style": [37, 39], "hide": [37, 39], "raw": [37, 39], "terribl": 37, "movi": [37, 39], "section": [37, 38], "control": [37, 38], "quantization_output_dir": [37, 38], "relative_accuracy_criterion": [37, 38], "exit": [37, 38, 40], "polici": [37, 38, 40], "15": [37, 38], "written": [37, 38, 40], "read": [37, 38], "recip": [37, 38], "within": [37, 38], "constrain": [37, 38], "take": [37, 38], "sever": [37, 38], "minut": [37, 38], "hardwar": [37, 38], "downloaded_fil": 38, "get_fil": 38, "let": 38, "full": 38, "baselin": [38, 40], "known": 38, "sometim": 38, "error": [38, 40], "zmq": 38, "zmqerror": 38, "rerun": 38, "again": 38, "compar": 38, "encod": 39, "model_url": 39, "preprocessor": 39, "_hub_preprocessor": 39, "zip_file_url": 39, "sms_data_directori": 39, "listdir": 39, "def": 39, "decod": 39, "utf": 39, "get_static_valu": 39, "awesom": 39, "wsl2": 40, "window": 40, "encourag": 40, "consist": 40, "manag": 40, "tlt_dev_venv": 40, "wheel": 40, "setup": 40, "py": 40, "bdist_wheel": 40, "dist": 40, "intel_transfer_learning_tool": 40, "py3": 40, "whl": 40, "edit": 40, "_________________________________________________________________": 40, "param": 40, "keras_lay": 40, "keraslay": 40, "2048": 40, "23561152": 40, "10245": 40, "total": 40, "23": 40, "571": 40, "397": 40, "245": 40, "non": 40, "561": 40, "152": 40, "resnet_v1_50_checkpoint": 40, "86": 40, "24": 40, "248m": 40, "4600": 40, "acc": 40, "8438": 40, "28": 40, "236m": 40, "2528": 40, "9163": 40, "2022": 40, "06": 40, "22": 40, "latenc": 40, "031": 40, "throughput": 40, "329": 40, "878": 40, "sec": 40, "58": 40, "statist": 40, "op": 40, "conv2d": 40, "53": 40, "matmul": 40, "maxpool": 40, "quantizev2": 40, "dequant": 40, "elaps": 40, "32164": 40, "27": 40, "13921": 40, "64": 40, "9008": 40, "9022": 40, "durat": 40, "9226": 40, "17": 40, "3321": 40, "snapshot": 40, "goal": 40, "savedmodel": 40, "33": 40, "946": 40, "1056": 40, "940": 40, "51": 40, "21": 40, "tutori": 40, "pipelin": 40, "intend": 40, "blog": 40, "commit": 40, "respect": 40, "avoid": 40, "complic": 40, "abus": 40, "reflect": 40, "global": 40, "principl": 40, "accordingli": 40, "access": 40, "materi": 40, "agre": 40, "product": 40, "applic": 40, "caus": 40, "contribut": 40, "violat": 40, "internation": 40, "recogn": 40, "under": 40, "apach": 40, "version": 40, "extent": 40, "referenc": 40, "site": 40, "warrant": 40, "qualiti": 40, "term": 40, "compli": 40, "expressli": 40, "adequaci": 40, "liabl": 40, "omiss": 40, "defect": 40, "relianc": 40, "liabil": 40, "damag": 40}, "objects": {"tlt.datasets.dataset": [[1, 0, 1, "", "BaseDataset"]], "tlt.datasets.dataset.BaseDataset": [[1, 1, 1, "", "__init__"]], "tlt.datasets": [[28, 2, 0, "-", "dataset_factory"]], "tlt.datasets.dataset_factory": [[28, 3, 1, "", "get_dataset"], [28, 3, 1, "", "load_dataset"]], "tlt.datasets.hf_dataset": [[2, 0, 1, "", "HFDataset"]], "tlt.datasets.hf_dataset.HFDataset": [[2, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.image_classification_dataset": [[3, 0, 1, "", "ImageClassificationDataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[3, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset": [[4, 0, 1, "", "PyTorchCustomImageClassificationDataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[4, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset": [[5, 0, 1, "", "TFCustomImageClassificationDataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[5, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tf_image_classification_dataset": [[6, 0, 1, "", "TFImageClassificationDataset"]], "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset": [[6, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset": [[7, 0, 1, "", "TorchvisionImageClassificationDataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[7, 1, 1, "", "__init__"]], "tlt.datasets.pytorch_dataset": [[8, 0, 1, "", "PyTorchDataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[8, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset": [[9, 0, 1, "", "HFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[9, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_text_classification_dataset": [[10, 0, 1, "", "HFTextClassificationDataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[10, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.text_classification_dataset": [[11, 0, 1, "", "TextClassificationDataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[11, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset": [[12, 0, 1, "", "TFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[12, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tfds_text_classification_dataset": [[13, 0, 1, "", "TFDSTextClassificationDataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[13, 1, 1, "", "__init__"]], "tlt.datasets.tf_dataset": [[14, 0, 1, "", "TFDataset"]], "tlt.datasets.tf_dataset.TFDataset": [[14, 1, 1, "", "__init__"]], "tlt.models.hf_model": [[15, 0, 1, "", "HFModel"]], "tlt.models.hf_model.HFModel": [[15, 1, 1, "", "__init__"]], "tlt.models.image_classification.image_classification_model": [[16, 0, 1, "", "ImageClassificationModel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[16, 1, 1, "", "__init__"]], "tlt.models.image_classification.pytorch_image_classification_model": [[17, 0, 1, "", "PyTorchImageClassificationModel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[17, 1, 1, "", "__init__"]], "tlt.models.image_classification.tf_image_classification_model": [[18, 0, 1, "", "TFImageClassificationModel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[18, 1, 1, "", "__init__"]], "tlt.models.image_classification.tfhub_image_classification_model": [[19, 0, 1, "", "TFHubImageClassificationModel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[19, 1, 1, "", "__init__"]], "tlt.models.image_classification.torchvision_image_classification_model": [[20, 0, 1, "", "TorchvisionImageClassificationModel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[20, 1, 1, "", "__init__"]], "tlt.models.model": [[21, 0, 1, "", "BaseModel"]], "tlt.models.model.BaseModel": [[21, 1, 1, "", "__init__"]], "tlt.models": [[28, 2, 0, "-", "model_factory"]], "tlt.models.model_factory": [[28, 3, 1, "", "get_model"], [28, 3, 1, "", "get_supported_models"], [28, 3, 1, "", "load_model"], [28, 3, 1, "", "print_supported_models"]], "tlt.models.pytorch_model": [[22, 0, 1, "", "PyTorchModel"]], "tlt.models.pytorch_model.PyTorchModel": [[22, 1, 1, "", "__init__"]], "tlt.models.text_classification.hf_text_classification_model": [[23, 0, 1, "", "HFTextClassificationModel"]], "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel": [[23, 1, 1, "", "__init__"]], "tlt.models.text_classification.text_classification_model": [[24, 0, 1, "", "TextClassificationModel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[24, 1, 1, "", "__init__"]], "tlt.models.text_classification.tf_text_classification_model": [[25, 0, 1, "", "TFTextClassificationModel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[25, 1, 1, "", "__init__"]], "tlt.models.text_classification.tfhub_text_classification_model": [[26, 0, 1, "", "TFHubTextClassificationModel"]], "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel": [[26, 1, 1, "", "__init__"]], "tlt.models.tf_model": [[27, 0, 1, "", "TFModel"]], "tlt.models.tf_model.TFModel": [[27, 1, 1, "", "__init__"]], "tlt-benchmark": [[29, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch-size"], [29, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch_size"], [29, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset-dir"], [29, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset_dir"], [29, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc-config"], [29, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc_config"], [29, 4, 1, "cmdoption-tlt-benchmark-mode", "--mode"], [29, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model-dir"], [29, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model_dir"], [29, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output-dir"], [29, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output_dir"]], "tlt-eval": [[29, 4, 1, "cmdoption-tlt-eval-class-names", "--class-names"], [29, 4, 1, "cmdoption-tlt-eval-class-names", "--class_names"], [29, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset-catalog"], [29, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset-dir"], [29, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset-file"], [29, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset-name"], [29, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset_catalog"], [29, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset_dir"], [29, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset_file"], [29, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset_name"], [29, 4, 1, "cmdoption-tlt-eval-delimiter", "--delimiter"], [29, 4, 1, "cmdoption-tlt-eval-model-dir", "--model-dir"], [29, 4, 1, "cmdoption-tlt-eval-model-name", "--model-name"], [29, 4, 1, "cmdoption-tlt-eval-model-dir", "--model_dir"], [29, 4, 1, "cmdoption-tlt-eval-model-name", "--model_name"]], "tlt-list-models": [[29, 4, 1, "cmdoption-tlt-list-models-f", "--framework"], [29, 4, 1, "cmdoption-tlt-list-models-use-case", "--use-case"], [29, 4, 1, "cmdoption-tlt-list-models-use-case", "--use_case"], [29, 4, 1, "cmdoption-tlt-list-models-verbose", "--verbose"], [29, 4, 1, "cmdoption-tlt-list-models-f", "-f"]], "tlt-optimize": [[29, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model-dir"], [29, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model_dir"], [29, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output-dir"], [29, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output_dir"]], "tlt-quantize": [[29, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy-criterion"], [29, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy_criterion"], [29, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch-size"], [29, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch_size"], [29, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset-dir"], [29, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset_dir"], [29, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc-config"], [29, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc_config"], [29, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max-trials"], [29, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max_trials"], [29, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model-dir"], [29, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model_dir"], [29, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output-dir"], [29, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output_dir"], [29, 4, 1, "cmdoption-tlt-quantize-timeout", "--timeout"]], "tlt-train": [[29, 4, 1, "cmdoption-tlt-train-add-aug", "--add-aug"], [29, 4, 1, "cmdoption-tlt-train-add-aug", "--add_aug"], [29, 4, 1, "cmdoption-tlt-train-class-names", "--class-names"], [29, 4, 1, "cmdoption-tlt-train-class-names", "--class_names"], [29, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset-catalog"], [29, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset-dir"], [29, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset-file"], [29, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset-name"], [29, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset_catalog"], [29, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset_dir"], [29, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset_file"], [29, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset_name"], [29, 4, 1, "cmdoption-tlt-train-delimiter", "--delimiter"], [29, 4, 1, "cmdoption-tlt-train-d", "--distributed"], [29, 4, 1, "cmdoption-tlt-train-early-stopping", "--early-stopping"], [29, 4, 1, "cmdoption-tlt-train-early-stopping", "--early_stopping"], [29, 4, 1, "cmdoption-tlt-train-epochs", "--epochs"], [29, 4, 1, "cmdoption-tlt-train-f", "--framework"], [29, 4, 1, "cmdoption-tlt-train-hostfile", "--hostfile"], [29, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init-checkpoints"], [29, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init_checkpoints"], [29, 4, 1, "cmdoption-tlt-train-ipex_optimize", "--ipex_optimize"], [29, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr-decay"], [29, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr_decay"], [29, 4, 1, "cmdoption-tlt-train-model-name", "--model-name"], [29, 4, 1, "cmdoption-tlt-train-model-name", "--model_name"], [29, 4, 1, "cmdoption-tlt-train-nnodes", "--nnodes"], [29, 4, 1, "cmdoption-tlt-train-nproc_per_node", "--nproc_per_node"], [29, 4, 1, "cmdoption-tlt-train-output-dir", "--output-dir"], [29, 4, 1, "cmdoption-tlt-train-output-dir", "--output_dir"], [29, 4, 1, "cmdoption-tlt-train-d", "-d"], [29, 4, 1, "cmdoption-tlt-train-f", "-f"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "std:cmdoption"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["std", "cmdoption", "program option"]}, "titleterms": {"intel": [0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "transfer": [0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "learn": [0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "tool": [0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "overview": 0, "hardwar": 0, "requir": [0, 36, 37, 38, 39], "how": 0, "work": 0, "get": [0, 34, 35, 36, 37, 38, 39, 40], "start": [0, 40], "instal": [0, 33, 40], "us": [0, 30, 31, 34, 35, 36, 37, 38, 39], "cli": [0, 29, 30, 31, 40], "api": [0, 28, 34, 35, 36, 37, 38, 39, 40], "summari": 0, "next": 0, "step": [0, 40], "tutori": [0, 32, 33], "jupyt": 0, "notebook": [0, 32, 33], "exampl": [0, 30, 31, 33], "support": 0, "tlt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "dataset": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40], "basedataset": 1, "hf_dataset": 2, "hfdataset": 2, "image_classif": [3, 4, 5, 6, 7, 16, 17, 18, 19, 20], "image_classification_dataset": 3, "imageclassificationdataset": 3, "pytorch_custom_image_classification_dataset": 4, "pytorchcustomimageclassificationdataset": 4, "tf_custom_image_classification_dataset": 5, "tfcustomimageclassificationdataset": 5, "tf_image_classification_dataset": 6, "tfimageclassificationdataset": 6, "torchvision_image_classification_dataset": 7, "torchvisionimageclassificationdataset": 7, "pytorch_dataset": 8, "pytorchdataset": 8, "text_classif": [9, 10, 11, 12, 13, 23, 24, 25, 26], "hf_custom_text_classification_dataset": 9, "hfcustomtextclassificationdataset": 9, "hf_text_classification_dataset": 10, "hftextclassificationdataset": 10, "text_classification_dataset": 11, "textclassificationdataset": 11, "tf_custom_text_classification_dataset": 12, "tfcustomtextclassificationdataset": 12, "tfds_text_classification_dataset": 13, "tfdstextclassificationdataset": 13, "tf_dataset": 14, "tfdataset": 14, "model": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39], "hf_model": 15, "hfmodel": 15, "image_classification_model": 16, "imageclassificationmodel": 16, "pytorch_image_classification_model": 17, "pytorchimageclassificationmodel": 17, "tf_image_classification_model": 18, "tfimageclassificationmodel": 18, "tfhub_image_classification_model": 19, "tfhubimageclassificationmodel": 19, "torchvision_image_classification_model": 20, "torchvisionimageclassificationmodel": 20, "basemodel": 21, "pytorch_model": 22, "pytorchmodel": 22, "hf_text_classification_model": 23, "hftextclassificationmodel": 23, "text_classification_model": 24, "textclassificationmodel": 24, "tf_text_classification_model": 25, "tftextclassificationmodel": 25, "tfhub_text_classification_model": 26, "tfhubtextclassificationmodel": 26, "tf_model": 27, "tfmodel": 27, "refer": [28, 29], "factori": 28, "method": 28, "class": 28, "imag": [28, 30, 34, 35, 36, 38], "classif": [28, 30, 31, 34, 35, 36, 37, 38, 39], "text": [28, 31, 37, 39], "base": 28, "benchmark": 29, "eval": 29, "list": 29, "framework": [29, 32], "use_cas": 29, "optim": 29, "quantiz": [29, 37, 38], "train": [29, 38], "your": [30, 31, 36, 37, 38, 39], "own": [30, 31, 36, 37, 38, 39], "from": [30, 31, 36, 38], "tfd": [30, 31, 39], "catalog": [30, 31, 36, 37, 38, 39], "citat": [30, 31, 34, 35, 36, 37, 38, 39], "fine": [31, 37, 39], "tune": [31, 37, 39], "distribut": 31, "hug": 31, "face": 31, "goal": 32, "featur": [32, 40], "nativ": 32, "end": [32, 33], "pipelin": [32, 33], "content": 32, "indic": 32, "tabl": 32, "environ": 33, "setup": [33, 34, 35, 36, 37, 38, 39], "run": 33, "medic": 34, "colorect": 34, "histologi": 34, "tensorflow": [34, 35, 38, 39], "1": [34, 35, 36, 37, 38, 39], "import": [34, 35, 36, 37, 38, 39], "depend": [34, 35, 36, 37, 38, 39], "paramet": [34, 35, 36, 37, 38, 39], "2": [34, 35, 36, 37, 38, 39], "option": [34, 35, 36, 37, 38, 39], "A": [34, 35, 36, 37, 38, 39], "load": [34, 35], "b": [34, 35, 36, 37, 38, 39], "pretrain": [34, 35], "checkpoint": [34, 35], "3": [34, 35, 36, 37, 38, 39], "4": [34, 35, 36, 37, 38, 39], "prepar": [34, 35, 36, 37, 38, 39], "5": [34, 35, 36, 37, 38, 39], "6": [34, 35, 36, 37, 38, 39], "evalu": [34, 35], "7": [34, 35, 36, 37, 38, 39], "export": [34, 35, 36, 37, 38, 39], "8": [34, 35, 36, 37, 38], "infer": [34, 35], "remot": 35, "sens": 35, "scene": 35, "resisc": 35, "pytorch": [36, 37], "": 36, "torchvis": 36, "predict": [36, 37, 38, 39], "origin": [36, 38], "argument": [36, 37, 38, 39], "custom": [36, 38], "singl": [36, 38], "huggingfac": 37, "save": [37, 39], "9": 38, "post": 38, "quick": 40, "build": 40, "basic": 40, "advanc": 40, "develop": 40, "addit": 40, "specif": 40, "disclaim": 40, "licens": 40}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Intel\u00ae Transfer Learning Tool": [[0, "intel-transfer-learning-tool"], [32, "intel-transfer-learning-tool"]], "Overview": [[0, "overview"]], "Hardware Requirements": [[0, "hardware-requirements"]], "How it Works": [[0, "how-it-works"]], "Get Started": [[0, "get-started"]], "Requirements": [[0, "requirements"]], "Install": [[0, "install"]], "Use the CLI": [[0, "use-the-cli"]], "Use the API": [[0, "use-the-api"]], "Summary and Next Steps": [[0, "summary-and-next-steps"]], "Tutorial Jupyter* Notebooks": [[0, "tutorial-jupyter-notebooks"]], "Examples": [[0, "examples"]], "Support": [[0, "support"]], "tlt.datasets.dataset.BaseDataset": [[1, "tlt-datasets-dataset-basedataset"]], "tlt.datasets.hf_dataset.HFDataset": [[2, "tlt-datasets-hf-dataset-hfdataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[3, "tlt-datasets-image-classification-image-classification-dataset-imageclassificationdataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[4, "tlt-datasets-image-classification-pytorch-custom-image-classification-dataset-pytorchcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[5, "tlt-datasets-image-classification-tf-custom-image-classification-dataset-tfcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset": [[6, "tlt-datasets-image-classification-tf-image-classification-dataset-tfimageclassificationdataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[7, "tlt-datasets-image-classification-torchvision-image-classification-dataset-torchvisionimageclassificationdataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[8, "tlt-datasets-pytorch-dataset-pytorchdataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[9, "tlt-datasets-text-classification-hf-custom-text-classification-dataset-hfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[10, "tlt-datasets-text-classification-hf-text-classification-dataset-hftextclassificationdataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[11, "tlt-datasets-text-classification-text-classification-dataset-textclassificationdataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[12, "tlt-datasets-text-classification-tf-custom-text-classification-dataset-tfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[13, "tlt-datasets-text-classification-tfds-text-classification-dataset-tfdstextclassificationdataset"]], "tlt.datasets.tf_dataset.TFDataset": [[14, "tlt-datasets-tf-dataset-tfdataset"]], "tlt.models.hf_model.HFModel": [[15, "tlt-models-hf-model-hfmodel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[16, "tlt-models-image-classification-image-classification-model-imageclassificationmodel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[17, "tlt-models-image-classification-pytorch-image-classification-model-pytorchimageclassificationmodel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[18, "tlt-models-image-classification-tf-image-classification-model-tfimageclassificationmodel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[19, "tlt-models-image-classification-tfhub-image-classification-model-tfhubimageclassificationmodel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[20, "tlt-models-image-classification-torchvision-image-classification-model-torchvisionimageclassificationmodel"]], "tlt.models.model.BaseModel": [[21, "tlt-models-model-basemodel"]], "tlt.models.pytorch_model.PyTorchModel": [[22, "tlt-models-pytorch-model-pytorchmodel"]], "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel": [[23, "tlt-models-text-classification-hf-text-classification-model-hftextclassificationmodel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[24, "tlt-models-text-classification-text-classification-model-textclassificationmodel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[25, "tlt-models-text-classification-tf-text-classification-model-tftextclassificationmodel"]], "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel": [[26, "tlt-models-text-classification-tfhub-text-classification-model-tfhubtextclassificationmodel"]], "tlt.models.tf_model.TFModel": [[27, "tlt-models-tf-model-tfmodel"]], "API Reference": [[28, "api-reference"]], "Datasets": [[28, "datasets"]], "Factory Methods": [[28, "module-tlt.datasets.dataset_factory"], [28, "id1"]], "Class Reference": [[28, "class-reference"], [28, "id2"]], "Image Classification": [[28, "image-classification"], [28, "id3"]], "Text Classification": [[28, "text-classification"], [28, "id4"]], "Base Classes": [[28, "base-classes"], [28, "id5"]], "Models": [[28, "models"], [32, "models"]], "CLI Reference": [[29, "cli-reference"]], "tlt": [[29, "tlt"]], "benchmark": [[29, "tlt-benchmark"]], "eval": [[29, "tlt-eval"]], "list": [[29, "tlt-list"]], "frameworks": [[29, "tlt-list-frameworks"]], "models": [[29, "tlt-list-models"]], "use_cases": [[29, "tlt-list-use-cases"]], "optimize": [[29, "tlt-optimize"]], "quantize": [[29, "tlt-quantize"]], "train": [[29, "tlt-train"]], "Image Classification Intel\u00ae Transfer Learning Tool CLI Examples": [[30, "image-classification-intel-transfer-learning-tool-cli-examples"]], "Transfer learning using your own dataset": [[30, "transfer-learning-using-your-own-dataset"]], "Transfer learning using a dataset from the TFDS catalog": [[30, "transfer-learning-using-a-dataset-from-the-tfds-catalog"]], "Citations": [[30, "citations"], [31, "citations"], [37, "Citations"], [39, "Citations"]], "Text Classification Intel Transfer Learning Tool CLI Examples": [[31, "text-classification-intel-transfer-learning-tool-cli-examples"]], "Fine tuning using your own dataset": [[31, "fine-tuning-using-your-own-dataset"]], "Fine tuning using a dataset from the TFDS catalog": [[31, "fine-tuning-using-a-dataset-from-the-tfds-catalog"]], "Distributed transfer learning using a dataset from Hugging Face": [[31, "distributed-transfer-learning-using-a-dataset-from-hugging-face"]], "Goals": [[32, "goals"]], "Features": [[32, "features"], [40, "features"]], "Transfer Learning Tool Tutorial Notebooks": [[32, "id1"], [33, "id1"]], "Native Framework Transfer Learning Notebooks": [[32, "id2"]], "Transfer Learning Tool End-to-End Pipelines": [[32, "id3"], [33, "id2"]], "Contents": [[32, null]], "Indices and tables": [[32, "indices-and-tables"]], "Example Notebooks": [[33, "example-notebooks"]], "Environment Setup and Running the Notebooks": [[33, "environment-setup-and-running-the-notebooks"]], "Install Intel\u00ae Transfer Learning Tool": [[33, "install-intel-transfer-learning-tool"]], "Notebook Environment": [[33, "notebook-environment"]], "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[34, "Medical-Imaging-Classification-(Colorectal-histology)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "1. Import dependencies and setup parameters": [[34, "1.-Import-dependencies-and-setup-parameters"], [35, "1.-Import-dependencies-and-setup-parameters"], [36, "1.-Import-dependencies-and-setup-parameters"], [37, "1.-Import-dependencies-and-setup-parameters"], [38, "1.-Import-dependencies-and-setup-parameters"], [39, "1.-Import-dependencies-and-setup-parameters"]], "2. Get the model": [[34, "2.-Get-the-model"], [35, "2.-Get-the-model"], [36, "2.-Get-the-model"], [37, "2.-Get-the-model"], [38, "2.-Get-the-model"], [39, "2.-Get-the-model"]], "Option A: Load a model": [[34, "Option-A:-Load-a-model"], [35, "Option-A:-Load-a-model"]], "Option B: Load a pretrained checkpoint": [[34, "Option-B:-Load-a-pretrained-checkpoint"], [35, "Option-B:-Load-a-pretrained-checkpoint"]], "3. Get the dataset": [[34, "3.-Get-the-dataset"], [35, "3.-Get-the-dataset"], [36, "3.-Get-the-dataset"], [37, "3.-Get-the-dataset"], [38, "3.-Get-the-dataset"], [39, "3.-Get-the-dataset"]], "4. Prepare the dataset": [[34, "4.-Prepare-the-dataset"], [35, "4.-Prepare-the-dataset"], [36, "4.-Prepare-the-dataset"], [37, "4.-Prepare-the-dataset"], [38, "4.-Prepare-the-dataset"], [39, "4.-Prepare-the-dataset"]], "5. Transfer Learning": [[34, "5.-Transfer-Learning"], [35, "5.-Transfer-Learning"]], "6. Evaluate": [[34, "6.-Evaluate"], [35, "6.-Evaluate"]], "7. Export": [[34, "7.-Export"], [35, "7.-Export"]], "8. Inference": [[34, "8.-Inference"], [35, "8.-Inference"]], "Dataset Citations": [[34, "Dataset-Citations"], [35, "Dataset-Citations"], [36, "Dataset-Citations"], [38, "Dataset-Citations"]], "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[35, "Remote-Sensing-Image-Scene-Classification-(Resisc)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API": [[36, "Transfer-Learning-for-Image-Classification-using-PyTorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option A: Use your own dataset": [[36, "Option-A:-Use-your-own-dataset"], [37, "Option-A:-Use-your-own-dataset"], [38, "Option-A:-Use-your-own-dataset"], [39, "Option-A:-Use-your-own-dataset"]], "Option B: Use a dataset from the PyTorch\u2019s Torchvision Datasets catalog": [[36, "Option-B:-Use-a-dataset-from-the-PyTorch's-Torchvision-Datasets-catalog"]], "5. Predict using the original model": [[36, "5.-Predict-using-the-original-model"], [38, "5.-Predict-using-the-original-model"]], "6. Transfer Learning": [[36, "6.-Transfer-Learning"], [38, "6.-Transfer-Learning"]], "Arguments": [[36, "Arguments"], [37, "Arguments"], [38, "Arguments"], [39, "Arguments"]], "Required": [[36, "Required"], [37, "Required"], [38, "Required"], [39, "Required"]], "Optional": [[36, "Optional"], [37, "Optional"], [38, "Optional"], [39, "Optional"]], "7. Predict": [[36, "7.-Predict"], [38, "7.-Predict"]], "Custom Single Image Prediction": [[36, "Custom-Single-Image-Prediction"], [38, "Custom-Single-Image-Prediction"]], "8. Export": [[36, "8.-Export"], [38, "8.-Export"]], "Text Classification fine tuning using Pytorch and the Intel\u00ae Transfer Learning Tool API": [[37, "Text-Classification-fine-tuning-using-Pytorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the HuggingFace catalog": [[37, "Option-B:-Use-the-HuggingFace-catalog"]], "5. Fine tuning": [[37, "5.-Fine-tuning"], [39, "5.-Fine-tuning"]], "6. Predict": [[37, "6.-Predict"], [39, "6.-Predict"]], "Predict on Text": [[37, "Predict-on-Text"]], "7. Export the saved model": [[37, "7.-Export-the-saved-model"], [39, "7.-Export-the-saved-model"]], "8. Quantization": [[37, "8.-Quantization"]], "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[38, "Transfer-Learning-for-Image-Classification-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use a dataset from the TensorFlow Datasets catalog": [[38, "Option-B:-Use-a-dataset-from-the-TensorFlow-Datasets-catalog"]], "9. Post-training quantization": [[38, "9.-Post-training-quantization"]], "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[39, "Text-Classification-fine-tuning-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the TFDS catalog": [[39, "Option-B:-Use-the-TFDS-catalog"]], "Intel\u00ae Transfer Learning Tool Quick Start": [[40, "intel-transfer-learning-tool-quick-start"]], "Build and Install": [[40, "build-and-install"]], "Basic Installation:": [[40, "basic-installation"]], "Advanced/Developer Installation:": [[40, "advanced-developer-installation"]], "Additional Feature-Specific Steps:": [[40, "additional-feature-specific-steps"]], "Getting Started with the CLI": [[40, "getting-started-with-the-cli"]], "Getting Started with the API": [[40, "getting-started-with-the-api"]], "DISCLAIMER:": [[40, "disclaimer"]], "License:": [[40, "license"]], "Datasets:": [[40, "datasets"]]}, "indexentries": {"basedataset (class in tlt.datasets.dataset)": [[1, "tlt.datasets.dataset.BaseDataset"]], "__init__() (tlt.datasets.dataset.basedataset method)": [[1, "tlt.datasets.dataset.BaseDataset.__init__"]], "hfdataset (class in tlt.datasets.hf_dataset)": [[2, "tlt.datasets.hf_dataset.HFDataset"]], "__init__() (tlt.datasets.hf_dataset.hfdataset method)": [[2, "tlt.datasets.hf_dataset.HFDataset.__init__"]], "imageclassificationdataset (class in tlt.datasets.image_classification.image_classification_dataset)": [[3, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.image_classification_dataset.imageclassificationdataset method)": [[3, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.__init__"]], "pytorchcustomimageclassificationdataset (class in tlt.datasets.image_classification.pytorch_custom_image_classification_dataset)": [[4, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.pytorchcustomimageclassificationdataset method)": [[4, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.__init__"]], "tfcustomimageclassificationdataset (class in tlt.datasets.image_classification.tf_custom_image_classification_dataset)": [[5, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tf_custom_image_classification_dataset.tfcustomimageclassificationdataset method)": [[5, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.__init__"]], "tfimageclassificationdataset (class in tlt.datasets.image_classification.tf_image_classification_dataset)": [[6, "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tf_image_classification_dataset.tfimageclassificationdataset method)": [[6, "tlt.datasets.image_classification.tf_image_classification_dataset.TFImageClassificationDataset.__init__"]], "torchvisionimageclassificationdataset (class in tlt.datasets.image_classification.torchvision_image_classification_dataset)": [[7, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.torchvision_image_classification_dataset.torchvisionimageclassificationdataset method)": [[7, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.__init__"]], "pytorchdataset (class in tlt.datasets.pytorch_dataset)": [[8, "tlt.datasets.pytorch_dataset.PyTorchDataset"]], "__init__() (tlt.datasets.pytorch_dataset.pytorchdataset method)": [[8, "tlt.datasets.pytorch_dataset.PyTorchDataset.__init__"]], "hfcustomtextclassificationdataset (class in tlt.datasets.text_classification.hf_custom_text_classification_dataset)": [[9, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_custom_text_classification_dataset.hfcustomtextclassificationdataset method)": [[9, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.__init__"]], "hftextclassificationdataset (class in tlt.datasets.text_classification.hf_text_classification_dataset)": [[10, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_text_classification_dataset.hftextclassificationdataset method)": [[10, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.__init__"]], "textclassificationdataset (class in tlt.datasets.text_classification.text_classification_dataset)": [[11, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.text_classification_dataset.textclassificationdataset method)": [[11, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.__init__"]], "tfcustomtextclassificationdataset (class in tlt.datasets.text_classification.tf_custom_text_classification_dataset)": [[12, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tf_custom_text_classification_dataset.tfcustomtextclassificationdataset method)": [[12, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.__init__"]], "tfdstextclassificationdataset (class in tlt.datasets.text_classification.tfds_text_classification_dataset)": [[13, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tfds_text_classification_dataset.tfdstextclassificationdataset method)": [[13, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.__init__"]], "tfdataset (class in tlt.datasets.tf_dataset)": [[14, "tlt.datasets.tf_dataset.TFDataset"]], "__init__() (tlt.datasets.tf_dataset.tfdataset method)": [[14, "tlt.datasets.tf_dataset.TFDataset.__init__"]], "hfmodel (class in tlt.models.hf_model)": [[15, "tlt.models.hf_model.HFModel"]], "__init__() (tlt.models.hf_model.hfmodel method)": [[15, "tlt.models.hf_model.HFModel.__init__"]], "imageclassificationmodel (class in tlt.models.image_classification.image_classification_model)": [[16, "tlt.models.image_classification.image_classification_model.ImageClassificationModel"]], "__init__() (tlt.models.image_classification.image_classification_model.imageclassificationmodel method)": [[16, "tlt.models.image_classification.image_classification_model.ImageClassificationModel.__init__"]], "pytorchimageclassificationmodel (class in tlt.models.image_classification.pytorch_image_classification_model)": [[17, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel"]], "__init__() (tlt.models.image_classification.pytorch_image_classification_model.pytorchimageclassificationmodel method)": [[17, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.__init__"]], "tfimageclassificationmodel (class in tlt.models.image_classification.tf_image_classification_model)": [[18, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel"]], "__init__() (tlt.models.image_classification.tf_image_classification_model.tfimageclassificationmodel method)": [[18, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.__init__"]], "tfhubimageclassificationmodel (class in tlt.models.image_classification.tfhub_image_classification_model)": [[19, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel"]], "__init__() (tlt.models.image_classification.tfhub_image_classification_model.tfhubimageclassificationmodel method)": [[19, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.__init__"]], "torchvisionimageclassificationmodel (class in tlt.models.image_classification.torchvision_image_classification_model)": [[20, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel"]], "__init__() (tlt.models.image_classification.torchvision_image_classification_model.torchvisionimageclassificationmodel method)": [[20, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.__init__"]], "basemodel (class in tlt.models.model)": [[21, "tlt.models.model.BaseModel"]], "__init__() (tlt.models.model.basemodel method)": [[21, "tlt.models.model.BaseModel.__init__"]], "pytorchmodel (class in tlt.models.pytorch_model)": [[22, "tlt.models.pytorch_model.PyTorchModel"]], "__init__() (tlt.models.pytorch_model.pytorchmodel method)": [[22, "tlt.models.pytorch_model.PyTorchModel.__init__"]], "hftextclassificationmodel (class in tlt.models.text_classification.hf_text_classification_model)": [[23, "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel"]], "__init__() (tlt.models.text_classification.hf_text_classification_model.hftextclassificationmodel method)": [[23, "tlt.models.text_classification.hf_text_classification_model.HFTextClassificationModel.__init__"]], "textclassificationmodel (class in tlt.models.text_classification.text_classification_model)": [[24, "tlt.models.text_classification.text_classification_model.TextClassificationModel"]], "__init__() (tlt.models.text_classification.text_classification_model.textclassificationmodel method)": [[24, "tlt.models.text_classification.text_classification_model.TextClassificationModel.__init__"]], "tftextclassificationmodel (class in tlt.models.text_classification.tf_text_classification_model)": [[25, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel"]], "__init__() (tlt.models.text_classification.tf_text_classification_model.tftextclassificationmodel method)": [[25, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.__init__"]], "tfhubtextclassificationmodel (class in tlt.models.text_classification.tfhub_text_classification_model)": [[26, "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel"]], "__init__() (tlt.models.text_classification.tfhub_text_classification_model.tfhubtextclassificationmodel method)": [[26, "tlt.models.text_classification.tfhub_text_classification_model.TFHubTextClassificationModel.__init__"]], "tfmodel (class in tlt.models.tf_model)": [[27, "tlt.models.tf_model.TFModel"]], "__init__() (tlt.models.tf_model.tfmodel method)": [[27, "tlt.models.tf_model.TFModel.__init__"]], "get_dataset() (in module tlt.datasets.dataset_factory)": [[28, "tlt.datasets.dataset_factory.get_dataset"]], "get_model() (in module tlt.models.model_factory)": [[28, "tlt.models.model_factory.get_model"]], "get_supported_models() (in module tlt.models.model_factory)": [[28, "tlt.models.model_factory.get_supported_models"]], "load_dataset() (in module tlt.datasets.dataset_factory)": [[28, "tlt.datasets.dataset_factory.load_dataset"]], "load_model() (in module tlt.models.model_factory)": [[28, "tlt.models.model_factory.load_model"]], "module": [[28, "module-tlt.datasets.dataset_factory"], [28, "module-tlt.models.model_factory"]], "print_supported_models() (in module tlt.models.model_factory)": [[28, "tlt.models.model_factory.print_supported_models"]], "tlt.datasets.dataset_factory": [[28, "module-tlt.datasets.dataset_factory"]], "tlt.models.model_factory": [[28, "module-tlt.models.model_factory"]], "--accuracy-criterion": [[29, "cmdoption-tlt-quantize-accuracy-criterion"]], "--accuracy_criterion": [[29, "cmdoption-tlt-quantize-accuracy-criterion"]], "--add-aug": [[29, "cmdoption-tlt-train-add-aug"]], "--add_aug": [[29, "cmdoption-tlt-train-add-aug"]], "--batch-size": [[29, "cmdoption-tlt-benchmark-batch-size"], [29, "cmdoption-tlt-quantize-batch-size"]], "--batch_size": [[29, "cmdoption-tlt-benchmark-batch-size"], [29, "cmdoption-tlt-quantize-batch-size"]], "--class-names": [[29, "cmdoption-tlt-eval-class-names"], [29, "cmdoption-tlt-train-class-names"]], "--class_names": [[29, "cmdoption-tlt-eval-class-names"], [29, "cmdoption-tlt-train-class-names"]], "--dataset-catalog": [[29, "cmdoption-tlt-eval-dataset-catalog"], [29, "cmdoption-tlt-train-dataset-catalog"]], "--dataset-dir": [[29, "cmdoption-tlt-benchmark-dataset-dir"], [29, "cmdoption-tlt-eval-dataset-dir"], [29, "cmdoption-tlt-quantize-dataset-dir"], [29, "cmdoption-tlt-train-dataset-dir"]], "--dataset-file": [[29, "cmdoption-tlt-eval-dataset-file"], [29, "cmdoption-tlt-train-dataset-file"]], "--dataset-name": [[29, "cmdoption-tlt-eval-dataset-name"], [29, "cmdoption-tlt-train-dataset-name"]], "--dataset_catalog": [[29, "cmdoption-tlt-eval-dataset-catalog"], [29, "cmdoption-tlt-train-dataset-catalog"]], "--dataset_dir": [[29, "cmdoption-tlt-benchmark-dataset-dir"], [29, "cmdoption-tlt-eval-dataset-dir"], [29, "cmdoption-tlt-quantize-dataset-dir"], [29, "cmdoption-tlt-train-dataset-dir"]], "--dataset_file": [[29, "cmdoption-tlt-eval-dataset-file"], [29, "cmdoption-tlt-train-dataset-file"]], "--dataset_name": [[29, "cmdoption-tlt-eval-dataset-name"], [29, "cmdoption-tlt-train-dataset-name"]], "--delimiter": [[29, "cmdoption-tlt-eval-delimiter"], [29, "cmdoption-tlt-train-delimiter"]], "--distributed": [[29, "cmdoption-tlt-train-d"]], "--early-stopping": [[29, "cmdoption-tlt-train-early-stopping"]], "--early_stopping": [[29, "cmdoption-tlt-train-early-stopping"]], "--epochs": [[29, "cmdoption-tlt-train-epochs"]], "--framework": [[29, "cmdoption-tlt-list-models-f"], [29, "cmdoption-tlt-train-f"]], "--hostfile": [[29, "cmdoption-tlt-train-hostfile"]], "--inc-config": [[29, "cmdoption-tlt-benchmark-inc-config"], [29, "cmdoption-tlt-quantize-inc-config"]], "--inc_config": [[29, "cmdoption-tlt-benchmark-inc-config"], [29, "cmdoption-tlt-quantize-inc-config"]], "--init-checkpoints": [[29, "cmdoption-tlt-train-init-checkpoints"]], "--init_checkpoints": [[29, "cmdoption-tlt-train-init-checkpoints"]], "--ipex_optimize": [[29, "cmdoption-tlt-train-ipex_optimize"]], "--lr-decay": [[29, "cmdoption-tlt-train-lr-decay"]], "--lr_decay": [[29, "cmdoption-tlt-train-lr-decay"]], "--max-trials": [[29, "cmdoption-tlt-quantize-max-trials"]], "--max_trials": [[29, "cmdoption-tlt-quantize-max-trials"]], "--mode": [[29, "cmdoption-tlt-benchmark-mode"]], "--model-dir": [[29, "cmdoption-tlt-benchmark-model-dir"], [29, "cmdoption-tlt-eval-model-dir"], [29, "cmdoption-tlt-optimize-model-dir"], [29, "cmdoption-tlt-quantize-model-dir"]], "--model-name": [[29, "cmdoption-tlt-eval-model-name"], [29, "cmdoption-tlt-train-model-name"]], "--model_dir": [[29, "cmdoption-tlt-benchmark-model-dir"], [29, "cmdoption-tlt-eval-model-dir"], [29, "cmdoption-tlt-optimize-model-dir"], [29, "cmdoption-tlt-quantize-model-dir"]], "--model_name": [[29, "cmdoption-tlt-eval-model-name"], [29, "cmdoption-tlt-train-model-name"]], "--nnodes": [[29, "cmdoption-tlt-train-nnodes"]], "--nproc_per_node": [[29, "cmdoption-tlt-train-nproc_per_node"]], "--output-dir": [[29, "cmdoption-tlt-benchmark-output-dir"], [29, "cmdoption-tlt-optimize-output-dir"], [29, "cmdoption-tlt-quantize-output-dir"], [29, "cmdoption-tlt-train-output-dir"]], "--output_dir": [[29, "cmdoption-tlt-benchmark-output-dir"], [29, "cmdoption-tlt-optimize-output-dir"], [29, "cmdoption-tlt-quantize-output-dir"], [29, "cmdoption-tlt-train-output-dir"]], "--timeout": [[29, "cmdoption-tlt-quantize-timeout"]], "--use-case": [[29, "cmdoption-tlt-list-models-use-case"]], "--use_case": [[29, "cmdoption-tlt-list-models-use-case"]], "--verbose": [[29, "cmdoption-tlt-list-models-verbose"]], "-d": [[29, "cmdoption-tlt-train-d"]], "-f": [[29, "cmdoption-tlt-list-models-f"], [29, "cmdoption-tlt-train-f"]], "tlt-benchmark command line option": [[29, "cmdoption-tlt-benchmark-batch-size"], [29, "cmdoption-tlt-benchmark-dataset-dir"], [29, "cmdoption-tlt-benchmark-inc-config"], [29, "cmdoption-tlt-benchmark-mode"], [29, "cmdoption-tlt-benchmark-model-dir"], [29, "cmdoption-tlt-benchmark-output-dir"]], "tlt-eval command line option": [[29, "cmdoption-tlt-eval-class-names"], [29, "cmdoption-tlt-eval-dataset-catalog"], [29, "cmdoption-tlt-eval-dataset-dir"], [29, "cmdoption-tlt-eval-dataset-file"], [29, "cmdoption-tlt-eval-dataset-name"], [29, "cmdoption-tlt-eval-delimiter"], [29, "cmdoption-tlt-eval-model-dir"], [29, "cmdoption-tlt-eval-model-name"]], "tlt-list-models command line option": [[29, "cmdoption-tlt-list-models-f"], [29, "cmdoption-tlt-list-models-use-case"], [29, "cmdoption-tlt-list-models-verbose"]], "tlt-optimize command line option": [[29, "cmdoption-tlt-optimize-model-dir"], [29, "cmdoption-tlt-optimize-output-dir"]], "tlt-quantize command line option": [[29, "cmdoption-tlt-quantize-accuracy-criterion"], [29, "cmdoption-tlt-quantize-batch-size"], [29, "cmdoption-tlt-quantize-dataset-dir"], [29, "cmdoption-tlt-quantize-inc-config"], [29, "cmdoption-tlt-quantize-max-trials"], [29, "cmdoption-tlt-quantize-model-dir"], [29, "cmdoption-tlt-quantize-output-dir"], [29, "cmdoption-tlt-quantize-timeout"]], "tlt-train command line option": [[29, "cmdoption-tlt-train-add-aug"], [29, "cmdoption-tlt-train-class-names"], [29, "cmdoption-tlt-train-d"], [29, "cmdoption-tlt-train-dataset-catalog"], [29, "cmdoption-tlt-train-dataset-dir"], [29, "cmdoption-tlt-train-dataset-file"], [29, "cmdoption-tlt-train-dataset-name"], [29, "cmdoption-tlt-train-delimiter"], [29, "cmdoption-tlt-train-early-stopping"], [29, "cmdoption-tlt-train-epochs"], [29, "cmdoption-tlt-train-f"], [29, "cmdoption-tlt-train-hostfile"], [29, "cmdoption-tlt-train-init-checkpoints"], [29, "cmdoption-tlt-train-ipex_optimize"], [29, "cmdoption-tlt-train-lr-decay"], [29, "cmdoption-tlt-train-model-name"], [29, "cmdoption-tlt-train-nnodes"], [29, "cmdoption-tlt-train-nproc_per_node"], [29, "cmdoption-tlt-train-output-dir"]]}})